2024-07-20 14:18:25,813 - INFO - Starting EQUICAT training
2024-07-20 14:18:25,813 - INFO - Loaded conformer ensemble from /Users/utkarsh/MMLI/molli-data/00-libraries/bpa_aligned.clib
Initialized ConformerDataset with 1 conformer ensembles
Retrieved conformer ensemble 247_vi with 293 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  6,  6,  1,  8,  8, 15,  6,
         6,  6,  6,  1,  1,  1,  1,  1,  1,  1,  1,  6,  6,  6,  6,  1,  1,  1,
         1,  1,  1,  1,  1,  8,  8,  1,  6,  6,  1,  6,  1,  6,  1,  6,  6,  1,
         6,  1,  6,  1,  6,  1,  6,  6,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,
         6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,  6,  6,
         6,  1,  6,  1,  6,  1,  6,  1])

Processing Conformer Ensemble: 247_vi
Number of conformers in this ensemble: 293

Batch 1 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.68

Batch 2 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.08

Batch 3 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.94

Batch 4 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.95

Batch 5 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.70

Batch 6 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.76

Batch 7 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.85

Batch 8 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.62

Batch 9 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57

Batch 10 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.53

Batch 11 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.38

Batch 12 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.49

Batch 13 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57

Batch 14 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.31

Batch 15 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.59

Batch 16 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.72

Batch 17 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.84

Batch 18 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.79

Batch 19 in Ensemble: 247_vi
Number of conformers in this batch: 5
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.75

Finished processing Conformer Ensemble: 247_vi
==================================================

Total number of batches processed: 19
Total number of conformers processed: 293
2024-07-20 14:18:26,099 - INFO - Initializing model configuration...
2024-07-20 14:18:26,099 - INFO - Unique atomic numbers in dataset: [6, 1, 8, 15]
2024-07-20 14:18:26,099 - INFO - Average number of neighbors across dataset: 22.7435397367138
2024-07-20 14:18:26,099 - INFO - Initialized dataset with 1 conformer ensembles
2024-07-20 14:18:26,099 - INFO - Model initialization complete. Starting training...
2024-07-20 14:18:26,099 - INFO - Model configuration: {'r_max': 5.0, 'num_bessel': 8, 'num_polynomial_cutoff': 6, 'max_ell': 2, 'num_interactions': 2, 'num_elements': 4, 'interaction_cls': <class 'mace.modules.blocks.RealAgnosticResidualInteractionBlock'>, 'interaction_cls_first': <class 'mace.modules.blocks.RealAgnosticResidualInteractionBlock'>, 'hidden_irreps': 32x0e+32x1o, 'MLP_irreps': 16x0e, 'atomic_energies': array([0., 0., 0., 0.], dtype=float32), 'correlation': 3, 'gate': <function silu at 0x1093a3ba0>, 'avg_num_neighbors': 22.7435397367138}
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICATPlusNonLinearReadout(
  (equicat): EQUICAT(
    (model): MACE(
      (node_embedding): LinearNodeEmbeddingBlock(
        (linear): Linear(4x0e -> 32x0e | 128 weights)
      )
      (radial_embedding): RadialEmbeddingBlock(
        (bessel_fn): BesselBasis(r_max=5.0, num_basis=8, trainable=False)
        (cutoff_fn): PolynomialCutoff(p=6.0, r_max=5.0)
      )
      (spherical_harmonics): SphericalHarmonics()
      (atomic_energies_fn): AtomicEnergiesBlock(energies=[0.0000, 0.0000, 0.0000, 0.0000])
      (interactions): ModuleList(
        (0): RealAgnosticResidualInteractionBlock(
          (linear_up): Linear(32x0e -> 32x0e | 1024 weights)
          (conv_tp): TensorProduct(32x0e x 1x0e+1x1o+1x2e -> 32x0e+32x1o+32x2e | 96 paths | 96 weights)
          (conv_tp_weights): FullyConnectedNet[8, 64, 64, 64, 96]
          (linear): Linear(32x0e+32x1o+32x2e -> 32x0e+32x1o+32x2e | 3072 weights)
          (skip_tp): FullyConnectedTensorProduct(32x0e x 4x0e -> 32x0e+32x1o | 4096 paths | 4096 weights)
          (reshape): reshape_irreps()
        )
        (1): RealAgnosticResidualInteractionBlock(
          (linear_up): Linear(32x0e+32x1o -> 32x0e+32x1o | 2048 weights)
          (conv_tp): TensorProduct(32x0e+32x1o x 1x0e+1x1o+1x2e -> 64x0e+96x1o+64x2e | 224 paths | 224 weights)
          (conv_tp_weights): FullyConnectedNet[8, 64, 64, 64, 224]
          (linear): Linear(64x0e+96x1o+64x2e -> 32x0e+32x1o+32x2e | 7168 weights)
          (skip_tp): FullyConnectedTensorProduct(32x0e+32x1o x 4x0e -> 32x0e | 4096 paths | 4096 weights)
          (reshape): reshape_irreps()
        )
      )
      (products): ModuleList(
        (0): EquivariantProductBasisBlock(
          (symmetric_contractions): SymmetricContraction(
            (contractions): ModuleList(
              (0): Contraction(
                (contractions_weighting): ModuleList(
                  (0-1): 2 x GraphModule()
                )
                (contractions_features): ModuleList(
                  (0-1): 2 x GraphModule()
                )
                (weights): ParameterList(
                    (0): Parameter containing: [torch.float32 of size 4x3x32]
                    (1): Parameter containing: [torch.float32 of size 4x1x32]
                )
                (graph_opt_main): GraphModule()
              )
              (1): Contraction(
                (contractions_weighting): ModuleList(
                  (0-1): 2 x GraphModule()
                )
                (contractions_features): ModuleList(
                  (0-1): 2 x GraphModule()
                )
                (weights): ParameterList(
                    (0): Parameter containing: [torch.float32 of size 4x4x32]
                    (1): Parameter containing: [torch.float32 of size 4x1x32]
                )
                (graph_opt_main): GraphModule()
              )
            )
          )
          (linear): Linear(32x0e+32x1o -> 32x0e+32x1o | 2048 weights)
        )
        (1): EquivariantProductBasisBlock(
          (symmetric_contractions): SymmetricContraction(
            (contractions): ModuleList(
              (0): Contraction(
                (contractions_weighting): ModuleList(
                  (0-1): 2 x GraphModule()
                )
                (contractions_features): ModuleList(
                  (0-1): 2 x GraphModule()
                )
                (weights): ParameterList(
                    (0): Parameter containing: [torch.float32 of size 4x3x32]
                    (1): Parameter containing: [torch.float32 of size 4x1x32]
                )
                (graph_opt_main): GraphModule()
              )
            )
          )
          (linear): Linear(32x0e -> 32x0e | 1024 weights)
        )
      )
      (readouts): ModuleList(
        (0): LinearReadoutBlock(
          (linear): Linear(32x0e+32x1o -> 1x0e | 32 weights)
        )
        (1): NonLinearReadoutBlock(
          (linear_1): Linear(32x0e -> 16x0e | 512 weights)
          (non_linearity): Activation [x] (16x0e -> 16x0e)
          (linear_2): Linear(16x0e -> 1x0e | 16 weights)
        )
      )
    )
    (interaction_layers): ModuleList(
      (0): RealAgnosticResidualInteractionBlock(
        (linear_up): Linear(32x0e -> 32x0e | 1024 weights)
        (conv_tp): TensorProduct(32x0e x 1x0e+1x1o+1x2e -> 32x0e+32x1o+32x2e | 96 paths | 96 weights)
        (conv_tp_weights): FullyConnectedNet[8, 64, 64, 64, 96]
        (linear): Linear(32x0e+32x1o+32x2e -> 32x0e+32x1o+32x2e | 3072 weights)
        (skip_tp): FullyConnectedTensorProduct(32x0e x 4x0e -> 32x0e+32x1o | 4096 paths | 4096 weights)
        (reshape): reshape_irreps()
      )
      (1): RealAgnosticResidualInteractionBlock(
        (linear_up): Linear(32x0e+32x1o -> 32x0e+32x1o | 2048 weights)
        (conv_tp): TensorProduct(32x0e+32x1o x 1x0e+1x1o+1x2e -> 64x0e+96x1o+64x2e | 224 paths | 224 weights)
        (conv_tp_weights): FullyConnectedNet[8, 64, 64, 64, 224]
        (linear): Linear(64x0e+96x1o+64x2e -> 32x0e+32x1o+32x2e | 7168 weights)
        (skip_tp): FullyConnectedTensorProduct(32x0e+32x1o x 4x0e -> 32x0e | 4096 paths | 4096 weights)
        (reshape): reshape_irreps()
      )
    )
    (product_layers): ModuleList(
      (0): EquivariantProductBasisBlock(
        (symmetric_contractions): SymmetricContraction(
          (contractions): ModuleList(
            (0): Contraction(
              (contractions_weighting): ModuleList(
                (0-1): 2 x GraphModule()
              )
              (contractions_features): ModuleList(
                (0-1): 2 x GraphModule()
              )
              (weights): ParameterList(
                  (0): Parameter containing: [torch.float32 of size 4x3x32]
                  (1): Parameter containing: [torch.float32 of size 4x1x32]
              )
              (graph_opt_main): GraphModule()
            )
            (1): Contraction(
              (contractions_weighting): ModuleList(
                (0-1): 2 x GraphModule()
              )
              (contractions_features): ModuleList(
                (0-1): 2 x GraphModule()
              )
              (weights): ParameterList(
                  (0): Parameter containing: [torch.float32 of size 4x4x32]
                  (1): Parameter containing: [torch.float32 of size 4x1x32]
              )
              (graph_opt_main): GraphModule()
            )
          )
        )
        (linear): Linear(32x0e+32x1o -> 32x0e+32x1o | 2048 weights)
      )
      (1): EquivariantProductBasisBlock(
        (symmetric_contractions): SymmetricContraction(
          (contractions): ModuleList(
            (0): Contraction(
              (contractions_weighting): ModuleList(
                (0-1): 2 x GraphModule()
              )
              (contractions_features): ModuleList(
                (0-1): 2 x GraphModule()
              )
              (weights): ParameterList(
                  (0): Parameter containing: [torch.float32 of size 4x3x32]
                  (1): Parameter containing: [torch.float32 of size 4x1x32]
              )
              (graph_opt_main): GraphModule()
            )
          )
        )
        (linear): Linear(32x0e -> 32x0e | 1024 weights)
      )
    )
  )
  (non_linear_readout): CustomNonLinearReadout(
    (linear_1): Linear(32x0e -> 16x0e+16x1o | 512 weights)
    (non_linearity_1): Activation [x ] (16x0e+16x1o -> 16x0e+16x1o)
    (linear_2): Linear(16x0e+16x1o -> 16x0e+16x1o | 512 weights)
    (non_linearity_2): Activation [x ] (16x0e+16x1o -> 16x0e+16x1o)
    (linear_3): Linear(16x0e+16x1o -> 8x0e+8x1o | 256 weights)
  )
)
2024-07-20 14:18:26,700 - INFO - Model initialized
2024-07-20 14:18:26,701 - INFO - Optimizer initialized with learning rate: 0.001
Initialized ConformerDataset with 1 conformer ensembles
2024-07-20 14:18:26,701 - INFO - Dataset initialized with 1 ensembles
Retrieved conformer ensemble 247_vi with 293 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  6,  6,  1,  8,  8, 15,  6,
         6,  6,  6,  1,  1,  1,  1,  1,  1,  1,  1,  6,  6,  6,  6,  1,  1,  1,
         1,  1,  1,  1,  1,  8,  8,  1,  6,  6,  1,  6,  1,  6,  1,  6,  6,  1,
         6,  1,  6,  1,  6,  1,  6,  6,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,
         6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,  6,  6,
         6,  1,  6,  1,  6,  1,  6,  1])

Processing Conformer Ensemble: 247_vi
Number of conformers in this ensemble: 293

Batch 1 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.68
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:27,517 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.3753637969493866
2024-07-20 14:18:28,002 - INFO - Epoch [1/5], Batch [1], Loss: 0.3754

Batch 2 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.08
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:28,317 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.27001720666885376
2024-07-20 14:18:28,933 - INFO - Epoch [1/5], Batch [2], Loss: 0.2700

Batch 3 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.94
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:29,262 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.2441788762807846
2024-07-20 14:18:29,705 - INFO - Epoch [1/5], Batch [3], Loss: 0.2442

Batch 4 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.95
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:30,079 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.2073398232460022
2024-07-20 14:18:30,550 - INFO - Epoch [1/5], Batch [4], Loss: 0.2073

Batch 5 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.70
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:30,880 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.1187196671962738
2024-07-20 14:18:31,308 - INFO - Epoch [1/5], Batch [5], Loss: 0.1187

Batch 6 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.76
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:31,599 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.12168807536363602
2024-07-20 14:18:32,035 - INFO - Epoch [1/5], Batch [6], Loss: 0.1217

Batch 7 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.85
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:32,342 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.11371909081935883
2024-07-20 14:18:32,753 - INFO - Epoch [1/5], Batch [7], Loss: 0.1137

Batch 8 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.62
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:33,073 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.0924464613199234
2024-07-20 14:18:33,468 - INFO - Epoch [1/5], Batch [8], Loss: 0.0924

Batch 9 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:33,763 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.0740828588604927
2024-07-20 14:18:34,171 - INFO - Epoch [1/5], Batch [9], Loss: 0.0741

Batch 10 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.53
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:34,467 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.05834679678082466
2024-07-20 14:18:34,917 - INFO - Epoch [1/5], Batch [10], Loss: 0.0583

Batch 11 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.38
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:35,314 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.04870087280869484
2024-07-20 14:18:35,786 - INFO - Epoch [1/5], Batch [11], Loss: 0.0487

Batch 12 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.49
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:36,120 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.05038971081376076
2024-07-20 14:18:36,548 - INFO - Epoch [1/5], Batch [12], Loss: 0.0504

Batch 13 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:36,863 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.04991348460316658
2024-07-20 14:18:37,307 - INFO - Epoch [1/5], Batch [13], Loss: 0.0499

Batch 14 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.31
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:37,684 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.029347864910960197
2024-07-20 14:18:38,392 - INFO - Epoch [1/5], Batch [14], Loss: 0.0293

Batch 15 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.59
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:38,715 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.058431170880794525
2024-07-20 14:18:39,147 - INFO - Epoch [1/5], Batch [15], Loss: 0.0584

Batch 16 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.72
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:39,498 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.05802014097571373
2024-07-20 14:18:39,965 - INFO - Epoch [1/5], Batch [16], Loss: 0.0580

Batch 17 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.84
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:40,257 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.05346953868865967
2024-07-20 14:18:40,672 - INFO - Epoch [1/5], Batch [17], Loss: 0.0535

Batch 18 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.79
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:40,964 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.04163675755262375
2024-07-20 14:18:41,353 - INFO - Epoch [1/5], Batch [18], Loss: 0.0416

Batch 19 in Ensemble: 247_vi
Number of conformers in this batch: 5
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.75
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:41,453 - INFO - Embeddings shape: torch.Size([5, 98, 32]), Loss: 0.0527343675494194
2024-07-20 14:18:41,613 - INFO - Epoch [1/5], Batch [19], Loss: 0.0527

Finished processing Conformer Ensemble: 247_vi
==================================================

Total number of batches processed: 19
Total number of conformers processed: 293
2024-07-20 14:18:41,615 - INFO - Epoch [1/5], Average Loss: 0.1115
Retrieved conformer ensemble 247_vi with 293 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  6,  6,  1,  8,  8, 15,  6,
         6,  6,  6,  1,  1,  1,  1,  1,  1,  1,  1,  6,  6,  6,  6,  1,  1,  1,
         1,  1,  1,  1,  1,  8,  8,  1,  6,  6,  1,  6,  1,  6,  1,  6,  6,  1,
         6,  1,  6,  1,  6,  1,  6,  6,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,
         6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,  6,  6,
         6,  1,  6,  1,  6,  1,  6,  1])

Processing Conformer Ensemble: 247_vi
Number of conformers in this ensemble: 293

Batch 1 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.68
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:42,131 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.04186975955963135
2024-07-20 14:18:42,560 - INFO - Epoch [2/5], Batch [1], Loss: 0.0419

Batch 2 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.08
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:42,860 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.034710392355918884
2024-07-20 14:18:43,273 - INFO - Epoch [2/5], Batch [2], Loss: 0.0347

Batch 3 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.94
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:43,561 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.03174338489770889
2024-07-20 14:18:43,991 - INFO - Epoch [2/5], Batch [3], Loss: 0.0317

Batch 4 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.95
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:44,283 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.027702076360583305
2024-07-20 14:18:44,738 - INFO - Epoch [2/5], Batch [4], Loss: 0.0277

Batch 5 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.70
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:45,059 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.01970972679555416
2024-07-20 14:18:45,452 - INFO - Epoch [2/5], Batch [5], Loss: 0.0197

Batch 6 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.76
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:45,763 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.023537222295999527
2024-07-20 14:18:46,230 - INFO - Epoch [2/5], Batch [6], Loss: 0.0235

Batch 7 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.85
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:46,525 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.024029556661844254
2024-07-20 14:18:47,005 - INFO - Epoch [2/5], Batch [7], Loss: 0.0240

Batch 8 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.62
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:47,336 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.021884998306632042
2024-07-20 14:18:47,778 - INFO - Epoch [2/5], Batch [8], Loss: 0.0219

Batch 9 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:48,094 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.019765498116612434
2024-07-20 14:18:48,650 - INFO - Epoch [2/5], Batch [9], Loss: 0.0198

Batch 10 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.53
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:49,001 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.01597742922604084
2024-07-20 14:18:49,462 - INFO - Epoch [2/5], Batch [10], Loss: 0.0160

Batch 11 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.38
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:49,768 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.014430025592446327
2024-07-20 14:18:50,280 - INFO - Epoch [2/5], Batch [11], Loss: 0.0144

Batch 12 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.49
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:50,574 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.016145342960953712
2024-07-20 14:18:51,011 - INFO - Epoch [2/5], Batch [12], Loss: 0.0161

Batch 13 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:51,299 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.01677415333688259
2024-07-20 14:18:51,713 - INFO - Epoch [2/5], Batch [13], Loss: 0.0168

Batch 14 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.31
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:52,019 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.009895353578031063
2024-07-20 14:18:52,443 - INFO - Epoch [2/5], Batch [14], Loss: 0.0099

Batch 15 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.59
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:52,754 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.019983386620879173
2024-07-20 14:18:53,195 - INFO - Epoch [2/5], Batch [15], Loss: 0.0200

Batch 16 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.72
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:53,492 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.020179064944386482
2024-07-20 14:18:53,942 - INFO - Epoch [2/5], Batch [16], Loss: 0.0202

Batch 17 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.84
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:54,245 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.018384259194135666
2024-07-20 14:18:54,649 - INFO - Epoch [2/5], Batch [17], Loss: 0.0184

Batch 18 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.79
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:54,976 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.015589443035423756
2024-07-20 14:18:55,464 - INFO - Epoch [2/5], Batch [18], Loss: 0.0156

Batch 19 in Ensemble: 247_vi
Number of conformers in this batch: 5
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.75
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:55,563 - INFO - Embeddings shape: torch.Size([5, 98, 32]), Loss: 0.02029692381620407
2024-07-20 14:18:55,718 - INFO - Epoch [2/5], Batch [19], Loss: 0.0203

Finished processing Conformer Ensemble: 247_vi
==================================================

Total number of batches processed: 19
Total number of conformers processed: 293
2024-07-20 14:18:55,721 - INFO - Epoch [2/5], Average Loss: 0.0217
Retrieved conformer ensemble 247_vi with 293 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  6,  6,  1,  8,  8, 15,  6,
         6,  6,  6,  1,  1,  1,  1,  1,  1,  1,  1,  6,  6,  6,  6,  1,  1,  1,
         1,  1,  1,  1,  1,  8,  8,  1,  6,  6,  1,  6,  1,  6,  1,  6,  6,  1,
         6,  1,  6,  1,  6,  1,  6,  6,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,
         6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,  6,  6,
         6,  1,  6,  1,  6,  1,  6,  1])

Processing Conformer Ensemble: 247_vi
Number of conformers in this ensemble: 293

Batch 1 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.68
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:56,257 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.019196126610040665
2024-07-20 14:18:56,695 - INFO - Epoch [3/5], Batch [1], Loss: 0.0192

Batch 2 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.08
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:57,064 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.016098473221063614
2024-07-20 14:18:57,915 - INFO - Epoch [3/5], Batch [2], Loss: 0.0161

Batch 3 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.94
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:58,268 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.014477833174169064
2024-07-20 14:18:58,746 - INFO - Epoch [3/5], Batch [3], Loss: 0.0145

Batch 4 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.95
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:59,071 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.013362864963710308
2024-07-20 14:18:59,525 - INFO - Epoch [3/5], Batch [4], Loss: 0.0134

Batch 5 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.70
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:18:59,848 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.00938066840171814
2024-07-20 14:19:00,308 - INFO - Epoch [3/5], Batch [5], Loss: 0.0094

Batch 6 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.76
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:00,606 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.011540783569216728
2024-07-20 14:19:01,110 - INFO - Epoch [3/5], Batch [6], Loss: 0.0115

Batch 7 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.85
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:01,418 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.011887338012456894
2024-07-20 14:19:01,848 - INFO - Epoch [3/5], Batch [7], Loss: 0.0119

Batch 8 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.62
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:02,177 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.01067707221955061
2024-07-20 14:19:02,647 - INFO - Epoch [3/5], Batch [8], Loss: 0.0107

Batch 9 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:02,970 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.010208277963101864
2024-07-20 14:19:03,360 - INFO - Epoch [3/5], Batch [9], Loss: 0.0102

Batch 10 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.53
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:03,655 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.008330535143613815
2024-07-20 14:19:04,094 - INFO - Epoch [3/5], Batch [10], Loss: 0.0083

Batch 11 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.38
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:04,394 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.007882868871092796
2024-07-20 14:19:04,864 - INFO - Epoch [3/5], Batch [11], Loss: 0.0079

Batch 12 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.49
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:05,182 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.008991388604044914
2024-07-20 14:19:05,595 - INFO - Epoch [3/5], Batch [12], Loss: 0.0090

Batch 13 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:05,889 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.009493563324213028
2024-07-20 14:19:06,307 - INFO - Epoch [3/5], Batch [13], Loss: 0.0095

Batch 14 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.31
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:06,619 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005695834755897522
2024-07-20 14:19:07,109 - INFO - Epoch [3/5], Batch [14], Loss: 0.0057

Batch 15 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.59
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:07,450 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.011102108284831047
2024-07-20 14:19:07,901 - INFO - Epoch [3/5], Batch [15], Loss: 0.0111

Batch 16 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.72
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:08,250 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.011297974735498428
2024-07-20 14:19:08,703 - INFO - Epoch [3/5], Batch [16], Loss: 0.0113

Batch 17 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.84
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:09,004 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.010181858204305172
2024-07-20 14:19:09,410 - INFO - Epoch [3/5], Batch [17], Loss: 0.0102

Batch 18 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.79
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:09,703 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.008912230841815472
2024-07-20 14:19:10,129 - INFO - Epoch [3/5], Batch [18], Loss: 0.0089

Batch 19 in Ensemble: 247_vi
Number of conformers in this batch: 5
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.75
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:10,232 - INFO - Embeddings shape: torch.Size([5, 98, 32]), Loss: 0.011665059253573418
2024-07-20 14:19:10,398 - INFO - Epoch [3/5], Batch [19], Loss: 0.0117

Finished processing Conformer Ensemble: 247_vi
==================================================

Total number of batches processed: 19
Total number of conformers processed: 293
2024-07-20 14:19:10,401 - INFO - Epoch [3/5], Average Loss: 0.0111
Retrieved conformer ensemble 247_vi with 293 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  6,  6,  1,  8,  8, 15,  6,
         6,  6,  6,  1,  1,  1,  1,  1,  1,  1,  1,  6,  6,  6,  6,  1,  1,  1,
         1,  1,  1,  1,  1,  8,  8,  1,  6,  6,  1,  6,  1,  6,  1,  6,  6,  1,
         6,  1,  6,  1,  6,  1,  6,  6,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,
         6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,  6,  6,
         6,  1,  6,  1,  6,  1,  6,  1])

Processing Conformer Ensemble: 247_vi
Number of conformers in this ensemble: 293

Batch 1 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.68
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:10,970 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.012510585598647594
2024-07-20 14:19:11,621 - INFO - Epoch [4/5], Batch [1], Loss: 0.0125

Batch 2 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.08
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:11,958 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.01055195089429617
2024-07-20 14:19:12,442 - INFO - Epoch [4/5], Batch [2], Loss: 0.0106

Batch 3 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.94
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:12,758 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.009199615567922592
2024-07-20 14:19:13,251 - INFO - Epoch [4/5], Batch [3], Loss: 0.0092

Batch 4 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.95
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:13,567 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.008925036527216434
2024-07-20 14:19:14,469 - INFO - Epoch [4/5], Batch [4], Loss: 0.0089

Batch 5 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.70
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:15,064 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006304941140115261
2024-07-20 14:19:15,734 - INFO - Epoch [4/5], Batch [5], Loss: 0.0063

Batch 6 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.76
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:16,341 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.007871654815971851
2024-07-20 14:19:17,091 - INFO - Epoch [4/5], Batch [6], Loss: 0.0079

Batch 7 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.85
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:17,498 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.00818625558167696
2024-07-20 14:19:18,468 - INFO - Epoch [4/5], Batch [7], Loss: 0.0082

Batch 8 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.62
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:18,890 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.007429133169353008
2024-07-20 14:19:19,514 - INFO - Epoch [4/5], Batch [8], Loss: 0.0074

Batch 9 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:19,900 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.00720707792788744
2024-07-20 14:19:20,562 - INFO - Epoch [4/5], Batch [9], Loss: 0.0072

Batch 10 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.53
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:21,102 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005828269757330418
2024-07-20 14:19:22,075 - INFO - Epoch [4/5], Batch [10], Loss: 0.0058

Batch 11 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.38
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:22,507 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005602954886853695
2024-07-20 14:19:23,107 - INFO - Epoch [4/5], Batch [11], Loss: 0.0056

Batch 12 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.49
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:23,619 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006438865326344967
2024-07-20 14:19:24,162 - INFO - Epoch [4/5], Batch [12], Loss: 0.0064

Batch 13 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:24,549 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006709284149110317
2024-07-20 14:19:25,144 - INFO - Epoch [4/5], Batch [13], Loss: 0.0067

Batch 14 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.31
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:25,533 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.004080692771822214
2024-07-20 14:19:26,062 - INFO - Epoch [4/5], Batch [14], Loss: 0.0041

Batch 15 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.59
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:26,435 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.007960980758070946
2024-07-20 14:19:27,019 - INFO - Epoch [4/5], Batch [15], Loss: 0.0080

Batch 16 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.72
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:27,446 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.00818630401045084
2024-07-20 14:19:28,109 - INFO - Epoch [4/5], Batch [16], Loss: 0.0082

Batch 17 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.84
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:28,503 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.007160009816288948
2024-07-20 14:19:29,053 - INFO - Epoch [4/5], Batch [17], Loss: 0.0072

Batch 18 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.79
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:29,552 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.00636979890987277
2024-07-20 14:19:30,338 - INFO - Epoch [4/5], Batch [18], Loss: 0.0064

Batch 19 in Ensemble: 247_vi
Number of conformers in this batch: 5
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.75
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:30,496 - INFO - Embeddings shape: torch.Size([5, 98, 32]), Loss: 0.008296390995383263
2024-07-20 14:19:30,732 - INFO - Epoch [4/5], Batch [19], Loss: 0.0083

Finished processing Conformer Ensemble: 247_vi
==================================================

Total number of batches processed: 19
Total number of conformers processed: 293
2024-07-20 14:19:30,737 - INFO - Epoch [4/5], Average Loss: 0.0076
Retrieved conformer ensemble 247_vi with 293 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  6,  6,  1,  8,  8, 15,  6,
         6,  6,  6,  1,  1,  1,  1,  1,  1,  1,  1,  6,  6,  6,  6,  1,  1,  1,
         1,  1,  1,  1,  1,  8,  8,  1,  6,  6,  1,  6,  1,  6,  1,  6,  6,  1,
         6,  1,  6,  1,  6,  1,  6,  6,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,
         6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,  6,  6,
         6,  1,  6,  1,  6,  1,  6,  1])

Processing Conformer Ensemble: 247_vi
Number of conformers in this ensemble: 293

Batch 1 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.68
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:31,588 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.00939455721527338
2024-07-20 14:19:32,120 - INFO - Epoch [5/5], Batch [1], Loss: 0.0094

Batch 2 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 23.08
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:32,512 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.007890084758400917
2024-07-20 14:19:33,082 - INFO - Epoch [5/5], Batch [2], Loss: 0.0079

Batch 3 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.94
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:33,469 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006878269370645285
2024-07-20 14:19:34,043 - INFO - Epoch [5/5], Batch [3], Loss: 0.0069

Batch 4 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.95
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:34,456 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006687549874186516
2024-07-20 14:19:35,054 - INFO - Epoch [5/5], Batch [4], Loss: 0.0067

Batch 5 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.70
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:35,480 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.00472106970846653
2024-07-20 14:19:36,101 - INFO - Epoch [5/5], Batch [5], Loss: 0.0047

Batch 6 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.76
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:36,490 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005934427492320538
2024-07-20 14:19:37,092 - INFO - Epoch [5/5], Batch [6], Loss: 0.0059

Batch 7 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.85
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:37,446 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006158366799354553
2024-07-20 14:19:38,123 - INFO - Epoch [5/5], Batch [7], Loss: 0.0062

Batch 8 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.62
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:38,578 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005626177880913019
2024-07-20 14:19:39,412 - INFO - Epoch [5/5], Batch [8], Loss: 0.0056

Batch 9 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:40,097 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005448625423014164
2024-07-20 14:19:40,633 - INFO - Epoch [5/5], Batch [9], Loss: 0.0054

Batch 10 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.53
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:41,058 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.004376932978630066
2024-07-20 14:19:41,794 - INFO - Epoch [5/5], Batch [10], Loss: 0.0044

Batch 11 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.38
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:42,152 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.0043067787773907185
2024-07-20 14:19:42,669 - INFO - Epoch [5/5], Batch [11], Loss: 0.0043

Batch 12 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.49
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:43,044 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005026327911764383
2024-07-20 14:19:43,592 - INFO - Epoch [5/5], Batch [12], Loss: 0.0050

Batch 13 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.57
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:43,955 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005188002251088619
2024-07-20 14:19:44,478 - INFO - Epoch [5/5], Batch [13], Loss: 0.0052

Batch 14 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.31
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:44,894 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.0031736562959849834
2024-07-20 14:19:45,558 - INFO - Epoch [5/5], Batch [14], Loss: 0.0032

Batch 15 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.59
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:46,206 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006225116550922394
2024-07-20 14:19:46,926 - INFO - Epoch [5/5], Batch [15], Loss: 0.0062

Batch 16 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.72
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:47,554 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.006419704295694828
2024-07-20 14:19:48,672 - INFO - Epoch [5/5], Batch [16], Loss: 0.0064

Batch 17 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.84
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:49,183 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.005477589555084705
2024-07-20 14:19:50,457 - INFO - Epoch [5/5], Batch [17], Loss: 0.0055

Batch 18 in Ensemble: 247_vi
Number of conformers in this batch: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.79
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:51,364 - INFO - Embeddings shape: torch.Size([16, 98, 32]), Loss: 0.004933846183121204
2024-07-20 14:19:51,975 - INFO - Epoch [5/5], Batch [18], Loss: 0.0049

Batch 19 in Ensemble: 247_vi
Number of conformers in this batch: 5
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 22.75
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
Node features after layer 1 shape: torch.Size([98, 128])
Node features after layer 2 shape: torch.Size([98, 32])
EQUICAT output shape: torch.Size([98, 32])
Input shape to CustomNonLinearReadout: torch.Size([98, 32])
Final output shape after NonLinearReadout: torch.Size([98, 32])
2024-07-20 14:19:52,099 - INFO - Embeddings shape: torch.Size([5, 98, 32]), Loss: 0.006365195848047733
2024-07-20 14:19:52,283 - INFO - Epoch [5/5], Batch [19], Loss: 0.0064

Finished processing Conformer Ensemble: 247_vi
==================================================

Total number of batches processed: 19
Total number of conformers processed: 293
2024-07-20 14:19:52,288 - INFO - Epoch [5/5], Average Loss: 0.0058
2024-07-20 14:19:52,288 - INFO - Training completed
2024-07-20 14:19:52,297 - INFO - Model training completed and saved.
