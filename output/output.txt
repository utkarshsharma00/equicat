Using device: cpu
Padding batches: False
Initialized ConformerDataset with 2 conformer ensembles
Retrieved conformer ensemble 63_i with 61 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  1,  1,  1,  1,  6,  6,  6,
         6,  6,  6,  1,  6,  6,  6,  6,  1,  1,  1,  1,  8,  8, 15,  8,  8,  1,
         6,  6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  1,  6,  6,
         1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,  6,  1,  6,  1,  6,  1,  6,
         1,  6,  6,  1,  6,  1])
Coords shape: torch.Size([61, 78, 3])
Number of conformers in atomic_data_list: 61

Processing Conformer Ensemble: 63_i
Number of conformers in this ensemble: 61
Batch size: 16
Padding enabled: False

Batch 1 in Ensemble: 63_i
Number of conformers in this batch before padding: 16
Number of conformers in this batch after padding: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 20.71

Processing batch of 16 conformers from Ensemble 0

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1630])
  Number of nodes: 78
  Number of edges: 1630

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1610])
  Number of nodes: 78
  Number of edges: 1610

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1610])
  Number of nodes: 78
  Number of edges: 1610

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1606])
  Number of nodes: 78
  Number of edges: 1606

Sanity check for conformer 4 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1620])
  Number of nodes: 78
  Number of edges: 1620

Sanity check for conformer 5 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1622])
  Number of nodes: 78
  Number of edges: 1622

Sanity check for conformer 6 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1616])
  Number of nodes: 78
  Number of edges: 1616

Sanity check for conformer 7 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1624])
  Number of nodes: 78
  Number of edges: 1624

Sanity check for conformer 8 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1602])
  Number of nodes: 78
  Number of edges: 1602

Sanity check for conformer 9 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1612])
  Number of nodes: 78
  Number of edges: 1612

Sanity check for conformer 10 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1610])
  Number of nodes: 78
  Number of edges: 1610

Sanity check for conformer 11 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1634])
  Number of nodes: 78
  Number of edges: 1634

Sanity check for conformer 12 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1602])
  Number of nodes: 78
  Number of edges: 1602

Sanity check for conformer 13 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1622])
  Number of nodes: 78
  Number of edges: 1622

Sanity check for conformer 14 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1618])
  Number of nodes: 78
  Number of edges: 1618

Sanity check for conformer 15 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1602])
  Number of nodes: 78
  Number of edges: 1602
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1630])
Edge attributes shape: torch.Size([1630, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1630, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1630, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1630, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1610])
Edge attributes shape: torch.Size([1610, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1610, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1610, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1610, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1610])
Edge attributes shape: torch.Size([1610, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1610, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1610, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1610, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1606])
Edge attributes shape: torch.Size([1606, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1606, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1606, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1606, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1620])
Edge attributes shape: torch.Size([1620, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1620, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1620, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1620, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 4 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1622])
Edge attributes shape: torch.Size([1622, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1622, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1622, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1622, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 5 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1616])
Edge attributes shape: torch.Size([1616, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1616, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1616, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1616, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 6 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1624])
Edge attributes shape: torch.Size([1624, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1624, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1624, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1624, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 7 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1602])
Edge attributes shape: torch.Size([1602, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1602, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1602, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1602, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 8 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1612])
Edge attributes shape: torch.Size([1612, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1612, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1612, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1612, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 9 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1610])
Edge attributes shape: torch.Size([1610, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1610, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1610, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1610, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 10 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1634])
Edge attributes shape: torch.Size([1634, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1634, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1634, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1634, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 11 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1602])
Edge attributes shape: torch.Size([1602, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1602, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1602, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1602, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 12 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1622])
Edge attributes shape: torch.Size([1622, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1622, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1622, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1622, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 13 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1618])
Edge attributes shape: torch.Size([1618, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1618, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1618, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1618, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 14 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1602])
Edge attributes shape: torch.Size([1602, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1602, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1602, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1602, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 15 embeddings shape: torch.Size([78, 32])
process_conformer_ensemble input shape: torch.Size([16, 78, 32])
Num conformers: 16, Num atoms: 78, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0190, std: 0.0953
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0015, std: 0.0012, min: 0.0001, max: 0.0035
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.1100, std: 0.1550
    Vector mean: 0.0373, std: 0.1258
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0001, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0523, std: 0.1566
    Vector mean: -0.0016, std: 0.1182
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0001, std: 0.0001, min: 0.0000, max: 0.0002
  improved_deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0342, std: 0.1280
    Vector mean: -0.0358, std: 0.1269
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0097, std: 0.2076
    Vector mean: -0.0734, std: 0.2867
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0026, std: 0.0018, min: 0.0004, max: 0.0068
      Vector - mean: 0.0027, std: 0.0016, min: 0.0007, max: 0.0054

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.1257,  0.1677, -0.1180, -0.0777,  0.1122, -0.0249, -0.0453,  0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.1227,  0.1612, -0.1132, -0.0745,  0.1108, -0.0242, -0.0430,  0.0108],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.1222,  0.1610, -0.1131, -0.0744,  0.1107, -0.0241, -0.0428,  0.0108],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.1227,  0.1609, -0.1130, -0.0743,  0.1108, -0.0243, -0.0430,  0.0109],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.1256,  0.1676, -0.1179, -0.0775,  0.1119, -0.0247, -0.0452,  0.0117],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.1253,  0.1677, -0.1181, -0.0775,  0.1118, -0.0245, -0.0452,  0.0118],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.1257,  0.1677, -0.1180, -0.0774,  0.1119, -0.0246, -0.0453,  0.0117],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.1236,  0.1574, -0.1098, -0.0724,  0.1109, -0.0238, -0.0441,  0.0112],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.1225,  0.1574, -0.1098, -0.0725,  0.1110, -0.0233, -0.0435,  0.0105],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.1236,  0.1580, -0.1101, -0.0726,  0.1110, -0.0232, -0.0442,  0.0112],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.1239,  0.1577, -0.1100, -0.0723,  0.1108, -0.0236, -0.0443,  0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.1265,  0.1638, -0.1145, -0.0753,  0.1120, -0.0243, -0.0463,  0.0120],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.1228,  0.1590, -0.1112, -0.0735,  0.1111, -0.0238, -0.0433,  0.0105],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.1256,  0.1644, -0.1148, -0.0757,  0.1120, -0.0236, -0.0458,  0.0114],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.1238,  0.1582, -0.1102, -0.0726,  0.1107, -0.0233, -0.0443,  0.0114],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.1230,  0.1584, -0.1103, -0.0728,  0.1108, -0.0229, -0.0439,  0.0108],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.1558, -0.1998,  0.0876, -0.2580,  0.0033,  0.1423, -0.2053, -0.2946],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.1558, -0.1998,  0.0877, -0.2580,  0.0033,  0.1423, -0.2052, -0.2947],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.1558, -0.1998,  0.0877, -0.2580,  0.0033,  0.1423, -0.2052, -0.2947],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.1558, -0.1998,  0.0877, -0.2580,  0.0032,  0.1423, -0.2052, -0.2947],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.1558, -0.1998,  0.0876, -0.2580,  0.0033,  0.1423, -0.2053, -0.2946],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.1558, -0.1998,  0.0876, -0.2580,  0.0034,  0.1423, -0.2053, -0.2945],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.1558, -0.1998,  0.0876, -0.2580,  0.0033,  0.1423, -0.2053, -0.2946],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.1559, -0.1997,  0.0877, -0.2580,  0.0032,  0.1423, -0.2051, -0.2948],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.1559, -0.1997,  0.0877, -0.2580,  0.0032,  0.1423, -0.2051, -0.2948],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.1559, -0.1997,  0.0877, -0.2580,  0.0032,  0.1423, -0.2051, -0.2948],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.1559, -0.1997,  0.0877, -0.2580,  0.0032,  0.1423, -0.2051, -0.2948],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.1558, -0.1998,  0.0876, -0.2580,  0.0033,  0.1423, -0.2053, -0.2947],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.1559, -0.1997,  0.0877, -0.2580,  0.0032,  0.1423, -0.2051, -0.2948],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.1558, -0.1998,  0.0876, -0.2580,  0.0033,  0.1423, -0.2052, -0.2947],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.1559, -0.1997,  0.0877, -0.2580,  0.0032,  0.1423, -0.2051, -0.2948],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.1559, -0.1997,  0.0877, -0.2580,  0.0033,  0.1423, -0.2051, -0.2948],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.0549,  0.0102, -0.0939],
        [-0.0406,  0.0783, -0.1350],
        [ 0.0954, -0.1502, -0.1587],
        [ 0.1580,  0.2325,  0.1453],
        [-0.0541,  0.1867,  0.1882],
        [ 0.1248, -0.1484,  0.0482],
        [-0.0063,  0.1372, -0.1190],
        [ 0.1963,  0.1223,  0.1328]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0634,  0.0125,  0.0681,  0.3319,  0.2517, -0.1558,  0.0563, -0.0825],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0633,  0.0125,  0.0682,  0.3317,  0.2517, -0.1558,  0.0563, -0.0826],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0632,  0.0125,  0.0682,  0.3317,  0.2517, -0.1558,  0.0563, -0.0826],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0632,  0.0125,  0.0682,  0.3317,  0.2517, -0.1558,  0.0563, -0.0826],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0634,  0.0125,  0.0681,  0.3319,  0.2517, -0.1558,  0.0563, -0.0825],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0634,  0.0125,  0.0681,  0.3318,  0.2517, -0.1558,  0.0563, -0.0826],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0634,  0.0125,  0.0681,  0.3319,  0.2517, -0.1558,  0.0563, -0.0825],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0632,  0.0125,  0.0683,  0.3317,  0.2518, -0.1558,  0.0563, -0.0827],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0632,  0.0125,  0.0682,  0.3317,  0.2517, -0.1558,  0.0563, -0.0827],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0632,  0.0125,  0.0682,  0.3317,  0.2518, -0.1558,  0.0563, -0.0827],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0632,  0.0125,  0.0683,  0.3317,  0.2518, -0.1558,  0.0563, -0.0827],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0633,  0.0125,  0.0682,  0.3318,  0.2518, -0.1558,  0.0563, -0.0826],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0632,  0.0125,  0.0682,  0.3317,  0.2517, -0.1558,  0.0563, -0.0826],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0633,  0.0125,  0.0682,  0.3318,  0.2517, -0.1558,  0.0563, -0.0826],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0632,  0.0125,  0.0682,  0.3317,  0.2518, -0.1558,  0.0563, -0.0827],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0632,  0.0125,  0.0682,  0.3317,  0.2517, -0.1558,  0.0563, -0.0827],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0558,  0.1379, -0.1915],
        [-0.0453, -0.1344,  0.2088],
        [-0.1775, -0.1736, -0.0088],
        [ 0.0848, -0.0017, -0.0185],
        [ 0.1091,  0.0328,  0.1274],
        [-0.1013, -0.0727, -0.1753],
        [-0.0812,  0.0724, -0.0637],
        [ 0.1033,  0.1782,  0.0948]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0557,  0.1377, -0.1914],
        [-0.0453, -0.1343,  0.2086],
        [-0.1772, -0.1735, -0.0087],
        [ 0.0847, -0.0017, -0.0187],
        [ 0.1090,  0.0329,  0.1273],
        [-0.1013, -0.0731, -0.1751],
        [-0.0813,  0.0725, -0.0633],
        [ 0.1035,  0.1785,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0557,  0.1377, -0.1914],
        [-0.0453, -0.1343,  0.2085],
        [-0.1772, -0.1735, -0.0087],
        [ 0.0847, -0.0017, -0.0188],
        [ 0.1090,  0.0329,  0.1273],
        [-0.1013, -0.0731, -0.1751],
        [-0.0813,  0.0725, -0.0633],
        [ 0.1035,  0.1785,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0557,  0.1377, -0.1914],
        [-0.0453, -0.1343,  0.2086],
        [-0.1772, -0.1735, -0.0087],
        [ 0.0847, -0.0017, -0.0187],
        [ 0.1090,  0.0329,  0.1273],
        [-0.1013, -0.0731, -0.1751],
        [-0.0813,  0.0725, -0.0633],
        [ 0.1035,  0.1785,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.0558,  0.1379, -0.1915],
        [-0.0453, -0.1344,  0.2088],
        [-0.1775, -0.1736, -0.0088],
        [ 0.0848, -0.0017, -0.0185],
        [ 0.1091,  0.0328,  0.1274],
        [-0.1013, -0.0727, -0.1753],
        [-0.0812,  0.0724, -0.0637],
        [ 0.1034,  0.1782,  0.0948]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.0558,  0.1379, -0.1915],
        [-0.0453, -0.1344,  0.2088],
        [-0.1775, -0.1736, -0.0088],
        [ 0.0848, -0.0017, -0.0186],
        [ 0.1091,  0.0328,  0.1274],
        [-0.1013, -0.0728, -0.1753],
        [-0.0812,  0.0724, -0.0637],
        [ 0.1034,  0.1782,  0.0948]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.0558,  0.1379, -0.1915],
        [-0.0453, -0.1344,  0.2088],
        [-0.1775, -0.1736, -0.0088],
        [ 0.0848, -0.0017, -0.0185],
        [ 0.1091,  0.0328,  0.1274],
        [-0.1013, -0.0727, -0.1753],
        [-0.0812,  0.0724, -0.0637],
        [ 0.1034,  0.1782,  0.0948]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.0556,  0.1375, -0.1913],
        [-0.0453, -0.1342,  0.2086],
        [-0.1771, -0.1735, -0.0085],
        [ 0.0847, -0.0017, -0.0187],
        [ 0.1089,  0.0330,  0.1272],
        [-0.1013, -0.0731, -0.1750],
        [-0.0814,  0.0726, -0.0631],
        [ 0.1036,  0.1786,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.0557,  0.1375, -0.1913],
        [-0.0453, -0.1342,  0.2085],
        [-0.1771, -0.1734, -0.0086],
        [ 0.0847, -0.0017, -0.0188],
        [ 0.1090,  0.0330,  0.1272],
        [-0.1013, -0.0732, -0.1750],
        [-0.0813,  0.0725, -0.0631],
        [ 0.1036,  0.1787,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.0556,  0.1375, -0.1913],
        [-0.0453, -0.1342,  0.2085],
        [-0.1771, -0.1735, -0.0086],
        [ 0.0847, -0.0017, -0.0187],
        [ 0.1090,  0.0330,  0.1272],
        [-0.1013, -0.0731, -0.1750],
        [-0.0813,  0.0725, -0.0632],
        [ 0.1036,  0.1786,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.0556,  0.1375, -0.1913],
        [-0.0453, -0.1342,  0.2086],
        [-0.1771, -0.1735, -0.0085],
        [ 0.0847, -0.0017, -0.0187],
        [ 0.1090,  0.0330,  0.1272],
        [-0.1013, -0.0731, -0.1750],
        [-0.0814,  0.0726, -0.0632],
        [ 0.1036,  0.1786,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.0557,  0.1377, -0.1913],
        [-0.0453, -0.1343,  0.2088],
        [-0.1773, -0.1735, -0.0086],
        [ 0.0848, -0.0017, -0.0185],
        [ 0.1091,  0.0330,  0.1273],
        [-0.1013, -0.0728, -0.1751],
        [-0.0813,  0.0725, -0.0635],
        [ 0.1034,  0.1784,  0.0948]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.0557,  0.1376, -0.1914],
        [-0.0453, -0.1343,  0.2085],
        [-0.1771, -0.1735, -0.0086],
        [ 0.0847, -0.0017, -0.0188],
        [ 0.1090,  0.0329,  0.1272],
        [-0.1013, -0.0731, -0.1751],
        [-0.0813,  0.0725, -0.0632],
        [ 0.1036,  0.1786,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.0558,  0.1377, -0.1914],
        [-0.0453, -0.1343,  0.2087],
        [-0.1774, -0.1735, -0.0087],
        [ 0.0847, -0.0017, -0.0186],
        [ 0.1091,  0.0329,  0.1273],
        [-0.1013, -0.0728, -0.1751],
        [-0.0813,  0.0725, -0.0635],
        [ 0.1034,  0.1784,  0.0949]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.0556,  0.1375, -0.1913],
        [-0.0453, -0.1342,  0.2086],
        [-0.1771, -0.1735, -0.0085],
        [ 0.0847, -0.0017, -0.0187],
        [ 0.1090,  0.0330,  0.1272],
        [-0.1013, -0.0731, -0.1750],
        [-0.0813,  0.0725, -0.0632],
        [ 0.1036,  0.1786,  0.0950]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.0557,  0.1375, -0.1913],
        [-0.0453, -0.1342,  0.2085],
        [-0.1771, -0.1734, -0.0086],
        [ 0.0847, -0.0017, -0.0188],
        [ 0.1090,  0.0330,  0.1272],
        [-0.1013, -0.0731, -0.1750],
        [-0.0813,  0.0725, -0.0632],
        [ 0.1036,  0.1786,  0.0950]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0014,  0.2295, -0.2343,  0.1554,  0.0114,  0.0689, -0.0100,  0.0519],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0013,  0.2294, -0.2342,  0.1553,  0.0113,  0.0690, -0.0100,  0.0519],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0013,  0.2294, -0.2342,  0.1553,  0.0113,  0.0690, -0.0100,  0.0519],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0013,  0.2294, -0.2342,  0.1553,  0.0113,  0.0690, -0.0100,  0.0519],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0014,  0.2295, -0.2343,  0.1554,  0.0114,  0.0689, -0.0100,  0.0519],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0014,  0.2295, -0.2343,  0.1554,  0.0114,  0.0689, -0.0100,  0.0519],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0014,  0.2295, -0.2343,  0.1554,  0.0114,  0.0689, -0.0100,  0.0519],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0013,  0.2295, -0.2343,  0.1553,  0.0113,  0.0689, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0013,  0.2295, -0.2343,  0.1553,  0.0113,  0.0689, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0013,  0.2295, -0.2343,  0.1553,  0.0113,  0.0689, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0013,  0.2295, -0.2343,  0.1553,  0.0113,  0.0689, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0014,  0.2295, -0.2343,  0.1553,  0.0113,  0.0688, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0013,  0.2294, -0.2343,  0.1553,  0.0113,  0.0690, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0014,  0.2295, -0.2343,  0.1553,  0.0114,  0.0688, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0013,  0.2295, -0.2343,  0.1553,  0.0113,  0.0689, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0013,  0.2295, -0.2343,  0.1553,  0.0113,  0.0689, -0.0101,  0.0518],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.0248,  0.0163,  0.0986],
        [ 0.1284, -0.2608, -0.1511],
        [ 0.1574, -0.2112, -0.1095],
        [-0.1586, -0.3204, -0.1629],
        [-0.1225, -0.0507,  0.0074],
        [ 0.0279,  0.0727, -0.0195],
        [-0.0125,  0.0611,  0.1603],
        [-0.0358, -0.0297,  0.0816]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0445, -0.0288, -0.3889, -0.1016,  0.0995, -0.1032,  0.1377,  0.3687],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0475, -0.0321, -0.3911, -0.1061,  0.1035, -0.1060,  0.1388,  0.3660],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0473, -0.0319, -0.3909, -0.1057,  0.1038, -0.1056,  0.1390,  0.3657],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0478, -0.0298, -0.3897, -0.1067,  0.1021, -0.1031,  0.1380,  0.3657],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0450, -0.0319, -0.3905, -0.1000,  0.1010, -0.1067,  0.1394,  0.3682],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0453, -0.0323, -0.3903, -0.0998,  0.1017, -0.1068,  0.1393,  0.3677],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0451, -0.0289, -0.3888, -0.1007,  0.0995, -0.1029,  0.1382,  0.3680],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0518, -0.0360, -0.3901, -0.1114,  0.1087, -0.1076,  0.1375,  0.3617],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0506, -0.0368, -0.3925, -0.1084,  0.1090, -0.1097,  0.1406,  0.3626],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0515, -0.0391, -0.3931, -0.1087,  0.1099, -0.1122,  0.1404,  0.3623],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0520, -0.0370, -0.3910, -0.1104,  0.1089, -0.1091,  0.1386,  0.3617],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0488, -0.0351, -0.3895, -0.1058,  0.1064, -0.1079,  0.1385,  0.3642],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0495, -0.0355, -0.3920, -0.1082,  0.1074, -0.1088,  0.1394,  0.3640],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0475, -0.0360, -0.3917, -0.1021,  0.1065, -0.1100,  0.1417,  0.3651],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0519, -0.0386, -0.3917, -0.1095,  0.1099, -0.1108,  0.1391,  0.3617],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0509, -0.0401, -0.3944, -0.1065,  0.1103, -0.1139,  0.1423,  0.3626],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.4762,  0.0899,  0.1421],
        [-0.4986, -0.4755, -0.2627],
        [ 0.4014,  0.2463,  0.5664],
        [-0.1036, -0.3776,  0.1090],
        [-0.2659, -0.2168, -0.2354],
        [ 0.0622,  0.0440, -0.3456],
        [-0.1248,  0.2722, -0.4096],
        [-0.0664,  0.2299, -0.0751]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.4710,  0.0876,  0.1440],
        [-0.4961, -0.4736, -0.2582],
        [ 0.3978,  0.2436,  0.5623],
        [-0.1043, -0.3781,  0.1132],
        [-0.2659, -0.2156, -0.2339],
        [ 0.0620,  0.0438, -0.3406],
        [-0.1243,  0.2718, -0.4064],
        [-0.0691,  0.2248, -0.0703]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.4711,  0.0881,  0.1441],
        [-0.4963, -0.4738, -0.2580],
        [ 0.3983,  0.2439,  0.5630],
        [-0.1037, -0.3782,  0.1136],
        [-0.2658, -0.2161, -0.2338],
        [ 0.0623,  0.0436, -0.3410],
        [-0.1248,  0.2715, -0.4063],
        [-0.0687,  0.2252, -0.0707]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.4696,  0.0867,  0.1432],
        [-0.4957, -0.4716, -0.2564],
        [ 0.3963,  0.2421,  0.5619],
        [-0.1039, -0.3791,  0.1115],
        [-0.2654, -0.2156, -0.2333],
        [ 0.0614,  0.0452, -0.3409],
        [-0.1229,  0.2706, -0.4035],
        [-0.0680,  0.2241, -0.0696]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.4763,  0.0904,  0.1430],
        [-0.4994, -0.4787, -0.2671],
        [ 0.4038,  0.2492,  0.5672],
        [-0.1031, -0.3744,  0.1089],
        [-0.2655, -0.2182, -0.2351],
        [ 0.0613,  0.0417, -0.3456],
        [-0.1275,  0.2753, -0.4136],
        [-0.0681,  0.2299, -0.0755]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.4759,  0.0906,  0.1426],
        [-0.4988, -0.4783, -0.2668],
        [ 0.4035,  0.2493,  0.5667],
        [-0.1029, -0.3740,  0.1092],
        [-0.2651, -0.2181, -0.2347],
        [ 0.0617,  0.0412, -0.3453],
        [-0.1278,  0.2751, -0.4130],
        [-0.0676,  0.2304, -0.0760]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.4751,  0.0900,  0.1421],
        [-0.4992, -0.4764, -0.2638],
        [ 0.4019,  0.2474,  0.5670],
        [-0.1023, -0.3764,  0.1074],
        [-0.2650, -0.2179, -0.2352],
        [ 0.0614,  0.0438, -0.3464],
        [-0.1251,  0.2728, -0.4102],
        [-0.0666,  0.2295, -0.0752]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.4691,  0.0854,  0.1426],
        [-0.4921, -0.4686, -0.2529],
        [ 0.3892,  0.2369,  0.5557],
        [-0.1054, -0.3752,  0.1189],
        [-0.2655, -0.2123, -0.2276],
        [ 0.0586,  0.0416, -0.3347],
        [-0.1257,  0.2729, -0.4008],
        [-0.0701,  0.2194, -0.0664]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.4701,  0.0860,  0.1446],
        [-0.4947, -0.4733, -0.2564],
        [ 0.3931,  0.2405,  0.5580],
        [-0.1069, -0.3759,  0.1200],
        [-0.2661, -0.2139, -0.2316],
        [ 0.0608,  0.0405, -0.3362],
        [-0.1276,  0.2751, -0.4057],
        [-0.0699,  0.2223, -0.0678]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.4709,  0.0857,  0.1442],
        [-0.4938, -0.4737, -0.2590],
        [ 0.3926,  0.2406,  0.5571],
        [-0.1075, -0.3731,  0.1198],
        [-0.2657, -0.2132, -0.2299],
        [ 0.0590,  0.0390, -0.3353],
        [-0.1285,  0.2774, -0.4070],
        [-0.0714,  0.2216, -0.0673]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.4695,  0.0851,  0.1430],
        [-0.4927, -0.4705, -0.2562],
        [ 0.3904,  0.2382,  0.5564],
        [-0.1060, -0.3738,  0.1183],
        [-0.2653, -0.2128, -0.2278],
        [ 0.0578,  0.0405, -0.3350],
        [-0.1268,  0.2753, -0.4031],
        [-0.0708,  0.2198, -0.0664]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.4757,  0.0877,  0.1434],
        [-0.4965, -0.4745, -0.2625],
        [ 0.3970,  0.2420,  0.5631],
        [-0.1044, -0.3737,  0.1160],
        [-0.2665, -0.2153, -0.2295],
        [ 0.0581,  0.0401, -0.3402],
        [-0.1289,  0.2764, -0.4089],
        [-0.0697,  0.2245, -0.0712]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.4712,  0.0869,  0.1438],
        [-0.4946, -0.4725, -0.2564],
        [ 0.3937,  0.2410,  0.5585],
        [-0.1065, -0.3764,  0.1186],
        [-0.2662, -0.2133, -0.2322],
        [ 0.0612,  0.0419, -0.3372],
        [-0.1261,  0.2737, -0.4056],
        [-0.0698,  0.2230, -0.0687]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.4768,  0.0886,  0.1455],
        [-0.4992, -0.4797, -0.2667],
        [ 0.4017,  0.2462,  0.5660],
        [-0.1053, -0.3739,  0.1166],
        [-0.2669, -0.2174, -0.2334],
        [ 0.0605,  0.0385, -0.3422],
        [-0.1312,  0.2787, -0.4143],
        [-0.0694,  0.2279, -0.0733]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.4697,  0.0862,  0.1440],
        [-0.4931, -0.4723, -0.2574],
        [ 0.3922,  0.2401,  0.5574],
        [-0.1051, -0.3729,  0.1190],
        [-0.2655, -0.2136, -0.2283],
        [ 0.0586,  0.0396, -0.3351],
        [-0.1279,  0.2755, -0.4053],
        [-0.0716,  0.2203, -0.0674]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.4712,  0.0865,  0.1459],
        [-0.4955, -0.4773, -0.2619],
        [ 0.3960,  0.2437,  0.5594],
        [-0.1072, -0.3728,  0.1201],
        [-0.2660, -0.2150, -0.2321],
        [ 0.0602,  0.0379, -0.3364],
        [-0.1301,  0.2787, -0.4108],
        [-0.0719,  0.2231, -0.0685]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Batch 2 in Ensemble: 63_i
Number of conformers in this batch before padding: 16
Number of conformers in this batch after padding: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 20.63

Processing batch of 16 conformers from Ensemble 0

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1630])
  Number of nodes: 78
  Number of edges: 1630

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1606])
  Number of nodes: 78
  Number of edges: 1606

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1604])
  Number of nodes: 78
  Number of edges: 1604

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1618])
  Number of nodes: 78
  Number of edges: 1618

Sanity check for conformer 4 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1602])
  Number of nodes: 78
  Number of edges: 1602

Sanity check for conformer 5 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1612])
  Number of nodes: 78
  Number of edges: 1612

Sanity check for conformer 6 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1626])
  Number of nodes: 78
  Number of edges: 1626

Sanity check for conformer 7 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1616])
  Number of nodes: 78
  Number of edges: 1616

Sanity check for conformer 8 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1612])
  Number of nodes: 78
  Number of edges: 1612

Sanity check for conformer 9 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1594])
  Number of nodes: 78
  Number of edges: 1594

Sanity check for conformer 10 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1622])
  Number of nodes: 78
  Number of edges: 1622

Sanity check for conformer 11 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1598])
  Number of nodes: 78
  Number of edges: 1598

Sanity check for conformer 12 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1606])
  Number of nodes: 78
  Number of edges: 1606

Sanity check for conformer 13 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1602])
  Number of nodes: 78
  Number of edges: 1602

Sanity check for conformer 14 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1598])
  Number of nodes: 78
  Number of edges: 1598

Sanity check for conformer 15 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1600])
  Number of nodes: 78
  Number of edges: 1600
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1630])
Edge attributes shape: torch.Size([1630, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1630, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1630, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1630, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1606])
Edge attributes shape: torch.Size([1606, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1606, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1606, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1606, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1604])
Edge attributes shape: torch.Size([1604, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1604, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1604, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1604, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1618])
Edge attributes shape: torch.Size([1618, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1618, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1618, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1618, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1602])
Edge attributes shape: torch.Size([1602, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1602, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1602, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1602, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 4 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1612])
Edge attributes shape: torch.Size([1612, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1612, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1612, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1612, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 5 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1626])
Edge attributes shape: torch.Size([1626, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1626, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1626, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1626, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 6 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1616])
Edge attributes shape: torch.Size([1616, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1616, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1616, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1616, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 7 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1612])
Edge attributes shape: torch.Size([1612, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1612, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1612, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1612, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 8 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1594])
Edge attributes shape: torch.Size([1594, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1594, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1594, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1594, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 9 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1622])
Edge attributes shape: torch.Size([1622, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1622, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1622, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1622, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 10 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1598])
Edge attributes shape: torch.Size([1598, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1598, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1598, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1598, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 11 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1606])
Edge attributes shape: torch.Size([1606, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1606, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1606, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1606, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 12 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1602])
Edge attributes shape: torch.Size([1602, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1602, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1602, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1602, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 13 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1598])
Edge attributes shape: torch.Size([1598, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1598, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1598, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1598, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 14 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1600])
Edge attributes shape: torch.Size([1600, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1600, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1600, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1600, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 15 embeddings shape: torch.Size([78, 32])
process_conformer_ensemble input shape: torch.Size([16, 78, 32])
Num conformers: 16, Num atoms: 78, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0087, std: 0.1136
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0011, std: 0.0007, min: 0.0002, max: 0.0021
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0786, std: 0.2318
    Vector mean: -0.0018, std: 0.1587
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.1442, std: 0.1340
    Vector mean: 0.0247, std: 0.1292
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0001, std: 0.0001, min: 0.0000, max: 0.0003
      Vector - mean: 0.0001, std: 0.0001, min: 0.0000, max: 0.0002
  improved_deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0374, std: 0.1570
    Vector mean: -0.0063, std: 0.1056
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0654, std: 0.1497
    Vector mean: 0.0188, std: 0.2246
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0008, std: 0.0006, min: 0.0000, max: 0.0019
      Vector - mean: 0.0013, std: 0.0012, min: 0.0000, max: 0.0034

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.1434, -0.0715, -0.1109, -0.0469,  0.1078, -0.1503, -0.0899,  0.1509],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.1405, -0.0721, -0.1077, -0.0458,  0.1056, -0.1495, -0.0893,  0.1480],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.1414, -0.0722, -0.1079, -0.0439,  0.1049, -0.1512, -0.0890,  0.1485],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.1411, -0.0718, -0.1083, -0.0445,  0.1050, -0.1508, -0.0894,  0.1487],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.1418, -0.0723, -0.1076, -0.0444,  0.1051, -0.1501, -0.0888,  0.1481],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.1426, -0.0717, -0.1106, -0.0479,  0.1086, -0.1496, -0.0902,  0.1505],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.1430, -0.0715, -0.1110, -0.0468,  0.1077, -0.1508, -0.0900,  0.1510],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.1413, -0.0717, -0.1083, -0.0445,  0.1050, -0.1508, -0.0892,  0.1488],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.1409, -0.0719, -0.1081, -0.0443,  0.1049, -0.1510, -0.0891,  0.1485],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.1415, -0.0725, -0.1074, -0.0442,  0.1050, -0.1503, -0.0885,  0.1479],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.1426, -0.0717, -0.1106, -0.0480,  0.1086, -0.1496, -0.0904,  0.1505],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.1409, -0.0725, -0.1077, -0.0453,  0.1058, -0.1498, -0.0893,  0.1479],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.1413, -0.0721, -0.1080, -0.0440,  0.1049, -0.1511, -0.0891,  0.1485],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.1401, -0.0720, -0.1078, -0.0455,  0.1059, -0.1499, -0.0893,  0.1480],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.1408, -0.0724, -0.1077, -0.0454,  0.1058, -0.1497, -0.0894,  0.1479],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.1411, -0.0722, -0.1078, -0.0438,  0.1048, -0.1513, -0.0889,  0.1483],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0822, -0.3028, -0.2721, -0.1404,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0217],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0821, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0217],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0822, -0.3027, -0.2721, -0.1404,  0.2472,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0821, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0217],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0821, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0217],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0821, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0217],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0822, -0.3028, -0.2721, -0.1405,  0.2471,  0.3035, -0.3605, -0.0216],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.1872,  0.1858,  0.2739],
        [ 0.1238,  0.1006, -0.1364],
        [ 0.1237, -0.1395, -0.0436],
        [-0.0297,  0.1481, -0.2116],
        [-0.1808,  0.1562,  0.0321],
        [-0.2108,  0.1644, -0.1652],
        [ 0.1261, -0.1519,  0.1500],
        [ 0.1567, -0.2465, -0.0805]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0867,  0.1641, -0.1641, -0.2788, -0.2113, -0.1185, -0.1747, -0.2843],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0864,  0.1641, -0.1640, -0.2787, -0.2113, -0.1186, -0.1748, -0.2839],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0863,  0.1642, -0.1639, -0.2786, -0.2114, -0.1185, -0.1749, -0.2837],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0863,  0.1642, -0.1639, -0.2787, -0.2114, -0.1185, -0.1749, -0.2838],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0863,  0.1641, -0.1639, -0.2786, -0.2114, -0.1185, -0.1749, -0.2838],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0867,  0.1641, -0.1642, -0.2789, -0.2113, -0.1185, -0.1746, -0.2843],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0867,  0.1641, -0.1641, -0.2788, -0.2113, -0.1185, -0.1747, -0.2843],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0863,  0.1642, -0.1639, -0.2787, -0.2114, -0.1185, -0.1749, -0.2838],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0863,  0.1642, -0.1639, -0.2786, -0.2114, -0.1185, -0.1749, -0.2838],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0863,  0.1642, -0.1639, -0.2786, -0.2114, -0.1185, -0.1749, -0.2837],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0867,  0.1641, -0.1642, -0.2789, -0.2113, -0.1186, -0.1746, -0.2843],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0864,  0.1641, -0.1640, -0.2787, -0.2113, -0.1186, -0.1748, -0.2838],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0863,  0.1642, -0.1639, -0.2786, -0.2114, -0.1185, -0.1749, -0.2838],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0864,  0.1641, -0.1640, -0.2787, -0.2113, -0.1186, -0.1748, -0.2839],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0864,  0.1641, -0.1640, -0.2787, -0.2113, -0.1186, -0.1748, -0.2838],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0863,  0.1642, -0.1639, -0.2786, -0.2114, -0.1185, -0.1749, -0.2837],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0663, -0.0460,  0.1114],
        [ 0.1074, -0.0083, -0.0569],
        [ 0.1695,  0.1236,  0.1593],
        [-0.1154, -0.0964,  0.2381],
        [ 0.0681, -0.1770, -0.0562],
        [-0.0466,  0.0009, -0.2484],
        [ 0.1666,  0.1927,  0.0806],
        [ 0.1802, -0.1315, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1073, -0.0082, -0.0571],
        [ 0.1694,  0.1236,  0.1591],
        [-0.1154, -0.0964,  0.2381],
        [ 0.0681, -0.1771, -0.0563],
        [-0.0469,  0.0008, -0.2482],
        [ 0.1664,  0.1927,  0.0806],
        [ 0.1802, -0.1313, -0.0874]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0667, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1234,  0.1590],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2481],
        [ 0.1664,  0.1928,  0.0805],
        [ 0.1802, -0.1313, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1235,  0.1591],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2482],
        [ 0.1664,  0.1928,  0.0806],
        [ 0.1802, -0.1314, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1235,  0.1590],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2482],
        [ 0.1664,  0.1928,  0.0805],
        [ 0.1802, -0.1313, -0.0874]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.0663, -0.0459,  0.1114],
        [ 0.1074, -0.0082, -0.0570],
        [ 0.1695,  0.1237,  0.1594],
        [-0.1154, -0.0965,  0.2381],
        [ 0.0682, -0.1770, -0.0561],
        [-0.0466,  0.0009, -0.2484],
        [ 0.1666,  0.1927,  0.0806],
        [ 0.1801, -0.1315, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.0663, -0.0460,  0.1114],
        [ 0.1074, -0.0083, -0.0569],
        [ 0.1695,  0.1236,  0.1593],
        [-0.1154, -0.0964,  0.2381],
        [ 0.0681, -0.1770, -0.0562],
        [-0.0466,  0.0009, -0.2484],
        [ 0.1666,  0.1927,  0.0806],
        [ 0.1802, -0.1315, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1235,  0.1591],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2482],
        [ 0.1664,  0.1928,  0.0806],
        [ 0.1802, -0.1314, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1235,  0.1591],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2482],
        [ 0.1664,  0.1928,  0.0805],
        [ 0.1802, -0.1313, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.0667, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1235,  0.1590],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2481],
        [ 0.1664,  0.1928,  0.0805],
        [ 0.1801, -0.1313, -0.0874]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.0663, -0.0460,  0.1114],
        [ 0.1073, -0.0082, -0.0570],
        [ 0.1695,  0.1237,  0.1594],
        [-0.1154, -0.0965,  0.2381],
        [ 0.0682, -0.1770, -0.0561],
        [-0.0466,  0.0009, -0.2484],
        [ 0.1666,  0.1927,  0.0806],
        [ 0.1801, -0.1315, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1236,  0.1591],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0564],
        [-0.0468,  0.0009, -0.2482],
        [ 0.1664,  0.1928,  0.0806],
        [ 0.1802, -0.1313, -0.0874]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1234,  0.1590],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2481],
        [ 0.1664,  0.1928,  0.0805],
        [ 0.1802, -0.1313, -0.0875]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1074, -0.0082, -0.0571],
        [ 0.1694,  0.1236,  0.1591],
        [-0.1154, -0.0964,  0.2381],
        [ 0.0681, -0.1771, -0.0563],
        [-0.0469,  0.0008, -0.2482],
        [ 0.1664,  0.1927,  0.0806],
        [ 0.1802, -0.1313, -0.0874]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.0666, -0.0461,  0.1113],
        [ 0.1073, -0.0083, -0.0570],
        [ 0.1694,  0.1236,  0.1591],
        [-0.1155, -0.0964,  0.2381],
        [ 0.0681, -0.1771, -0.0564],
        [-0.0469,  0.0008, -0.2482],
        [ 0.1664,  0.1928,  0.0806],
        [ 0.1802, -0.1313, -0.0874]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.0667, -0.0461,  0.1113],
        [ 0.1074, -0.0083, -0.0570],
        [ 0.1694,  0.1234,  0.1590],
        [-0.1155, -0.0963,  0.2381],
        [ 0.0681, -0.1771, -0.0565],
        [-0.0468,  0.0009, -0.2481],
        [ 0.1664,  0.1928,  0.0805],
        [ 0.1802, -0.1313, -0.0875]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.1194,  0.1044, -0.1433, -0.3024,  0.2040, -0.1057, -0.1151, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.1193,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1153, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.1194,  0.1044, -0.1433, -0.3024,  0.2040, -0.1057, -0.1151, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.1194,  0.1044, -0.1433, -0.3024,  0.2040, -0.1057, -0.1151, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.1193,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.1194,  0.1044, -0.1433, -0.3024,  0.2040, -0.1057, -0.1151, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.1193,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.1194,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0606],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.1193,  0.1043, -0.1433, -0.3024,  0.2039, -0.1057, -0.1152, -0.0605],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.1822, -0.0041, -0.0345],
        [-0.0735,  0.0042,  0.0089],
        [ 0.0639, -0.1535,  0.1046],
        [ 0.0029,  0.2558, -0.0626],
        [ 0.1371, -0.1342,  0.0898],
        [ 0.0759, -0.1523, -0.1534],
        [-0.0150, -0.0448,  0.1278],
        [ 0.0185,  0.0266, -0.0563]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0476,  0.0517,  0.1677,  0.1683, -0.2346,  0.2300, -0.0146,  0.2105],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0491,  0.0520,  0.1671,  0.1647, -0.2362,  0.2270, -0.0139,  0.2082],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0493,  0.0519,  0.1664,  0.1662, -0.2361,  0.2277, -0.0150,  0.2095],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0490,  0.0521,  0.1665,  0.1661, -0.2358,  0.2276, -0.0149,  0.2096],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0492,  0.0512,  0.1668,  0.1659, -0.2360,  0.2279, -0.0143,  0.2085],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0479,  0.0517,  0.1681,  0.1672, -0.2352,  0.2295, -0.0139,  0.2091],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0477,  0.0521,  0.1676,  0.1684, -0.2347,  0.2298, -0.0149,  0.2108],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0489,  0.0522,  0.1664,  0.1663, -0.2356,  0.2276, -0.0151,  0.2098],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0491,  0.0524,  0.1665,  0.1660, -0.2360,  0.2274, -0.0150,  0.2096],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0493,  0.0515,  0.1668,  0.1658, -0.2362,  0.2277, -0.0143,  0.2085],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0479,  0.0517,  0.1682,  0.1672, -0.2352,  0.2295, -0.0139,  0.2091],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0494,  0.0515,  0.1671,  0.1650, -0.2366,  0.2274, -0.0139,  0.2079],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0493,  0.0519,  0.1664,  0.1662, -0.2361,  0.2277, -0.0150,  0.2094],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0491,  0.0525,  0.1670,  0.1645, -0.2364,  0.2266, -0.0140,  0.2082],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0494,  0.0515,  0.1671,  0.1649, -0.2366,  0.2274, -0.0138,  0.2079],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0494,  0.0522,  0.1664,  0.1661, -0.2363,  0.2275, -0.0150,  0.2095],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0064,  0.0549,  0.1072],
        [-0.0062, -0.0226, -0.2015],
        [ 0.0297,  0.2035,  0.1636],
        [-0.5428, -0.1874,  0.0943],
        [ 0.4003, -0.5104,  0.1112],
        [ 0.3339,  0.0974,  0.1671],
        [ 0.0078,  0.3214, -0.2179],
        [ 0.1771, -0.0782, -0.0331]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0033,  0.0511,  0.0988],
        [-0.0043, -0.0207, -0.2005],
        [ 0.0270,  0.2001,  0.1634],
        [-0.5381, -0.1863,  0.0964],
        [ 0.3936, -0.5042,  0.1061],
        [ 0.3294,  0.1016,  0.1617],
        [ 0.0058,  0.3222, -0.2127],
        [ 0.1761, -0.0806, -0.0330]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0038,  0.0507,  0.0999],
        [-0.0031, -0.0205, -0.2007],
        [ 0.0270,  0.2011,  0.1635],
        [-0.5396, -0.1864,  0.0944],
        [ 0.3945, -0.5050,  0.1053],
        [ 0.3298,  0.1002,  0.1626],
        [ 0.0062,  0.3208, -0.2135],
        [ 0.1766, -0.0822, -0.0331]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0034,  0.0509,  0.1000],
        [-0.0034, -0.0200, -0.2006],
        [ 0.0271,  0.2008,  0.1638],
        [-0.5393, -0.1864,  0.0946],
        [ 0.3938, -0.5056,  0.1055],
        [ 0.3289,  0.1001,  0.1624],
        [ 0.0062,  0.3205, -0.2135],
        [ 0.1762, -0.0819, -0.0332]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0035,  0.0514,  0.1001],
        [-0.0051, -0.0215, -0.2000],
        [ 0.0276,  0.2004,  0.1638],
        [-0.5386, -0.1873,  0.0961],
        [ 0.3947, -0.5049,  0.1061],
        [ 0.3297,  0.1012,  0.1629],
        [ 0.0064,  0.3218, -0.2131],
        [ 0.1763, -0.0810, -0.0329]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0063,  0.0555,  0.1064],
        [-0.0065, -0.0229, -0.2018],
        [ 0.0299,  0.2032,  0.1631],
        [-0.5421, -0.1871,  0.0954],
        [ 0.4003, -0.5096,  0.1117],
        [ 0.3344,  0.0982,  0.1666],
        [ 0.0073,  0.3225, -0.2175],
        [ 0.1770, -0.0773, -0.0330]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0066,  0.0545,  0.1069],
        [-0.0053, -0.0222, -0.2018],
        [ 0.0294,  0.2037,  0.1635],
        [-0.5433, -0.1871,  0.0937],
        [ 0.4002, -0.5105,  0.1110],
        [ 0.3341,  0.0971,  0.1668],
        [ 0.0076,  0.3212, -0.2180],
        [ 0.1773, -0.0788, -0.0332]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0034,  0.0509,  0.1000],
        [-0.0034, -0.0199, -0.2006],
        [ 0.0270,  0.2008,  0.1639],
        [-0.5395, -0.1865,  0.0944],
        [ 0.3938, -0.5058,  0.1054],
        [ 0.3288,  0.1000,  0.1624],
        [ 0.0062,  0.3203, -0.2136],
        [ 0.1763, -0.0821, -0.0333]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0036,  0.0505,  0.0996],
        [-0.0030, -0.0201, -0.2007],
        [ 0.0267,  0.2008,  0.1638],
        [-0.5396, -0.1863,  0.0945],
        [ 0.3939, -0.5053,  0.1054],
        [ 0.3293,  0.1003,  0.1621],
        [ 0.0061,  0.3208, -0.2135],
        [ 0.1764, -0.0822, -0.0332]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0037,  0.0510,  0.0997],
        [-0.0047, -0.0216, -0.2002],
        [ 0.0272,  0.2005,  0.1637],
        [-0.5390, -0.1872,  0.0959],
        [ 0.3948, -0.5046,  0.1061],
        [ 0.3301,  0.1014,  0.1626],
        [ 0.0062,  0.3221, -0.2130],
        [ 0.1765, -0.0814, -0.0329]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0063,  0.0556,  0.1064],
        [-0.0064, -0.0229, -0.2020],
        [ 0.0300,  0.2033,  0.1630],
        [-0.5422, -0.1870,  0.0954],
        [ 0.4005, -0.5095,  0.1117],
        [ 0.3346,  0.0982,  0.1666],
        [ 0.0073,  0.3225, -0.2176],
        [ 0.1770, -0.0772, -0.0330]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0036,  0.0516,  0.0994],
        [-0.0045, -0.0211, -0.2006],
        [ 0.0275,  0.2005,  0.1630],
        [-0.5382, -0.1864,  0.0964],
        [ 0.3945, -0.5040,  0.1062],
        [ 0.3301,  0.1014,  0.1623],
        [ 0.0060,  0.3221, -0.2129],
        [ 0.1762, -0.0805, -0.0328]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0037,  0.0507,  0.0998],
        [-0.0033, -0.0205, -0.2006],
        [ 0.0271,  0.2010,  0.1636],
        [-0.5395, -0.1865,  0.0946],
        [ 0.3943, -0.5051,  0.1053],
        [ 0.3296,  0.1003,  0.1625],
        [ 0.0062,  0.3208, -0.2135],
        [ 0.1765, -0.0822, -0.0331]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.0035,  0.0506,  0.0984],
        [-0.0036, -0.0203, -0.2006],
        [ 0.0264,  0.2003,  0.1635],
        [-0.5383, -0.1861,  0.0960],
        [ 0.3931, -0.5042,  0.1063],
        [ 0.3294,  0.1014,  0.1612],
        [ 0.0056,  0.3222, -0.2126],
        [ 0.1763, -0.0812, -0.0331]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.0035,  0.0516,  0.0993],
        [-0.0045, -0.0211, -0.2006],
        [ 0.0275,  0.2005,  0.1630],
        [-0.5381, -0.1863,  0.0964],
        [ 0.3944, -0.5040,  0.1061],
        [ 0.3301,  0.1015,  0.1623],
        [ 0.0060,  0.3221, -0.2129],
        [ 0.1762, -0.0804, -0.0328]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.0039,  0.0504,  0.0995],
        [-0.0029, -0.0205, -0.2008],
        [ 0.0268,  0.2011,  0.1636],
        [-0.5399, -0.1865,  0.0944],
        [ 0.3945, -0.5049,  0.1053],
        [ 0.3300,  0.1004,  0.1623],
        [ 0.0061,  0.3211, -0.2135],
        [ 0.1767, -0.0825, -0.0331]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Batch 3 in Ensemble: 63_i
Number of conformers in this batch before padding: 16
Number of conformers in this batch after padding: 16
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 20.62

Processing batch of 16 conformers from Ensemble 0

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1620])
  Number of nodes: 78
  Number of edges: 1620

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1594])
  Number of nodes: 78
  Number of edges: 1594

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1630])
  Number of nodes: 78
  Number of edges: 1630

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1624])
  Number of nodes: 78
  Number of edges: 1624

Sanity check for conformer 4 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1610])
  Number of nodes: 78
  Number of edges: 1610

Sanity check for conformer 5 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1616])
  Number of nodes: 78
  Number of edges: 1616

Sanity check for conformer 6 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1616])
  Number of nodes: 78
  Number of edges: 1616

Sanity check for conformer 7 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1590])
  Number of nodes: 78
  Number of edges: 1590

Sanity check for conformer 8 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1610])
  Number of nodes: 78
  Number of edges: 1610

Sanity check for conformer 9 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1598])
  Number of nodes: 78
  Number of edges: 1598

Sanity check for conformer 10 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1602])
  Number of nodes: 78
  Number of edges: 1602

Sanity check for conformer 11 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1596])
  Number of nodes: 78
  Number of edges: 1596

Sanity check for conformer 12 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1618])
  Number of nodes: 78
  Number of edges: 1618

Sanity check for conformer 13 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1612])
  Number of nodes: 78
  Number of edges: 1612

Sanity check for conformer 14 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1608])
  Number of nodes: 78
  Number of edges: 1608

Sanity check for conformer 15 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1592])
  Number of nodes: 78
  Number of edges: 1592
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1620])
Edge attributes shape: torch.Size([1620, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1620, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1620, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1620, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1594])
Edge attributes shape: torch.Size([1594, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1594, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1594, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1594, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1630])
Edge attributes shape: torch.Size([1630, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1630, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1630, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1630, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1624])
Edge attributes shape: torch.Size([1624, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1624, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1624, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1624, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1610])
Edge attributes shape: torch.Size([1610, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1610, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1610, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1610, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 4 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1616])
Edge attributes shape: torch.Size([1616, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1616, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1616, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1616, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 5 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1616])
Edge attributes shape: torch.Size([1616, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1616, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1616, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1616, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 6 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1590])
Edge attributes shape: torch.Size([1590, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1590, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1590, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1590, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 7 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1610])
Edge attributes shape: torch.Size([1610, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1610, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1610, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1610, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 8 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1598])
Edge attributes shape: torch.Size([1598, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1598, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1598, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1598, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 9 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1602])
Edge attributes shape: torch.Size([1602, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1602, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1602, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1602, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 10 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1596])
Edge attributes shape: torch.Size([1596, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1596, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1596, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1596, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 11 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1618])
Edge attributes shape: torch.Size([1618, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1618, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1618, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1618, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 12 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1612])
Edge attributes shape: torch.Size([1612, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1612, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1612, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1612, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 13 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1608])
Edge attributes shape: torch.Size([1608, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1608, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1608, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1608, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 14 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1592])
Edge attributes shape: torch.Size([1592, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1592, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1592, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1592, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 15 embeddings shape: torch.Size([78, 32])
process_conformer_ensemble input shape: torch.Size([16, 78, 32])
Num conformers: 16, Num atoms: 78, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0145, std: 0.0514
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0010, std: 0.0003, min: 0.0007, max: 0.0015
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0428, std: 0.1934
    Vector mean: -0.0137, std: 0.1365
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0001, std: 0.0001, min: 0.0000, max: 0.0003
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.1039, std: 0.2185
    Vector mean: 0.0287, std: 0.1226
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0001, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0001, std: 0.0001, min: 0.0000, max: 0.0002
  improved_deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0901, std: 0.2160
    Vector mean: -0.0010, std: 0.1330
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0115, std: 0.1431
    Vector mean: 0.0172, std: 0.0831
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0025, std: 0.0007, min: 0.0012, max: 0.0040
      Vector - mean: 0.0029, std: 0.0012, min: 0.0011, max: 0.0060

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0485,  0.0260, -0.0133, -0.0322, -0.1107, -0.0105,  0.0415, -0.0624],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0487,  0.0249, -0.0137, -0.0328, -0.1135, -0.0115,  0.0411, -0.0632],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0478,  0.0262, -0.0135, -0.0312, -0.1123, -0.0107,  0.0427, -0.0639],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0473,  0.0259, -0.0137, -0.0307, -0.1121, -0.0107,  0.0429, -0.0637],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0482,  0.0263, -0.0134, -0.0321, -0.1111, -0.0103,  0.0417, -0.0629],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0481,  0.0263, -0.0133, -0.0318, -0.1114, -0.0110,  0.0420, -0.0626],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0478,  0.0262, -0.0136, -0.0313, -0.1111, -0.0108,  0.0420, -0.0625],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0481,  0.0249, -0.0138, -0.0322, -0.1137, -0.0114,  0.0416, -0.0635],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0460,  0.0252, -0.0140, -0.0298, -0.1127, -0.0108,  0.0417, -0.0628],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0488,  0.0251, -0.0137, -0.0329, -0.1136, -0.0116,  0.0411, -0.0632],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0509,  0.0261, -0.0127, -0.0350, -0.1120, -0.0114,  0.0412, -0.0629],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0482,  0.0250, -0.0138, -0.0323, -0.1138, -0.0115,  0.0416, -0.0635],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0477,  0.0255, -0.0136, -0.0307, -0.1112, -0.0112,  0.0426, -0.0629],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0514,  0.0262, -0.0128, -0.0353, -0.1123, -0.0116,  0.0413, -0.0631],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0508,  0.0253, -0.0131, -0.0342, -0.1118, -0.0118,  0.0417, -0.0631],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0473,  0.0247, -0.0133, -0.0315, -0.1130, -0.0105,  0.0420, -0.0636],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.1806,  0.4171,  0.0727, -0.0428,  0.1358, -0.1880, -0.2084, -0.0247],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.1808,  0.4172,  0.0726, -0.0427,  0.1359, -0.1882, -0.2083, -0.0248],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.1805,  0.4170,  0.0727, -0.0428,  0.1358, -0.1879, -0.2084, -0.0246],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.1805,  0.4170,  0.0728, -0.0428,  0.1358, -0.1879, -0.2084, -0.0246],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.1806,  0.4170,  0.0727, -0.0428,  0.1358, -0.1880, -0.2084, -0.0247],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.1806,  0.4171,  0.0727, -0.0428,  0.1358, -0.1880, -0.2084, -0.0247],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.1805,  0.4170,  0.0728, -0.0428,  0.1358, -0.1879, -0.2084, -0.0246],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.1807,  0.4171,  0.0726, -0.0428,  0.1359, -0.1881, -0.2083, -0.0247],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.1805,  0.4170,  0.0728, -0.0429,  0.1357, -0.1879, -0.2084, -0.0246],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.1808,  0.4172,  0.0726, -0.0427,  0.1359, -0.1882, -0.2083, -0.0248],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.1808,  0.4173,  0.0724, -0.0427,  0.1359, -0.1883, -0.2083, -0.0248],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.1807,  0.4171,  0.0726, -0.0428,  0.1359, -0.1881, -0.2083, -0.0248],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.1806,  0.4170,  0.0727, -0.0428,  0.1358, -0.1879, -0.2084, -0.0246],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.1809,  0.4173,  0.0724, -0.0427,  0.1360, -0.1884, -0.2083, -0.0248],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.1809,  0.4173,  0.0725, -0.0427,  0.1359, -0.1883, -0.2083, -0.0248],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.1805,  0.4170,  0.0728, -0.0428,  0.1358, -0.1879, -0.2084, -0.0247],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.2265, -0.1337,  0.1540],
        [ 0.0471, -0.0622, -0.2069],
        [-0.1523, -0.0163, -0.2898],
        [-0.1492,  0.0414,  0.1233],
        [-0.0678,  0.2492, -0.0917],
        [-0.0939, -0.0457, -0.0687],
        [-0.1096,  0.1310,  0.1608],
        [-0.0907,  0.0804,  0.0367]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0878, -0.3124, -0.0613, -0.1485,  0.3379, -0.4077, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0879, -0.3124, -0.0613, -0.1485,  0.3379, -0.4078, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0880, -0.3124, -0.0613, -0.1484,  0.3379, -0.4078, -0.1561, -0.1707],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0880, -0.3124, -0.0613, -0.1484,  0.3379, -0.4078, -0.1561, -0.1707],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0879, -0.3124, -0.0613, -0.1485,  0.3379, -0.4077, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0879, -0.3124, -0.0613, -0.1485,  0.3379, -0.4077, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0879, -0.3124, -0.0613, -0.1485,  0.3379, -0.4077, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0880, -0.3125, -0.0613, -0.1485,  0.3379, -0.4078, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0880, -0.3124, -0.0613, -0.1485,  0.3380, -0.4079, -0.1560, -0.1707],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0879, -0.3124, -0.0613, -0.1485,  0.3379, -0.4078, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0878, -0.3124, -0.0613, -0.1485,  0.3379, -0.4077, -0.1561, -0.1709],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0879, -0.3125, -0.0613, -0.1485,  0.3379, -0.4078, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0880, -0.3124, -0.0613, -0.1485,  0.3379, -0.4078, -0.1561, -0.1708],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0878, -0.3124, -0.0613, -0.1485,  0.3379, -0.4076, -0.1562, -0.1709],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0878, -0.3124, -0.0613, -0.1485,  0.3379, -0.4077, -0.1562, -0.1709],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0880, -0.3124, -0.0613, -0.1485,  0.3379, -0.4079, -0.1560, -0.1707],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0579, -0.1284,  0.1991],
        [ 0.1087,  0.1623,  0.1092],
        [ 0.0225,  0.0428,  0.0589],
        [ 0.1830,  0.0641, -0.0090],
        [-0.1889,  0.0294,  0.1828],
        [-0.1946,  0.0408,  0.0222],
        [-0.1253,  0.1187,  0.0752],
        [-0.1550, -0.1630,  0.1748]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0579, -0.1284,  0.1990],
        [ 0.1086,  0.1623,  0.1090],
        [ 0.0225,  0.0428,  0.0588],
        [ 0.1829,  0.0639, -0.0090],
        [-0.1888,  0.0294,  0.1828],
        [-0.1946,  0.0408,  0.0222],
        [-0.1253,  0.1188,  0.0752],
        [-0.1551, -0.1631,  0.1748]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0580, -0.1284,  0.1992],
        [ 0.1089,  0.1624,  0.1090],
        [ 0.0226,  0.0429,  0.0590],
        [ 0.1829,  0.0642, -0.0089],
        [-0.1889,  0.0294,  0.1828],
        [-0.1946,  0.0408,  0.0223],
        [-0.1253,  0.1188,  0.0753],
        [-0.1551, -0.1630,  0.1747]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0581, -0.1284,  0.1992],
        [ 0.1089,  0.1624,  0.1090],
        [ 0.0226,  0.0430,  0.0590],
        [ 0.1829,  0.0642, -0.0089],
        [-0.1890,  0.0294,  0.1828],
        [-0.1945,  0.0408,  0.0223],
        [-0.1253,  0.1188,  0.0753],
        [-0.1551, -0.1630,  0.1747]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.0579, -0.1284,  0.1991],
        [ 0.1087,  0.1623,  0.1091],
        [ 0.0225,  0.0428,  0.0589],
        [ 0.1830,  0.0641, -0.0090],
        [-0.1889,  0.0294,  0.1828],
        [-0.1946,  0.0408,  0.0222],
        [-0.1253,  0.1187,  0.0752],
        [-0.1550, -0.1630,  0.1747]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.0579, -0.1284,  0.1991],
        [ 0.1088,  0.1623,  0.1091],
        [ 0.0225,  0.0429,  0.0589],
        [ 0.1830,  0.0641, -0.0090],
        [-0.1889,  0.0294,  0.1827],
        [-0.1946,  0.0409,  0.0222],
        [-0.1253,  0.1187,  0.0753],
        [-0.1550, -0.1630,  0.1747]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.0580, -0.1284,  0.1991],
        [ 0.1088,  0.1623,  0.1091],
        [ 0.0226,  0.0429,  0.0590],
        [ 0.1830,  0.0642, -0.0090],
        [-0.1890,  0.0294,  0.1827],
        [-0.1945,  0.0408,  0.0222],
        [-0.1253,  0.1187,  0.0753],
        [-0.1550, -0.1630,  0.1747]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.0579, -0.1284,  0.1990],
        [ 0.1087,  0.1623,  0.1090],
        [ 0.0225,  0.0428,  0.0588],
        [ 0.1829,  0.0639, -0.0090],
        [-0.1888,  0.0294,  0.1828],
        [-0.1946,  0.0408,  0.0222],
        [-0.1253,  0.1188,  0.0752],
        [-0.1551, -0.1631,  0.1747]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.0581, -0.1284,  0.1992],
        [ 0.1090,  0.1624,  0.1090],
        [ 0.0226,  0.0430,  0.0590],
        [ 0.1828,  0.0643, -0.0089],
        [-0.1890,  0.0294,  0.1828],
        [-0.1945,  0.0407,  0.0222],
        [-0.1252,  0.1188,  0.0753],
        [-0.1552, -0.1630,  0.1746]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.0578, -0.1284,  0.1990],
        [ 0.1086,  0.1623,  0.1090],
        [ 0.0225,  0.0428,  0.0588],
        [ 0.1830,  0.0638, -0.0090],
        [-0.1888,  0.0294,  0.1828],
        [-0.1946,  0.0409,  0.0222],
        [-0.1253,  0.1188,  0.0752],
        [-0.1551, -0.1631,  0.1748]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.0577, -0.1284,  0.1988],
        [ 0.1084,  0.1622,  0.1091],
        [ 0.0224,  0.0426,  0.0587],
        [ 0.1831,  0.0637, -0.0091],
        [-0.1887,  0.0295,  0.1828],
        [-0.1946,  0.0410,  0.0221],
        [-0.1253,  0.1187,  0.0752],
        [-0.1549, -0.1631,  0.1749]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.0579, -0.1284,  0.1990],
        [ 0.1087,  0.1623,  0.1090],
        [ 0.0225,  0.0428,  0.0588],
        [ 0.1829,  0.0639, -0.0090],
        [-0.1888,  0.0294,  0.1828],
        [-0.1946,  0.0408,  0.0222],
        [-0.1252,  0.1188,  0.0752],
        [-0.1551, -0.1631,  0.1748]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.0581, -0.1285,  0.1992],
        [ 0.1089,  0.1624,  0.1091],
        [ 0.0225,  0.0430,  0.0590],
        [ 0.1829,  0.0642, -0.0090],
        [-0.1890,  0.0294,  0.1828],
        [-0.1945,  0.0408,  0.0223],
        [-0.1253,  0.1188,  0.0753],
        [-0.1551, -0.1630,  0.1747]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.0576, -0.1285,  0.1988],
        [ 0.1084,  0.1622,  0.1091],
        [ 0.0224,  0.0426,  0.0587],
        [ 0.1831,  0.0636, -0.0091],
        [-0.1887,  0.0295,  0.1828],
        [-0.1946,  0.0410,  0.0221],
        [-0.1253,  0.1187,  0.0752],
        [-0.1549, -0.1631,  0.1749]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.0578, -0.1285,  0.1989],
        [ 0.1085,  0.1622,  0.1091],
        [ 0.0224,  0.0427,  0.0588],
        [ 0.1831,  0.0638, -0.0091],
        [-0.1887,  0.0294,  0.1828],
        [-0.1946,  0.0409,  0.0222],
        [-0.1253,  0.1187,  0.0752],
        [-0.1549, -0.1631,  0.1749]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.0580, -0.1284,  0.1992],
        [ 0.1088,  0.1623,  0.1090],
        [ 0.0226,  0.0429,  0.0589],
        [ 0.1828,  0.0641, -0.0089],
        [-0.1889,  0.0294,  0.1828],
        [-0.1945,  0.0407,  0.0223],
        [-0.1253,  0.1188,  0.0752],
        [-0.1551, -0.1631,  0.1747]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.1962, -0.1389,  0.3466,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2915],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2915],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.1962, -0.1389,  0.3466,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2915],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.1962, -0.1389,  0.3466,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.1961, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.1962, -0.1389,  0.3466,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2915],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.1962, -0.1389,  0.3466,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.1962, -0.1389,  0.3465,  0.2365,  0.2565,  0.2064, -0.0907, -0.2916],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.0489,  0.0251, -0.3519],
        [-0.1372, -0.0021, -0.0687],
        [-0.0775,  0.0509, -0.0324],
        [-0.1802, -0.0606, -0.0127],
        [-0.0333,  0.0907,  0.2201],
        [ 0.0667,  0.2447,  0.1038],
        [ 0.0971, -0.2134,  0.0996],
        [-0.0215,  0.0567,  0.1606]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0214,  0.2426, -0.1461,  0.0906,  0.0321, -0.1967,  0.1734, -0.0778],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0222,  0.2403, -0.1475,  0.0908,  0.0321, -0.1963,  0.1719, -0.0822],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0207,  0.2429, -0.1454,  0.0876,  0.0333, -0.1952,  0.1721, -0.0767],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0209,  0.2425, -0.1447,  0.0867,  0.0321, -0.1946,  0.1726, -0.0759],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0218,  0.2417, -0.1454,  0.0873,  0.0301, -0.1950,  0.1732, -0.0776],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0212,  0.2425, -0.1449,  0.0895,  0.0314, -0.1957,  0.1739, -0.0765],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0213,  0.2425, -0.1445,  0.0882,  0.0317, -0.1949,  0.1733, -0.0761],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0225,  0.2402, -0.1467,  0.0892,  0.0311, -0.1953,  0.1722, -0.0811],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0202,  0.2412, -0.1433,  0.0919,  0.0369, -0.1938,  0.1716, -0.0778],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0222,  0.2403, -0.1476,  0.0907,  0.0319, -0.1963,  0.1720, -0.0823],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0233,  0.2403, -0.1485,  0.0891,  0.0262, -0.1976,  0.1749, -0.0829],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0225,  0.2402, -0.1468,  0.0891,  0.0309, -0.1954,  0.1722, -0.0813],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0207,  0.2432, -0.1449,  0.0901,  0.0334, -0.1960,  0.1732, -0.0760],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0232,  0.2400, -0.1488,  0.0890,  0.0259, -0.1978,  0.1750, -0.0834],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0229,  0.2406, -0.1486,  0.0902,  0.0275, -0.1982,  0.1746, -0.0827],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0216,  0.2408, -0.1457,  0.0888,  0.0332, -0.1945,  0.1715, -0.0800],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0678, -0.0395,  0.0493],
        [ 0.1841, -0.0944,  0.0266],
        [-0.0670, -0.0459,  0.0129],
        [-0.0929,  0.0231,  0.0390],
        [ 0.0879,  0.0149, -0.1252],
        [ 0.0742, -0.1204, -0.0281],
        [ 0.0503,  0.0898,  0.0774],
        [ 0.0284,  0.2043, -0.0054]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0638, -0.0391,  0.0446],
        [ 0.1846, -0.0915,  0.0272],
        [-0.0716, -0.0439,  0.0179],
        [-0.0904,  0.0237,  0.0413],
        [ 0.0855,  0.0163, -0.1248],
        [ 0.0767, -0.1230, -0.0264],
        [ 0.0526,  0.0891,  0.0802],
        [ 0.0288,  0.2039, -0.0039]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0659, -0.0371,  0.0499],
        [ 0.1867, -0.0944,  0.0277],
        [-0.0663, -0.0444,  0.0135],
        [-0.0926,  0.0239,  0.0362],
        [ 0.0886,  0.0146, -0.1239],
        [ 0.0766, -0.1206, -0.0282],
        [ 0.0498,  0.0876,  0.0762],
        [ 0.0281,  0.2040, -0.0039]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0662, -0.0368,  0.0518],
        [ 0.1859, -0.0952,  0.0287],
        [-0.0641, -0.0447,  0.0107],
        [-0.0936,  0.0239,  0.0364],
        [ 0.0898,  0.0140, -0.1247],
        [ 0.0754, -0.1206, -0.0301],
        [ 0.0494,  0.0876,  0.0754],
        [ 0.0286,  0.2034, -0.0029]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.0670, -0.0373,  0.0525],
        [ 0.1840, -0.0952,  0.0299],
        [-0.0630, -0.0456,  0.0096],
        [-0.0951,  0.0232,  0.0388],
        [ 0.0900,  0.0148, -0.1258],
        [ 0.0732, -0.1201, -0.0321],
        [ 0.0499,  0.0881,  0.0746],
        [ 0.0296,  0.2030, -0.0024]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.0674, -0.0390,  0.0499],
        [ 0.1846, -0.0952,  0.0265],
        [-0.0661, -0.0460,  0.0119],
        [-0.0932,  0.0236,  0.0378],
        [ 0.0886,  0.0141, -0.1252],
        [ 0.0743, -0.1204, -0.0291],
        [ 0.0493,  0.0885,  0.0772],
        [ 0.0280,  0.2031, -0.0047]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.0674, -0.0383,  0.0517],
        [ 0.1849, -0.0951,  0.0276],
        [-0.0645, -0.0454,  0.0097],
        [-0.0934,  0.0236,  0.0370],
        [ 0.0896,  0.0142, -0.1250],
        [ 0.0742, -0.1207, -0.0297],
        [ 0.0493,  0.0890,  0.0755],
        [ 0.0285,  0.2036, -0.0035]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.0640, -0.0384,  0.0467],
        [ 0.1844, -0.0924,  0.0284],
        [-0.0692, -0.0440,  0.0152],
        [-0.0916,  0.0238,  0.0407],
        [ 0.0871,  0.0158, -0.1251],
        [ 0.0758, -0.1226, -0.0285],
        [ 0.0520,  0.0884,  0.0788],
        [ 0.0291,  0.2033, -0.0027]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.0676, -0.0423,  0.0470],
        [ 0.1879, -0.0906,  0.0210],
        [-0.0730, -0.0415,  0.0124],
        [-0.0854,  0.0249,  0.0330],
        [ 0.0866,  0.0149, -0.1229],
        [ 0.0788, -0.1276, -0.0177],
        [ 0.0530,  0.0957,  0.0806],
        [ 0.0292,  0.2095, -0.0055]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.0637, -0.0389,  0.0446],
        [ 0.1847, -0.0916,  0.0273],
        [-0.0716, -0.0440,  0.0181],
        [-0.0906,  0.0237,  0.0414],
        [ 0.0856,  0.0163, -0.1248],
        [ 0.0768, -0.1228, -0.0266],
        [ 0.0526,  0.0888,  0.0801],
        [ 0.0288,  0.2038, -0.0038]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.0647, -0.0364,  0.0476],
        [ 0.1816, -0.0960,  0.0322],
        [-0.0654, -0.0478,  0.0179],
        [-0.0976,  0.0221,  0.0452],
        [ 0.0877,  0.0160, -0.1267],
        [ 0.0727, -0.1160, -0.0362],
        [ 0.0501,  0.0830,  0.0769],
        [ 0.0278,  0.1994, -0.0035]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.0638, -0.0382,  0.0467],
        [ 0.1844, -0.0925,  0.0286],
        [-0.0691, -0.0441,  0.0155],
        [-0.0918,  0.0237,  0.0409],
        [ 0.0871,  0.0158, -0.1252],
        [ 0.0758, -0.1224, -0.0288],
        [ 0.0520,  0.0881,  0.0786],
        [ 0.0290,  0.2031, -0.0026]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.0669, -0.0392,  0.0487],
        [ 0.1858, -0.0944,  0.0250],
        [-0.0681, -0.0454,  0.0132],
        [-0.0915,  0.0240,  0.0368],
        [ 0.0877,  0.0141, -0.1241],
        [ 0.0758, -0.1209, -0.0266],
        [ 0.0489,  0.0892,  0.0780],
        [ 0.0273,  0.2038, -0.0056]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.0641, -0.0357,  0.0472],
        [ 0.1817, -0.0959,  0.0328],
        [-0.0654, -0.0481,  0.0188],
        [-0.0980,  0.0220,  0.0459],
        [ 0.0873,  0.0162, -0.1267],
        [ 0.0729, -0.1156, -0.0369],
        [ 0.0500,  0.0822,  0.0768],
        [ 0.0277,  0.1989, -0.0034]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.0640, -0.0367,  0.0459],
        [ 0.1823, -0.0951,  0.0308],
        [-0.0676, -0.0477,  0.0195],
        [-0.0961,  0.0224,  0.0451],
        [ 0.0863,  0.0161, -0.1259],
        [ 0.0739, -0.1164, -0.0342],
        [ 0.0495,  0.0835,  0.0780],
        [ 0.0270,  0.1995, -0.0045]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.0646, -0.0385,  0.0467],
        [ 0.1861, -0.0920,  0.0262],
        [-0.0709, -0.0428,  0.0151],
        [-0.0895,  0.0245,  0.0378],
        [ 0.0865,  0.0153, -0.1244],
        [ 0.0777, -0.1245, -0.0257],
        [ 0.0523,  0.0897,  0.0798],
        [ 0.0290,  0.2048, -0.0035]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Batch 4 in Ensemble: 63_i
Number of conformers in this batch before padding: 13
Number of conformers in this batch after padding: 13
Unique Atomic Numbers: [6, 1, 8, 15]
Average number of neighbors: 20.61

Processing batch of 13 conformers from Ensemble 0

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1610])
  Number of nodes: 78
  Number of edges: 1610

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1612])
  Number of nodes: 78
  Number of edges: 1612

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1610])
  Number of nodes: 78
  Number of edges: 1610

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1614])
  Number of nodes: 78
  Number of edges: 1614

Sanity check for conformer 4 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1602])
  Number of nodes: 78
  Number of edges: 1602

Sanity check for conformer 5 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1604])
  Number of nodes: 78
  Number of edges: 1604

Sanity check for conformer 6 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1608])
  Number of nodes: 78
  Number of edges: 1608

Sanity check for conformer 7 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1590])
  Number of nodes: 78
  Number of edges: 1590

Sanity check for conformer 8 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1622])
  Number of nodes: 78
  Number of edges: 1622

Sanity check for conformer 9 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1624])
  Number of nodes: 78
  Number of edges: 1624

Sanity check for conformer 10 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1586])
  Number of nodes: 78
  Number of edges: 1586

Sanity check for conformer 11 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1620])
  Number of nodes: 78
  Number of edges: 1620

Sanity check for conformer 12 in batch:
Conformer sanity check:
  Positions shape: torch.Size([78, 3])
  Atomic numbers shape: torch.Size([78])
  Edge index shape: torch.Size([2, 1594])
  Number of nodes: 78
  Number of edges: 1594
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1610])
Edge attributes shape: torch.Size([1610, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1610, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1610, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1610, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1612])
Edge attributes shape: torch.Size([1612, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1612, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1612, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1612, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1610])
Edge attributes shape: torch.Size([1610, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1610, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1610, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1610, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1614])
Edge attributes shape: torch.Size([1614, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1614, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1614, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1614, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1602])
Edge attributes shape: torch.Size([1602, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1602, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1602, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1602, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 4 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1604])
Edge attributes shape: torch.Size([1604, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1604, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1604, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1604, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 5 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1608])
Edge attributes shape: torch.Size([1608, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1608, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1608, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1608, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 6 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1590])
Edge attributes shape: torch.Size([1590, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1590, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1590, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1590, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 7 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1622])
Edge attributes shape: torch.Size([1622, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1622, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1622, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1622, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 8 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1624])
Edge attributes shape: torch.Size([1624, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1624, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1624, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1624, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 9 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1586])
Edge attributes shape: torch.Size([1586, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1586, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1586, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1586, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 10 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1620])
Edge attributes shape: torch.Size([1620, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1620, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1620, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1620, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 11 embeddings shape: torch.Size([78, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([78, 3])
Edge index shape: torch.Size([2, 1594])
Edge attributes shape: torch.Size([1594, 4])
Node attributes shape: torch.Size([78, 4])
Edge features shape: torch.Size([1594, 8])
Initial Node features shape: torch.Size([78, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([78, 32])
tp_weights shape: torch.Size([1594, 64])
Message shape: torch.Size([78, 128])
Node features after layer 1 shape: torch.Size([78, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([78, 128])
tp_weights shape: torch.Size([1594, 128])
Message shape: torch.Size([78, 256])
Node features after layer 2 shape: torch.Size([78, 32])
EQUICAT output shape: torch.Size([78, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([78, 32])
Output shape from CustomNonLinearReadout: torch.Size([78, 32])
Final output shape after NonLinearReadout: torch.Size([78, 32])
Final output device: cpu
Conformer 12 embeddings shape: torch.Size([78, 32])
process_conformer_ensemble input shape: torch.Size([13, 78, 32])
Num conformers: 13, Num atoms: 78, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([13, 8])
    Vector shape: torch.Size([13, 8, 3])
    Scalar mean: -0.0010, std: 0.0181
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0006, std: 0.0001, min: 0.0005, max: 0.0008
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([13, 8])
    Vector shape: torch.Size([13, 8, 3])
    Scalar mean: -0.0922, std: 0.2472
    Vector mean: 0.0086, std: 0.1203
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([13, 8])
    Vector shape: torch.Size([13, 8, 3])
    Scalar mean: -0.1405, std: 0.1496
    Vector mean: -0.0097, std: 0.1572
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0001, std: 0.0000, min: 0.0000, max: 0.0001
  improved_deep_sets:
    Scalar shape: torch.Size([13, 8])
    Vector shape: torch.Size([13, 8, 3])
    Scalar mean: -0.0488, std: 0.2135
    Vector mean: 0.0039, std: 0.1585
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([13, 8])
    Vector shape: torch.Size([13, 8, 3])
    Scalar mean: -0.0312, std: 0.1376
    Vector mean: 0.0641, std: 0.1270
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0040, std: 0.0023, min: 0.0010, max: 0.0080
      Vector - mean: 0.0036, std: 0.0022, min: 0.0006, max: 0.0074

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([13, 8])
    Vector embeddings shape: torch.Size([13, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0100, -0.0196, -0.0077, -0.0096, -0.0297,  0.0227,  0.0235,  0.0023],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0106, -0.0203, -0.0101, -0.0109, -0.0279,  0.0238,  0.0235,  0.0028],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0098, -0.0203, -0.0096, -0.0104, -0.0271,  0.0227,  0.0231,  0.0031],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0109, -0.0194, -0.0092, -0.0106, -0.0291,  0.0236,  0.0238,  0.0021],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0101, -0.0202, -0.0097, -0.0106, -0.0273,  0.0231,  0.0232,  0.0029],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0102, -0.0197, -0.0077, -0.0097, -0.0300,  0.0231,  0.0235,  0.0021],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0101, -0.0203, -0.0097, -0.0106, -0.0272,  0.0231,  0.0231,  0.0030],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0099, -0.0207, -0.0085, -0.0100, -0.0288,  0.0231,  0.0234,  0.0030],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0106, -0.0189, -0.0092, -0.0103, -0.0291,  0.0232,  0.0238,  0.0020],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0103, -0.0194, -0.0090, -0.0102, -0.0286,  0.0228,  0.0235,  0.0023],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0102, -0.0208, -0.0085, -0.0101, -0.0291,  0.0235,  0.0235,  0.0029],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0106, -0.0194, -0.0091, -0.0104, -0.0288,  0.0232,  0.0236,  0.0022],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0095, -0.0203, -0.0079, -0.0098, -0.0277,  0.0227,  0.0229,  0.0033],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([13, 8])
    Vector embeddings shape: torch.Size([13, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.2573, -0.1878, -0.2647,  0.2513, -0.0679,  0.0560, -0.3459, -0.4358],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.2573, -0.1878, -0.2648,  0.2513, -0.0678,  0.0560, -0.3459, -0.4359],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.2573, -0.1877, -0.2648,  0.2513, -0.0678,  0.0560, -0.3459, -0.4359],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.2573, -0.1878, -0.2647,  0.2513, -0.0679,  0.0560, -0.3459, -0.4358],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.2573, -0.1877, -0.2648,  0.2513, -0.0678,  0.0560, -0.3459, -0.4359],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.2573, -0.1878, -0.2647,  0.2513, -0.0679,  0.0560, -0.3459, -0.4358],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.2573, -0.1877, -0.2648,  0.2513, -0.0678,  0.0560, -0.3459, -0.4359],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.2573, -0.1878, -0.2648,  0.2513, -0.0678,  0.0560, -0.3459, -0.4359],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.2573, -0.1878, -0.2647,  0.2513, -0.0679,  0.0560, -0.3459, -0.4358],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.2573, -0.1878, -0.2647,  0.2513, -0.0679,  0.0560, -0.3459, -0.4358],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.2573, -0.1878, -0.2648,  0.2513, -0.0678,  0.0560, -0.3459, -0.4359],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.2573, -0.1878, -0.2647,  0.2513, -0.0679,  0.0560, -0.3459, -0.4358],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.2573, -0.1877, -0.2648,  0.2513, -0.0678,  0.0560, -0.3459, -0.4359],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.0638,  0.0241, -0.0014],
        [-0.0306,  0.0292, -0.2199],
        [-0.0619,  0.2314,  0.1242],
        [-0.0959,  0.0087,  0.1676],
        [ 0.2081, -0.0251,  0.0443],
        [ 0.1143,  0.0625, -0.1302],
        [-0.1056, -0.2196, -0.0748],
        [ 0.1731,  0.0102, -0.0911]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([13, 8])
    Vector embeddings shape: torch.Size([13, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.3427, -0.1771, -0.0312,  0.1098, -0.3737, -0.1262, -0.0668, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.3427, -0.1771, -0.0311,  0.1096, -0.3737, -0.1261, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.3427, -0.1771, -0.0311,  0.1097, -0.3736, -0.1262, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.3427, -0.1772, -0.0312,  0.1097, -0.3738, -0.1262, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.3427, -0.1771, -0.0311,  0.1097, -0.3737, -0.1262, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.3427, -0.1772, -0.0312,  0.1097, -0.3737, -0.1262, -0.0668, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.3427, -0.1771, -0.0311,  0.1097, -0.3736, -0.1262, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.3427, -0.1771, -0.0312,  0.1097, -0.3737, -0.1262, -0.0668, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.3427, -0.1772, -0.0312,  0.1097, -0.3737, -0.1262, -0.0668, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.3427, -0.1771, -0.0311,  0.1097, -0.3737, -0.1262, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.3428, -0.1771, -0.0312,  0.1097, -0.3737, -0.1262, -0.0668, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.3427, -0.1771, -0.0312,  0.1097, -0.3737, -0.1262, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.3427, -0.1771, -0.0311,  0.1098, -0.3736, -0.1262, -0.0669, -0.1161],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0944, -0.1607,  0.1014],
        [ 0.0023,  0.1052, -0.2380],
        [-0.1618, -0.2391,  0.2591],
        [-0.1021,  0.1447,  0.0909],
        [ 0.0748, -0.1474, -0.0716],
        [ 0.2433, -0.0605, -0.0101],
        [ 0.2512,  0.0042, -0.0579],
        [ 0.2247, -0.2217, -0.1702]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0944, -0.1609,  0.1014],
        [ 0.0022,  0.1052, -0.2380],
        [-0.1618, -0.2393,  0.2592],
        [-0.1020,  0.1448,  0.0910],
        [ 0.0747, -0.1474, -0.0715],
        [ 0.2434, -0.0606, -0.0103],
        [ 0.2511,  0.0043, -0.0579],
        [ 0.2247, -0.2216, -0.1703]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0944, -0.1609,  0.1014],
        [ 0.0022,  0.1053, -0.2380],
        [-0.1619, -0.2393,  0.2593],
        [-0.1020,  0.1448,  0.0910],
        [ 0.0748, -0.1474, -0.0715],
        [ 0.2434, -0.0606, -0.0103],
        [ 0.2511,  0.0043, -0.0578],
        [ 0.2247, -0.2217, -0.1703]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0944, -0.1608,  0.1014],
        [ 0.0022,  0.1052, -0.2380],
        [-0.1618, -0.2392,  0.2591],
        [-0.1021,  0.1447,  0.0910],
        [ 0.0748, -0.1474, -0.0716],
        [ 0.2434, -0.0605, -0.0102],
        [ 0.2512,  0.0043, -0.0579],
        [ 0.2247, -0.2217, -0.1702]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0944, -0.1609,  0.1014],
        [ 0.0022,  0.1053, -0.2380],
        [-0.1618, -0.2393,  0.2593],
        [-0.1020,  0.1448,  0.0910],
        [ 0.0748, -0.1474, -0.0715],
        [ 0.2434, -0.0606, -0.0103],
        [ 0.2511,  0.0043, -0.0579],
        [ 0.2247, -0.2217, -0.1703]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0944, -0.1607,  0.1014],
        [ 0.0023,  0.1051, -0.2380],
        [-0.1618, -0.2391,  0.2591],
        [-0.1021,  0.1447,  0.0909],
        [ 0.0748, -0.1474, -0.0716],
        [ 0.2433, -0.0605, -0.0101],
        [ 0.2512,  0.0042, -0.0579],
        [ 0.2247, -0.2217, -0.1702]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0944, -0.1609,  0.1014],
        [ 0.0022,  0.1053, -0.2380],
        [-0.1619, -0.2393,  0.2593],
        [-0.1020,  0.1448,  0.0910],
        [ 0.0748, -0.1474, -0.0715],
        [ 0.2434, -0.0606, -0.0103],
        [ 0.2511,  0.0043, -0.0578],
        [ 0.2247, -0.2217, -0.1703]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0944, -0.1608,  0.1014],
        [ 0.0023,  0.1052, -0.2380],
        [-0.1619, -0.2392,  0.2592],
        [-0.1021,  0.1447,  0.0909],
        [ 0.0748, -0.1475, -0.0716],
        [ 0.2433, -0.0605, -0.0102],
        [ 0.2511,  0.0042, -0.0578],
        [ 0.2246, -0.2217, -0.1703]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0944, -0.1608,  0.1014],
        [ 0.0022,  0.1052, -0.2380],
        [-0.1618, -0.2391,  0.2591],
        [-0.1021,  0.1447,  0.0910],
        [ 0.0748, -0.1473, -0.0716],
        [ 0.2434, -0.0605, -0.0102],
        [ 0.2512,  0.0043, -0.0579],
        [ 0.2247, -0.2217, -0.1702]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0944, -0.1608,  0.1014],
        [ 0.0022,  0.1052, -0.2380],
        [-0.1618, -0.2391,  0.2592],
        [-0.1020,  0.1447,  0.0910],
        [ 0.0748, -0.1474, -0.0716],
        [ 0.2434, -0.0605, -0.0102],
        [ 0.2512,  0.0043, -0.0579],
        [ 0.2247, -0.2217, -0.1702]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0944, -0.1608,  0.1014],
        [ 0.0023,  0.1052, -0.2379],
        [-0.1618, -0.2392,  0.2592],
        [-0.1021,  0.1447,  0.0909],
        [ 0.0748, -0.1475, -0.0716],
        [ 0.2433, -0.0605, -0.0102],
        [ 0.2511,  0.0043, -0.0578],
        [ 0.2247, -0.2217, -0.1703]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0944, -0.1608,  0.1014],
        [ 0.0022,  0.1052, -0.2380],
        [-0.1618, -0.2392,  0.2592],
        [-0.1021,  0.1447,  0.0910],
        [ 0.0748, -0.1474, -0.0716],
        [ 0.2434, -0.0605, -0.0102],
        [ 0.2512,  0.0043, -0.0579],
        [ 0.2247, -0.2217, -0.1702]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0944, -0.1608,  0.1014],
        [ 0.0023,  0.1053, -0.2380],
        [-0.1619, -0.2392,  0.2593],
        [-0.1021,  0.1447,  0.0909],
        [ 0.0748, -0.1475, -0.0715],
        [ 0.2433, -0.0606, -0.0102],
        [ 0.2511,  0.0042, -0.0578],
        [ 0.2247, -0.2217, -0.1703]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([13, 8])
    Vector embeddings shape: torch.Size([13, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.2396, -0.0822, -0.3600, -0.0125, -0.0765,  0.4235, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.2396, -0.0821, -0.3600, -0.0126, -0.0765,  0.4235, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.2396, -0.0822, -0.3601, -0.0125, -0.0765,  0.4236, -0.0313, -0.0114],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.2396, -0.0821, -0.3600, -0.0126, -0.0765,  0.4235, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.2396, -0.0822, -0.3600, -0.0125, -0.0765,  0.4236, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.2396, -0.0822, -0.3599, -0.0126, -0.0765,  0.4235, -0.0313, -0.0116],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.2396, -0.0822, -0.3600, -0.0125, -0.0765,  0.4236, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.2396, -0.0822, -0.3600, -0.0126, -0.0765,  0.4235, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.2396, -0.0822, -0.3600, -0.0125, -0.0765,  0.4236, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.2396, -0.0822, -0.3600, -0.0125, -0.0765,  0.4236, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.2396, -0.0821, -0.3599, -0.0126, -0.0764,  0.4235, -0.0313, -0.0116],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.2396, -0.0822, -0.3600, -0.0125, -0.0765,  0.4236, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.2396, -0.0822, -0.3600, -0.0125, -0.0765,  0.4235, -0.0313, -0.0115],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.1599, -0.0626,  0.0119],
        [ 0.1748, -0.2218, -0.1043],
        [ 0.1090, -0.2381,  0.1411],
        [-0.2656, -0.0145,  0.2776],
        [-0.0205,  0.0785,  0.0402],
        [-0.2327, -0.1303,  0.0760],
        [ 0.2849,  0.1656,  0.0703],
        [ 0.1868,  0.0294, -0.1012]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([13, 8])
    Vector embeddings shape: torch.Size([13, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.2312,  0.1375, -0.0855, -0.0162, -0.0306,  0.0796, -0.2332,  0.1273],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.2318,  0.1310, -0.0740, -0.0245, -0.0393,  0.0919, -0.2294,  0.1307],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.2371,  0.1282, -0.0783, -0.0213, -0.0404,  0.0943, -0.2316,  0.1327],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.2299,  0.1352, -0.0784, -0.0217, -0.0348,  0.0848, -0.2302,  0.1281],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.2353,  0.1283, -0.0756, -0.0234, -0.0407,  0.0943, -0.2304,  0.1325],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.2297,  0.1380, -0.0836, -0.0174, -0.0302,  0.0786, -0.2319,  0.1272],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.2357,  0.1278, -0.0756, -0.0232, -0.0408,  0.0946, -0.2305,  0.1329],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.2322,  0.1332, -0.0806, -0.0202, -0.0344,  0.0854, -0.2316,  0.1302],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.2310,  0.1366, -0.0817, -0.0191, -0.0340,  0.0842, -0.2319,  0.1269],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.2331,  0.1354, -0.0828, -0.0180, -0.0349,  0.0856, -0.2321,  0.1283],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.2306,  0.1336, -0.0787, -0.0217, -0.0341,  0.0845, -0.2305,  0.1301],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.2315,  0.1352, -0.0803, -0.0201, -0.0350,  0.0854, -0.2310,  0.1282],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.2349,  0.1278, -0.0767, -0.0202, -0.0372,  0.0891, -0.2316,  0.1335],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0159,  0.0086,  0.1731],
        [ 0.1605,  0.3207,  0.1953],
        [-0.0272, -0.1045, -0.1006],
        [-0.0468, -0.0372, -0.1711],
        [-0.1055,  0.0937,  0.0225],
        [ 0.1328,  0.2684,  0.1222],
        [ 0.1724,  0.0547,  0.1772],
        [ 0.1676,  0.1011, -0.0237]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0248,  0.0170,  0.1634],
        [ 0.1658,  0.3163,  0.1942],
        [-0.0173, -0.1154, -0.1059],
        [-0.0368, -0.0400, -0.1752],
        [-0.1127,  0.0906,  0.0316],
        [ 0.1479,  0.2656,  0.1275],
        [ 0.1751,  0.0462,  0.1850],
        [ 0.1712,  0.0946, -0.0243]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0259,  0.0162,  0.1615],
        [ 0.1658,  0.3142,  0.1955],
        [-0.0147, -0.1164, -0.1092],
        [-0.0341, -0.0431, -0.1762],
        [-0.1116,  0.0918,  0.0316],
        [ 0.1471,  0.2668,  0.1266],
        [ 0.1757,  0.0495,  0.1860],
        [ 0.1717,  0.0944, -0.0239]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0211,  0.0121,  0.1694],
        [ 0.1619,  0.3190,  0.1949],
        [-0.0230, -0.1094, -0.1005],
        [-0.0442, -0.0361, -0.1722],
        [-0.1093,  0.0921,  0.0260],
        [ 0.1399,  0.2663,  0.1247],
        [ 0.1726,  0.0495,  0.1801],
        [ 0.1698,  0.0987, -0.0231]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0265,  0.0175,  0.1612],
        [ 0.1660,  0.3151,  0.1952],
        [-0.0154, -0.1162, -0.1081],
        [-0.0339, -0.0421, -0.1761],
        [-0.1127,  0.0909,  0.0322],
        [ 0.1485,  0.2663,  0.1273],
        [ 0.1760,  0.0477,  0.1864],
        [ 0.1720,  0.0944, -0.0244]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0154,  0.0089,  0.1733],
        [ 0.1603,  0.3213,  0.1954],
        [-0.0284, -0.1040, -0.0994],
        [-0.0476, -0.0356, -0.1707],
        [-0.1065,  0.0940,  0.0230],
        [ 0.1328,  0.2682,  0.1224],
        [ 0.1724,  0.0547,  0.1770],
        [ 0.1677,  0.1012, -0.0244]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0268,  0.0175,  0.1607],
        [ 0.1658,  0.3149,  0.1952],
        [-0.0151, -0.1163, -0.1085],
        [-0.0334, -0.0424, -0.1762],
        [-0.1126,  0.0909,  0.0324],
        [ 0.1485,  0.2663,  0.1273],
        [ 0.1761,  0.0479,  0.1865],
        [ 0.1720,  0.0944, -0.0245]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0190,  0.0128,  0.1680],
        [ 0.1643,  0.3192,  0.1951],
        [-0.0234, -0.1090, -0.1050],
        [-0.0408, -0.0392, -0.1739],
        [-0.1100,  0.0930,  0.0280],
        [ 0.1398,  0.2687,  0.1248],
        [ 0.1754,  0.0527,  0.1818],
        [ 0.1695,  0.0982, -0.0263]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0200,  0.0106,  0.1708],
        [ 0.1619,  0.3182,  0.1951],
        [-0.0221, -0.1101, -0.1010],
        [-0.0454, -0.0374, -0.1720],
        [-0.1072,  0.0926,  0.0243],
        [ 0.1385,  0.2664,  0.1241],
        [ 0.1714,  0.0502,  0.1792],
        [ 0.1689,  0.0986, -0.0213]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0207,  0.0103,  0.1695],
        [ 0.1620,  0.3167,  0.1955],
        [-0.0212, -0.1103, -0.1028],
        [-0.0440, -0.0385, -0.1726],
        [-0.1076,  0.0931,  0.0250],
        [ 0.1388,  0.2666,  0.1239],
        [ 0.1719,  0.0518,  0.1802],
        [ 0.1689,  0.0979, -0.0217]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0191,  0.0130,  0.1682],
        [ 0.1637,  0.3200,  0.1948],
        [-0.0247, -0.1079, -0.1036],
        [-0.0413, -0.0379, -0.1732],
        [-0.1108,  0.0925,  0.0280],
        [ 0.1398,  0.2682,  0.1249],
        [ 0.1755,  0.0519,  0.1815],
        [ 0.1694,  0.0985, -0.0268]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0209,  0.0115,  0.1694],
        [ 0.1624,  0.3179,  0.1953],
        [-0.0219, -0.1104, -0.1018],
        [-0.0440, -0.0372, -0.1727],
        [-0.1087,  0.0926,  0.0259],
        [ 0.1398,  0.2666,  0.1245],
        [ 0.1724,  0.0505,  0.1803],
        [ 0.1697,  0.0983, -0.0225]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0235,  0.0170,  0.1611],
        [ 0.1624,  0.3171,  0.1946],
        [-0.0185, -0.1113, -0.1070],
        [-0.0336, -0.0425, -0.1749],
        [-0.1094,  0.0914,  0.0309],
        [ 0.1421,  0.2675,  0.1253],
        [ 0.1761,  0.0507,  0.1835],
        [ 0.1705,  0.0962, -0.0256]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Finished processing Conformer Ensemble: 63_i
==================================================
Retrieved conformer ensemble 289_vi with 52 conformers
Atomic Numbers: tensor([ 6,  6,  6,  6,  6,  6,  1,  6,  6,  6,  6,  6,  6,  1,  8,  8, 15,  6,
         6,  6,  6,  1,  1,  1,  1,  1,  1,  1,  1,  6,  6,  6,  6,  1,  1,  1,
         1,  1,  1,  1,  1,  8,  8,  1,  6, 17,  6,  1,  6,  6, 17,  7,  6,  1,
         6, 17,  6,  1,  6,  6, 17,  7,  6,  1])
Coords shape: torch.Size([52, 64, 3])
Number of conformers in atomic_data_list: 52

Processing Conformer Ensemble: 289_vi
Number of conformers in this ensemble: 52
Batch size: 16
Padding enabled: False

Batch 5 in Ensemble: 289_vi
Number of conformers in this batch before padding: 16
Number of conformers in this batch after padding: 16
Unique Atomic Numbers: [6, 1, 8, 15, 17, 7]
Average number of neighbors: 22.18

Processing complete Ensemble 0
process_conformer_ensemble input shape: torch.Size([61, 78, 32])
Num conformers: 61, Num atoms: 78, Total dim: 32
Scalar dim: 8, Vector dim: 8

Ensemble Average Embeddings:
  mean_pooling:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [0.08455155044794083, 0.02601044997572899, -0.06361975520849228, -0.04208950698375702, 0.02145659551024437, -0.04370196908712387, -0.0191155057400465, 0.025998080149292946]
    Vector: [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
  deep_sets:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [-0.2458653748035431, -0.19525788724422455, 0.343891978263855, -0.29052579402923584, 0.30400824546813965, -0.2535463869571686, -0.2012963593006134, 0.08274318277835846]
    Vector: [[0.10272038727998734, 0.17547105252742767, 0.2279513031244278], [0.12609030306339264, -0.2553165555000305, -0.19071297347545624], [0.1674254685640335, -0.061556942760944366, -0.1088598296046257], [0.020246971398591995, -0.09031669795513153, -0.17422053217887878], [-0.12064269185066223, 0.15537108480930328, -0.11419402807950974], [0.0628126934170723, 0.016703244298696518, -0.05418706312775612], [-0.01343685481697321, 0.018813850358128548, -0.19062882661819458], [-0.1780175417661667, -0.10066534578800201, -0.047337837517261505]]
  self_attention:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [-0.0765114352107048, -0.1907663196325302, -0.19835051894187927, -0.13184112310409546, -0.22895260155200958, 0.45460861921310425, -0.2776316702365875, 0.2997959554195404]
    Vector: [[-0.12593680620193481, 0.05642959102988243, 0.04439407214522362], [-0.12115345150232315, 0.09552133083343506, -0.007741181645542383], [-0.21677051484584808, -0.09509629756212234, -0.07487700134515762], [-0.041024211794137955, 0.19487574696540833, 0.12068811058998108], [0.03489164263010025, 0.1198839396238327, 0.06111297756433487], [0.043242596089839935, 0.0012208475964143872, 0.08267330378293991], [-0.11977451294660568, -0.10005933791399002, 0.006924950983375311], [-0.0933167040348053, 0.21418893337249756, 0.1367264837026596]]
  improved_deep_sets:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [0.042364221066236496, 0.10584760457277298, -0.10431890189647675, 0.06115514785051346, -0.10256576538085938, -0.2789914011955261, 0.20913636684417725, -0.1584099382162094]
    Vector: [[0.07715489715337753, -0.2124481350183487, 0.24181562662124634], [-0.0826437920331955, 0.004388418048620224, 0.005712032318115234], [0.12631607055664062, -0.3438892066478729, 0.16810418665409088], [-0.0645100325345993, 0.053289491683244705, 0.22438643872737885], [0.09289957582950592, 0.05899166688323021, -0.11697295308113098], [-0.28328317403793335, -0.021654559299349785, 0.11703332513570786], [-0.05733974650502205, -0.18021772801876068, -0.19221584498882294], [-0.0464739166200161, -0.23107287287712097, -0.15215013921260834]]
  improved_self_attention:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [0.061304185539484024, 0.09917981922626495, 0.2836565673351288, -0.06365963816642761, -0.08149882405996323, 0.09644001722335815, -0.3079018294811249, -0.07890757918357849]
    Vector: [[-0.0764310210943222, -0.00403657928109169, 0.04058030992746353], [0.24499230086803436, -0.3071177005767822, -0.008602024056017399], [0.09445278346538544, -0.14648336172103882, 0.08271817862987518], [0.045327771455049515, 0.13218845427036285, -0.38294127583503723], [-0.2019268423318863, -0.2183550000190735, -0.2841310203075409], [-0.16150182485580444, -0.04132300615310669, 0.07991507649421692], [-0.1738039255142212, 0.060974810272455215, -0.0880102887749672], [0.17714300751686096, -0.14561878144741058, 0.08560848236083984]]
Visualization for mean_pooling saved as 'mean_pooling_visualization.png'
Visualization for deep_sets saved as 'deep_sets_visualization.png'
Visualization for self_attention saved as 'self_attention_visualization.png'
Visualization for improved_deep_sets saved as 'improved_deep_sets_visualization.png'
Visualization for improved_self_attention saved as 'improved_self_attention_visualization.png'

Processing batch of 16 conformers from Ensemble 1

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1424])
  Number of nodes: 64
  Number of edges: 1424

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1414])
  Number of nodes: 64
  Number of edges: 1414

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1420])
  Number of nodes: 64
  Number of edges: 1420

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1432])
  Number of nodes: 64
  Number of edges: 1432

Sanity check for conformer 4 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1422])
  Number of nodes: 64
  Number of edges: 1422

Sanity check for conformer 5 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1420])
  Number of nodes: 64
  Number of edges: 1420

Sanity check for conformer 6 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1436])
  Number of nodes: 64
  Number of edges: 1436

Sanity check for conformer 7 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1430])
  Number of nodes: 64
  Number of edges: 1430

Sanity check for conformer 8 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1400])
  Number of nodes: 64
  Number of edges: 1400

Sanity check for conformer 9 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1400])
  Number of nodes: 64
  Number of edges: 1400

Sanity check for conformer 10 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1410])
  Number of nodes: 64
  Number of edges: 1410

Sanity check for conformer 11 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1420])
  Number of nodes: 64
  Number of edges: 1420

Sanity check for conformer 12 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1424])
  Number of nodes: 64
  Number of edges: 1424

Sanity check for conformer 13 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1420])
  Number of nodes: 64
  Number of edges: 1420

Sanity check for conformer 14 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1418])
  Number of nodes: 64
  Number of edges: 1418

Sanity check for conformer 15 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1422])
  Number of nodes: 64
  Number of edges: 1422
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1424])
Edge attributes shape: torch.Size([1424, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1424, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1424, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1424, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1414])
Edge attributes shape: torch.Size([1414, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1414, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1414, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1414, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1420])
Edge attributes shape: torch.Size([1420, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1420, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1420, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1420, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1432])
Edge attributes shape: torch.Size([1432, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1432, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1432, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1432, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1422])
Edge attributes shape: torch.Size([1422, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1422, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1422, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1422, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 4 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1420])
Edge attributes shape: torch.Size([1420, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1420, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1420, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1420, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 5 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1436])
Edge attributes shape: torch.Size([1436, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1436, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1436, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1436, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 6 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1430])
Edge attributes shape: torch.Size([1430, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1430, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1430, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1430, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 7 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1400])
Edge attributes shape: torch.Size([1400, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1400, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1400, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1400, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 8 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1400])
Edge attributes shape: torch.Size([1400, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1400, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1400, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1400, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 9 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1410])
Edge attributes shape: torch.Size([1410, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1410, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1410, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1410, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 10 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1420])
Edge attributes shape: torch.Size([1420, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1420, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1420, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1420, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 11 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1424])
Edge attributes shape: torch.Size([1424, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1424, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1424, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1424, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 12 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1420])
Edge attributes shape: torch.Size([1420, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1420, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1420, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1420, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 13 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1418])
Edge attributes shape: torch.Size([1418, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1418, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1418, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1418, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 14 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1422])
Edge attributes shape: torch.Size([1422, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1422, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1422, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1422, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 15 embeddings shape: torch.Size([64, 32])
process_conformer_ensemble input shape: torch.Size([16, 64, 32])
Num conformers: 16, Num atoms: 64, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0045, std: 0.0382
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0009, std: 0.0005, min: 0.0003, max: 0.0021
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0956, std: 0.2442
    Vector mean: -0.0007, std: 0.1546
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.1485, std: 0.1507
    Vector mean: 0.0158, std: 0.1250
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0001, std: 0.0000, min: 0.0000, max: 0.0001
  improved_deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0877, std: 0.2296
    Vector mean: -0.0148, std: 0.0703
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.1696, std: 0.1381
    Vector mean: 0.0312, std: 0.1047
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0029, std: 0.0010, min: 0.0001, max: 0.0039
      Vector - mean: 0.0028, std: 0.0014, min: 0.0003, max: 0.0042

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0051, -0.0159,  0.0733, -0.0600,  0.0254,  0.0159,  0.0247, -0.0289],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0051, -0.0158,  0.0733, -0.0600,  0.0254,  0.0159,  0.0247, -0.0289],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0012, -0.0153,  0.0733, -0.0612,  0.0256,  0.0160,  0.0252, -0.0293],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0012, -0.0161,  0.0729, -0.0609,  0.0258,  0.0166,  0.0254, -0.0296],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0035, -0.0163,  0.0726, -0.0608,  0.0256,  0.0150,  0.0248, -0.0298],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0037, -0.0161,  0.0727, -0.0607,  0.0256,  0.0150,  0.0249, -0.0299],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0036, -0.0171,  0.0722, -0.0604,  0.0259,  0.0156,  0.0250, -0.0301],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0035, -0.0169,  0.0722, -0.0605,  0.0259,  0.0156,  0.0251, -0.0300],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0064, -0.0173,  0.0730, -0.0608,  0.0267,  0.0143,  0.0234, -0.0282],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0049, -0.0178,  0.0724, -0.0615,  0.0270,  0.0135,  0.0236, -0.0292],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0048, -0.0185,  0.0720, -0.0613,  0.0272,  0.0141,  0.0238, -0.0294],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0014, -0.0154,  0.0743, -0.0608,  0.0252,  0.0174,  0.0254, -0.0299],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0039, -0.0163,  0.0736, -0.0603,  0.0252,  0.0165,  0.0251, -0.0305],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0038, -0.0164,  0.0735, -0.0603,  0.0252,  0.0164,  0.0250, -0.0304],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 7.6933e-05, -1.5729e-02,  7.3576e-02, -6.1396e-02,  2.5422e-02,
         1.6683e-02,  2.5475e-02, -3.0675e-02], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0025, -0.0167,  0.0729, -0.0609,  0.0255,  0.0157,  0.0252, -0.0313],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.1844, -0.2041,  0.1448, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.1844, -0.2041,  0.1448, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.1843, -0.2040,  0.1449, -0.2117, -0.3921,  0.0801, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.1844, -0.2040,  0.1449, -0.2118, -0.3921,  0.0801, -0.3486,  0.3513],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.1844, -0.2040,  0.1448, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.1844, -0.2040,  0.1448, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.1844, -0.2040,  0.1448, -0.2117, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.1844, -0.2040,  0.1448, -0.2117, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.1844, -0.2041,  0.1448, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.1844, -0.2040,  0.1447, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.1844, -0.2040,  0.1448, -0.2117, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.1844, -0.2040,  0.1449, -0.2117, -0.3921,  0.0801, -0.3486,  0.3513],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.1844, -0.2040,  0.1448, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.1844, -0.2040,  0.1448, -0.2116, -0.3921,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.1844, -0.2040,  0.1448, -0.2118, -0.3921,  0.0801, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.1844, -0.2039,  0.1447, -0.2117, -0.3922,  0.0800, -0.3486,  0.3514],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.1438, -0.1379, -0.0246],
        [ 0.0803,  0.2096, -0.0426],
        [ 0.1416, -0.1747,  0.0107],
        [-0.1365,  0.1963, -0.2053],
        [-0.1508, -0.1438,  0.1341],
        [ 0.1389, -0.1393, -0.0567],
        [-0.0931,  0.1988,  0.0797],
        [ 0.2552,  0.2246, -0.2370]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.2136, -0.0935,  0.0223, -0.3025, -0.2196,  0.1432, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.2136, -0.0935,  0.0223, -0.3025, -0.2196,  0.1432, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.2137, -0.0936,  0.0223, -0.3024, -0.2196,  0.1432, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.2137, -0.0935,  0.0223, -0.3025, -0.2196,  0.1432, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.2136, -0.0936,  0.0222, -0.3024, -0.2196,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.2136, -0.0935,  0.0222, -0.3024, -0.2196,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.2136, -0.0935,  0.0222, -0.3025, -0.2197,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.2136, -0.0935,  0.0222, -0.3025, -0.2197,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.2136, -0.0936,  0.0223, -0.3024, -0.2196,  0.1432, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.2136, -0.0936,  0.0222, -0.3024, -0.2196,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.2136, -0.0935,  0.0222, -0.3024, -0.2197,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.2137, -0.0935,  0.0223, -0.3025, -0.2196,  0.1432, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.2136, -0.0935,  0.0222, -0.3025, -0.2197,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.2136, -0.0935,  0.0222, -0.3025, -0.2197,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.2137, -0.0935,  0.0222, -0.3024, -0.2196,  0.1431, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.2136, -0.0935,  0.0222, -0.3024, -0.2197,  0.1430, -0.3082, -0.2158],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0167, -0.1566,  0.1708],
        [ 0.0573,  0.1308, -0.1115],
        [-0.0361, -0.0020,  0.0904],
        [-0.0327,  0.1754,  0.0544],
        [-0.1962, -0.0013, -0.0212],
        [ 0.2169,  0.1647,  0.1792],
        [ 0.0860,  0.1059, -0.2068],
        [-0.1845, -0.0400, -0.0798]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0167, -0.1566,  0.1708],
        [ 0.0573,  0.1308, -0.1115],
        [-0.0361, -0.0020,  0.0904],
        [-0.0327,  0.1754,  0.0544],
        [-0.1962, -0.0013, -0.0212],
        [ 0.2169,  0.1647,  0.1792],
        [ 0.0860,  0.1059, -0.2068],
        [-0.1845, -0.0400, -0.0798]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0166, -0.1567,  0.1708],
        [ 0.0573,  0.1308, -0.1116],
        [-0.0361, -0.0020,  0.0905],
        [-0.0327,  0.1754,  0.0545],
        [-0.1961, -0.0012, -0.0212],
        [ 0.2168,  0.1648,  0.1793],
        [ 0.0861,  0.1059, -0.2069],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0166, -0.1567,  0.1708],
        [ 0.0573,  0.1308, -0.1116],
        [-0.0361, -0.0020,  0.0906],
        [-0.0327,  0.1754,  0.0545],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1648,  0.1794],
        [ 0.0861,  0.1059, -0.2069],
        [-0.1845, -0.0400, -0.0798]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.0166, -0.1567,  0.1708],
        [ 0.0574,  0.1308, -0.1115],
        [-0.0361, -0.0020,  0.0905],
        [-0.0327,  0.1754,  0.0544],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1647,  0.1792],
        [ 0.0861,  0.1058, -0.2069],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.0166, -0.1567,  0.1708],
        [ 0.0574,  0.1307, -0.1115],
        [-0.0361, -0.0020,  0.0905],
        [-0.0327,  0.1755,  0.0544],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1647,  0.1792],
        [ 0.0861,  0.1058, -0.2069],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.0166, -0.1567,  0.1708],
        [ 0.0574,  0.1308, -0.1115],
        [-0.0361, -0.0020,  0.0905],
        [-0.0327,  0.1754,  0.0544],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1648,  0.1793],
        [ 0.0861,  0.1058, -0.2069],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.0166, -0.1567,  0.1708],
        [ 0.0574,  0.1308, -0.1115],
        [-0.0361, -0.0020,  0.0905],
        [-0.0327,  0.1754,  0.0544],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1648,  0.1793],
        [ 0.0861,  0.1058, -0.2069],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.0166, -0.1567,  0.1707],
        [ 0.0574,  0.1309, -0.1113],
        [-0.0360, -0.0020,  0.0903],
        [-0.0327,  0.1754,  0.0544],
        [-0.1962, -0.0014, -0.0212],
        [ 0.2168,  0.1647,  0.1790],
        [ 0.0861,  0.1059, -0.2069],
        [-0.1846, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.0165, -0.1567,  0.1707],
        [ 0.0575,  0.1308, -0.1114],
        [-0.0360, -0.0019,  0.0904],
        [-0.0327,  0.1754,  0.0544],
        [-0.1961, -0.0014, -0.0212],
        [ 0.2168,  0.1647,  0.1791],
        [ 0.0862,  0.1058, -0.2070],
        [-0.1845, -0.0401, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.0165, -0.1567,  0.1708],
        [ 0.0574,  0.1308, -0.1114],
        [-0.0360, -0.0020,  0.0904],
        [-0.0327,  0.1753,  0.0543],
        [-0.1961, -0.0014, -0.0211],
        [ 0.2169,  0.1648,  0.1791],
        [ 0.0862,  0.1058, -0.2070],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.0167, -0.1567,  0.1709],
        [ 0.0573,  0.1308, -0.1116],
        [-0.0361, -0.0020,  0.0906],
        [-0.0327,  0.1754,  0.0545],
        [-0.1962, -0.0012, -0.0213],
        [ 0.2168,  0.1648,  0.1794],
        [ 0.0861,  0.1059, -0.2068],
        [-0.1845, -0.0400, -0.0798]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.0167, -0.1567,  0.1708],
        [ 0.0573,  0.1307, -0.1116],
        [-0.0361, -0.0020,  0.0905],
        [-0.0327,  0.1755,  0.0544],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1647,  0.1793],
        [ 0.0860,  0.1058, -0.2068],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.0167, -0.1567,  0.1708],
        [ 0.0573,  0.1307, -0.1116],
        [-0.0361, -0.0020,  0.0905],
        [-0.0327,  0.1755,  0.0544],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1647,  0.1793],
        [ 0.0860,  0.1058, -0.2068],
        [-0.1845, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.0166, -0.1567,  0.1709],
        [ 0.0573,  0.1307, -0.1117],
        [-0.0361, -0.0020,  0.0906],
        [-0.0327,  0.1754,  0.0545],
        [-0.1961, -0.0012, -0.0212],
        [ 0.2168,  0.1648,  0.1794],
        [ 0.0861,  0.1059, -0.2069],
        [-0.1844, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.0166, -0.1567,  0.1709],
        [ 0.0574,  0.1307, -0.1116],
        [-0.0361, -0.0020,  0.0906],
        [-0.0327,  0.1755,  0.0544],
        [-0.1961, -0.0013, -0.0212],
        [ 0.2169,  0.1648,  0.1793],
        [ 0.0860,  0.1058, -0.2069],
        [-0.1844, -0.0400, -0.0799]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0286, -0.4947, -0.0434, -0.2517, -0.2712,  0.2997, -0.0348,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0286, -0.4947, -0.0434, -0.2517, -0.2712,  0.2997, -0.0348,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0286, -0.4949, -0.0434, -0.2517, -0.2713,  0.2998, -0.0348,  0.0660],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0286, -0.4949, -0.0433, -0.2517, -0.2712,  0.2998, -0.0349,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0286, -0.4948, -0.0434, -0.2517, -0.2712,  0.2998, -0.0348,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0286, -0.4948, -0.0434, -0.2517, -0.2713,  0.2998, -0.0348,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0286, -0.4948, -0.0433, -0.2517, -0.2712,  0.2998, -0.0349,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0286, -0.4948, -0.0433, -0.2517, -0.2712,  0.2998, -0.0349,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0286, -0.4946, -0.0434, -0.2517, -0.2712,  0.2996, -0.0349,  0.0658],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0286, -0.4947, -0.0434, -0.2517, -0.2712,  0.2997, -0.0349,  0.0658],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0286, -0.4947, -0.0433, -0.2517, -0.2712,  0.2997, -0.0350,  0.0658],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0286, -0.4949, -0.0434, -0.2517, -0.2713,  0.2998, -0.0348,  0.0660],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0286, -0.4948, -0.0434, -0.2517, -0.2713,  0.2997, -0.0348,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0286, -0.4948, -0.0434, -0.2517, -0.2713,  0.2997, -0.0348,  0.0659],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0286, -0.4950, -0.0434, -0.2517, -0.2713,  0.2998, -0.0349,  0.0660],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0286, -0.4949, -0.0434, -0.2517, -0.2713,  0.2998, -0.0349,  0.0660],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.1192, -0.1392,  0.0890],
        [-0.0447, -0.0762, -0.0218],
        [ 0.0651,  0.0063,  0.1012],
        [-0.0333, -0.1167, -0.0059],
        [-0.0079,  0.0112,  0.0171],
        [-0.0997, -0.0561, -0.0142],
        [-0.0759,  0.0954, -0.0643],
        [-0.0034,  0.0075, -0.1072]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.1942,  0.0045,  0.2143,  0.1805,  0.2329, -0.0950,  0.2725,  0.3495],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.1938,  0.0046,  0.2143,  0.1806,  0.2329, -0.0948,  0.2726,  0.3491],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.2006,  0.0021,  0.2202,  0.1797,  0.2339, -0.0991,  0.2767,  0.3528],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.2005,  0.0036,  0.2126,  0.1781,  0.2310, -0.0986,  0.2714,  0.3537],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.1996,  0.0033,  0.2178,  0.1792,  0.2331, -0.0978,  0.2745,  0.3536],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.1990,  0.0034,  0.2181,  0.1793,  0.2333, -0.0974,  0.2749,  0.3530],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.1995,  0.0043,  0.2105,  0.1775,  0.2310, -0.0978,  0.2693,  0.3538],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.1999,  0.0052,  0.2103,  0.1768,  0.2305, -0.0971,  0.2688,  0.3549],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.1955,  0.0061,  0.2113,  0.1787,  0.2316, -0.0939,  0.2697,  0.3532],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.2011,  0.0048,  0.2146,  0.1772,  0.2317, -0.0969,  0.2718,  0.3577],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.2022,  0.0063,  0.2073,  0.1748,  0.2295, -0.0969,  0.2660,  0.3594],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.2025,  0.0012,  0.2149,  0.1805,  0.2298, -0.1011,  0.2759,  0.3567],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.2011,  0.0019,  0.2135,  0.1792,  0.2303, -0.1009,  0.2732,  0.3567],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.2012,  0.0019,  0.2134,  0.1794,  0.2298, -0.1009,  0.2733,  0.3567],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 2.0724e-01,  8.8640e-05,  2.1809e-01,  1.7877e-01,  2.3016e-01,
        -1.0426e-01,  2.7688e-01,  3.6001e-01], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.2062,  0.0008,  0.2165,  0.1774,  0.2306, -0.1042,  0.2741,  0.3603],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0905, -0.0709,  0.1902],
        [ 0.0340, -0.1409,  0.0037],
        [ 0.1028,  0.0396,  0.2321],
        [ 0.0392, -0.1063, -0.0553],
        [ 0.1245, -0.0847,  0.1772],
        [-0.0779, -0.0853, -0.0793],
        [ 0.1869, -0.0302,  0.0474],
        [ 0.1080,  0.0798,  0.0360]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0907, -0.0708,  0.1902],
        [ 0.0339, -0.1404,  0.0036],
        [ 0.1027,  0.0397,  0.2321],
        [ 0.0394, -0.1062, -0.0551],
        [ 0.1245, -0.0845,  0.1772],
        [-0.0781, -0.0853, -0.0788],
        [ 0.1869, -0.0305,  0.0474],
        [ 0.1078,  0.0796,  0.0357]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0874, -0.0713,  0.1956],
        [ 0.0343, -0.1454,  0.0106],
        [ 0.1092,  0.0329,  0.2314],
        [ 0.0366, -0.1109, -0.0555],
        [ 0.1217, -0.0860,  0.1693],
        [-0.0771, -0.0809, -0.0778],
        [ 0.1926, -0.0261,  0.0454],
        [ 0.1050,  0.0816,  0.0341]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0863, -0.0709,  0.1947],
        [ 0.0345, -0.1479,  0.0102],
        [ 0.1141,  0.0334,  0.2324],
        [ 0.0346, -0.1110, -0.0549],
        [ 0.1225, -0.0857,  0.1705],
        [-0.0804, -0.0827, -0.0776],
        [ 0.1934, -0.0241,  0.0438],
        [ 0.1060,  0.0834,  0.0360]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.0876, -0.0702,  0.1949],
        [ 0.0299, -0.1428,  0.0070],
        [ 0.1059,  0.0360,  0.2278],
        [ 0.0360, -0.1082, -0.0547],
        [ 0.1217, -0.0886,  0.1700],
        [-0.0790, -0.0833, -0.0791],
        [ 0.1938, -0.0288,  0.0463],
        [ 0.1062,  0.0828,  0.0365]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.0880, -0.0698,  0.1952],
        [ 0.0297, -0.1422,  0.0067],
        [ 0.1056,  0.0366,  0.2274],
        [ 0.0359, -0.1081, -0.0544],
        [ 0.1217, -0.0885,  0.1700],
        [-0.0792, -0.0835, -0.0787],
        [ 0.1937, -0.0292,  0.0467],
        [ 0.1060,  0.0826,  0.0364]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.0865, -0.0697,  0.1944],
        [ 0.0309, -0.1456,  0.0068],
        [ 0.1115,  0.0361,  0.2292],
        [ 0.0340, -0.1086, -0.0541],
        [ 0.1224, -0.0877,  0.1708],
        [-0.0825, -0.0847, -0.0783],
        [ 0.1943, -0.0265,  0.0446],
        [ 0.1065,  0.0847,  0.0378]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.0858, -0.0690,  0.1957],
        [ 0.0289, -0.1456,  0.0063],
        [ 0.1110,  0.0372,  0.2267],
        [ 0.0329, -0.1079, -0.0538],
        [ 0.1221, -0.0895,  0.1699],
        [-0.0828, -0.0852, -0.0796],
        [ 0.1958, -0.0268,  0.0452],
        [ 0.1071,  0.0849,  0.0398]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.0887, -0.0700,  0.1912],
        [ 0.0297, -0.1407,  0.0012],
        [ 0.0996,  0.0419,  0.2253],
        [ 0.0363, -0.1043, -0.0545],
        [ 0.1235, -0.0893,  0.1750],
        [-0.0796, -0.0870, -0.0814],
        [ 0.1893, -0.0315,  0.0472],
        [ 0.1105,  0.0818,  0.0399]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.0866, -0.0686,  0.1961],
        [ 0.0251, -0.1433,  0.0045],
        [ 0.1037,  0.0397,  0.2207],
        [ 0.0325, -0.1053, -0.0551],
        [ 0.1216, -0.0934,  0.1688],
        [-0.0813, -0.0857, -0.0821],
        [ 0.1967, -0.0304,  0.0472],
        [ 0.1083,  0.0844,  0.0417]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.0843, -0.0675,  0.1968],
        [ 0.0243, -0.1466,  0.0044],
        [ 0.1093,  0.0395,  0.2204],
        [ 0.0297, -0.1055, -0.0543],
        [ 0.1217, -0.0940,  0.1681],
        [-0.0847, -0.0868, -0.0825],
        [ 0.1987, -0.0277,  0.0453],
        [ 0.1092,  0.0865,  0.0445]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.0871, -0.0735,  0.1906],
        [ 0.0355, -0.1483,  0.0128],
        [ 0.1128,  0.0300,  0.2377],
        [ 0.0376, -0.1111, -0.0577],
        [ 0.1236, -0.0857,  0.1724],
        [-0.0773, -0.0803, -0.0784],
        [ 0.1913, -0.0235,  0.0426],
        [ 0.1073,  0.0820,  0.0333]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.0875, -0.0719,  0.1903],
        [ 0.0305, -0.1454,  0.0089],
        [ 0.1091,  0.0337,  0.2332],
        [ 0.0367, -0.1084, -0.0567],
        [ 0.1236, -0.0890,  0.1727],
        [-0.0795, -0.0829, -0.0799],
        [ 0.1927, -0.0265,  0.0440],
        [ 0.1087,  0.0831,  0.0361]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.0872, -0.0723,  0.1902],
        [ 0.0307, -0.1452,  0.0090],
        [ 0.1092,  0.0331,  0.2338],
        [ 0.0373, -0.1082, -0.0568],
        [ 0.1236, -0.0886,  0.1727],
        [-0.0795, -0.0827, -0.0796],
        [ 0.1928, -0.0268,  0.0437],
        [ 0.1083,  0.0831,  0.0355]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.0842, -0.0732,  0.1952],
        [ 0.0320, -0.1505,  0.0157],
        [ 0.1162,  0.0269,  0.2334],
        [ 0.0342, -0.1126, -0.0572],
        [ 0.1212, -0.0892,  0.1658],
        [-0.0788, -0.0788, -0.0781],
        [ 0.1977, -0.0221,  0.0417],
        [ 0.1054,  0.0851,  0.0340]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.0845, -0.0716,  0.1945],
        [ 0.0272, -0.1484,  0.0122],
        [ 0.1128,  0.0307,  0.2287],
        [ 0.0327, -0.1099, -0.0565],
        [ 0.1213, -0.0926,  0.1664],
        [-0.0808, -0.0817, -0.0796],
        [ 0.1991, -0.0245,  0.0431],
        [ 0.1071,  0.0862,  0.0372]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Batch 6 in Ensemble: 289_vi
Number of conformers in this batch before padding: 16
Number of conformers in this batch after padding: 16
Unique Atomic Numbers: [6, 1, 8, 15, 17, 7]
Average number of neighbors: 22.36

Processing batch of 16 conformers from Ensemble 1

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1420])
  Number of nodes: 64
  Number of edges: 1420

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1404])
  Number of nodes: 64
  Number of edges: 1404

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1402])
  Number of nodes: 64
  Number of edges: 1402

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1432])
  Number of nodes: 64
  Number of edges: 1432

Sanity check for conformer 4 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1436])
  Number of nodes: 64
  Number of edges: 1436

Sanity check for conformer 5 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1432])
  Number of nodes: 64
  Number of edges: 1432

Sanity check for conformer 6 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1412])
  Number of nodes: 64
  Number of edges: 1412

Sanity check for conformer 7 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1438])
  Number of nodes: 64
  Number of edges: 1438

Sanity check for conformer 8 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1438])
  Number of nodes: 64
  Number of edges: 1438

Sanity check for conformer 9 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1446])
  Number of nodes: 64
  Number of edges: 1446

Sanity check for conformer 10 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1446])
  Number of nodes: 64
  Number of edges: 1446

Sanity check for conformer 11 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1430])
  Number of nodes: 64
  Number of edges: 1430

Sanity check for conformer 12 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1436])
  Number of nodes: 64
  Number of edges: 1436

Sanity check for conformer 13 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1436])
  Number of nodes: 64
  Number of edges: 1436

Sanity check for conformer 14 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1440])
  Number of nodes: 64
  Number of edges: 1440

Sanity check for conformer 15 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1446])
  Number of nodes: 64
  Number of edges: 1446
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1420])
Edge attributes shape: torch.Size([1420, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1420, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1420, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1420, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1404])
Edge attributes shape: torch.Size([1404, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1404, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1404, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1404, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1402])
Edge attributes shape: torch.Size([1402, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1402, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1402, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1402, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1432])
Edge attributes shape: torch.Size([1432, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1432, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1432, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1432, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1436])
Edge attributes shape: torch.Size([1436, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1436, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1436, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1436, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 4 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1432])
Edge attributes shape: torch.Size([1432, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1432, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1432, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1432, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 5 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1412])
Edge attributes shape: torch.Size([1412, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1412, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1412, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1412, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 6 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1438])
Edge attributes shape: torch.Size([1438, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1438, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1438, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1438, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 7 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1438])
Edge attributes shape: torch.Size([1438, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1438, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1438, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1438, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 8 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1446])
Edge attributes shape: torch.Size([1446, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1446, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1446, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1446, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 9 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1446])
Edge attributes shape: torch.Size([1446, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1446, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1446, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1446, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 10 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1430])
Edge attributes shape: torch.Size([1430, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1430, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1430, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1430, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 11 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1436])
Edge attributes shape: torch.Size([1436, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1436, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1436, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1436, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 12 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1436])
Edge attributes shape: torch.Size([1436, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1436, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1436, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1436, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 13 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1440])
Edge attributes shape: torch.Size([1440, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1440, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1440, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1440, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 14 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1446])
Edge attributes shape: torch.Size([1446, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1446, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1446, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1446, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 15 embeddings shape: torch.Size([64, 32])
process_conformer_ensemble input shape: torch.Size([16, 64, 32])
Num conformers: 16, Num atoms: 64, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0471, std: 0.0467
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0011, std: 0.0006, min: 0.0004, max: 0.0023
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0689, std: 0.2134
    Vector mean: 0.0262, std: 0.1372
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0694, std: 0.2282
    Vector mean: 0.0226, std: 0.1243
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0001, std: 0.0001, min: 0.0000, max: 0.0002
      Vector - mean: 0.0001, std: 0.0000, min: 0.0000, max: 0.0002
  improved_deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.1064, std: 0.1664
    Vector mean: 0.0396, std: 0.0862
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0001, std: 0.0001, min: 0.0000, max: 0.0002
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0211, std: 0.1282
    Vector mean: 0.0100, std: 0.1384
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0021, std: 0.0009, min: 0.0011, max: 0.0046
      Vector - mean: 0.0018, std: 0.0005, min: 0.0013, max: 0.0029

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0264,  0.0531,  0.0117, -0.0148,  0.1319,  0.0642,  0.0098,  0.1019],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0249,  0.0527,  0.0109, -0.0145,  0.1302,  0.0632,  0.0089,  0.0999],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0263,  0.0520,  0.0112, -0.0139,  0.1308,  0.0633,  0.0088,  0.1003],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0253,  0.0535,  0.0130, -0.0160,  0.1309,  0.0640,  0.0101,  0.1035],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0246,  0.0537,  0.0124, -0.0158,  0.1309,  0.0642,  0.0097,  0.1031],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0247,  0.0535,  0.0124, -0.0157,  0.1308,  0.0642,  0.0098,  0.1030],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0246,  0.0525,  0.0119, -0.0148,  0.1298,  0.0633,  0.0087,  0.1014],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0224,  0.0562,  0.0120, -0.0173,  0.1279,  0.0628,  0.0084,  0.1012],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0224,  0.0562,  0.0120, -0.0173,  0.1279,  0.0628,  0.0083,  0.1012],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0212,  0.0563,  0.0125, -0.0181,  0.1276,  0.0628,  0.0090,  0.1020],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0212,  0.0563,  0.0124, -0.0181,  0.1276,  0.0628,  0.0090,  0.1019],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0239,  0.0556,  0.0122, -0.0166,  0.1284,  0.0628,  0.0082,  0.1015],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0237,  0.0556,  0.0122, -0.0167,  0.1283,  0.0628,  0.0082,  0.1014],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0202,  0.0550,  0.0127, -0.0176,  0.1264,  0.0624,  0.0073,  0.1016],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0222,  0.0563,  0.0129, -0.0176,  0.1277,  0.0629,  0.0082,  0.1028],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0221,  0.0563,  0.0129, -0.0177,  0.1276,  0.0629,  0.0082,  0.1027],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.3848,  0.1566, -0.3159,  0.0552, -0.0674, -0.1390,  0.2839, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.3848,  0.1566, -0.3159,  0.0552, -0.0674, -0.1389,  0.2838, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.3848,  0.1566, -0.3159,  0.0552, -0.0674, -0.1389,  0.2838, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.3849,  0.1566, -0.3159,  0.0551, -0.0674, -0.1389,  0.2839, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.3849,  0.1566, -0.3159,  0.0551, -0.0674, -0.1389,  0.2839, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.3849,  0.1566, -0.3159,  0.0551, -0.0674, -0.1389,  0.2839, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.3849,  0.1567, -0.3159,  0.0551, -0.0674, -0.1389,  0.2838, -0.1396],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.3849,  0.1566, -0.3159,  0.0551, -0.0673, -0.1389,  0.2839, -0.1396],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.3849,  0.1566, -0.3159,  0.0551, -0.0673, -0.1389,  0.2839, -0.1396],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.3849,  0.1565, -0.3159,  0.0551, -0.0673, -0.1389,  0.2839, -0.1396],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.3849,  0.1565, -0.3159,  0.0551, -0.0673, -0.1389,  0.2839, -0.1396],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.3849,  0.1566, -0.3159,  0.0551, -0.0674, -0.1389,  0.2839, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.3849,  0.1566, -0.3159,  0.0551, -0.0674, -0.1389,  0.2839, -0.1395],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.3850,  0.1567, -0.3159,  0.0551, -0.0672, -0.1388,  0.2839, -0.1396],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.3850,  0.1566, -0.3159,  0.0551, -0.0673, -0.1389,  0.2839, -0.1396],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.3850,  0.1566, -0.3159,  0.0551, -0.0673, -0.1389,  0.2839, -0.1396],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.2038, -0.0481, -0.0246],
        [ 0.1425, -0.1070, -0.0380],
        [ 0.0414,  0.1509,  0.0342],
        [ 0.0441,  0.1752, -0.1958],
        [ 0.2011, -0.0860,  0.0456],
        [ 0.2580,  0.1017,  0.1792],
        [-0.2385,  0.1639, -0.0064],
        [-0.0740,  0.1952, -0.0815]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0006, -0.1643, -0.4190,  0.0322, -0.2128,  0.3848, -0.2292,  0.0537],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0007, -0.1644, -0.4189,  0.0323, -0.2129,  0.3847, -0.2292,  0.0537],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0007, -0.1644, -0.4189,  0.0323, -0.2129,  0.3848, -0.2293,  0.0538],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0004, -0.1641, -0.4190,  0.0320, -0.2127,  0.3847, -0.2292,  0.0536],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0004, -0.1641, -0.4190,  0.0321, -0.2127,  0.3847, -0.2292,  0.0536],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0005, -0.1642, -0.4190,  0.0321, -0.2127,  0.3847, -0.2292,  0.0536],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0006, -0.1643, -0.4189,  0.0322, -0.2128,  0.3847, -0.2292,  0.0537],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-2.3667e-04, -1.6403e-01, -4.1889e-01,  3.1929e-02, -2.1251e-01,
         3.8452e-01, -2.2929e-01,  5.3528e-02], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-2.3738e-04, -1.6403e-01, -4.1888e-01,  3.1927e-02, -2.1251e-01,
         3.8452e-01, -2.2930e-01,  5.3528e-02], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-1.3903e-04, -1.6392e-01, -4.1887e-01,  3.1848e-02, -2.1245e-01,
         3.8447e-01, -2.2927e-01,  5.3454e-02], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-1.4032e-04, -1.6392e-01, -4.1887e-01,  3.1850e-02, -2.1245e-01,
         3.8447e-01, -2.2927e-01,  5.3456e-02], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-2.9766e-04, -1.6410e-01, -4.1891e-01,  3.1966e-02, -2.1255e-01,
         3.8457e-01, -2.2930e-01,  5.3562e-02], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-2.9225e-04, -1.6409e-01, -4.1890e-01,  3.1958e-02, -2.1255e-01,
         3.8456e-01, -2.2930e-01,  5.3557e-02], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-1.4653e-04, -1.6396e-01, -4.1886e-01,  3.1897e-02, -2.1244e-01,
         3.8444e-01, -2.2927e-01,  5.3504e-02], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-1.1756e-04, -1.6393e-01, -4.1891e-01,  3.1844e-02, -2.1244e-01,
         3.8449e-01, -2.2928e-01,  5.3459e-02], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-1.1818e-04, -1.6393e-01, -4.1890e-01,  3.1839e-02, -2.1243e-01,
         3.8449e-01, -2.2928e-01,  5.3457e-02], grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.1359, -0.1067, -0.0660],
        [ 0.1467,  0.1965,  0.2170],
        [-0.0847, -0.0553, -0.1871],
        [ 0.1524, -0.1036,  0.2052],
        [ 0.0058, -0.0569, -0.0006],
        [-0.0876, -0.0737, -0.1165],
        [ 0.0069,  0.2075, -0.0760],
        [ 0.1864,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.1359, -0.1067, -0.0662],
        [ 0.1467,  0.1966,  0.2169],
        [-0.0847, -0.0555, -0.1870],
        [ 0.1524, -0.1036,  0.2053],
        [ 0.0058, -0.0569, -0.0005],
        [-0.0876, -0.0736, -0.1166],
        [ 0.0070,  0.2075, -0.0760],
        [ 0.1864,  0.0272,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.1359, -0.1067, -0.0662],
        [ 0.1467,  0.1967,  0.2170],
        [-0.0848, -0.0554, -0.1871],
        [ 0.1524, -0.1037,  0.2053],
        [ 0.0058, -0.0569, -0.0005],
        [-0.0876, -0.0736, -0.1166],
        [ 0.0071,  0.2075, -0.0759],
        [ 0.1864,  0.0272,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.1359, -0.1068, -0.0658],
        [ 0.1468,  0.1962,  0.2169],
        [-0.0846, -0.0553, -0.1871],
        [ 0.1524, -0.1036,  0.2052],
        [ 0.0056, -0.0570, -0.0006],
        [-0.0876, -0.0739, -0.1165],
        [ 0.0069,  0.2074, -0.0761],
        [ 0.1863,  0.0270,  0.0713]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.1359, -0.1068, -0.0658],
        [ 0.1467,  0.1963,  0.2169],
        [-0.0845, -0.0553, -0.1871],
        [ 0.1524, -0.1036,  0.2052],
        [ 0.0057, -0.0570, -0.0006],
        [-0.0875, -0.0738, -0.1165],
        [ 0.0069,  0.2074, -0.0761],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.1359, -0.1068, -0.0659],
        [ 0.1467,  0.1963,  0.2169],
        [-0.0846, -0.0553, -0.1871],
        [ 0.1524, -0.1036,  0.2052],
        [ 0.0057, -0.0570, -0.0006],
        [-0.0875, -0.0738, -0.1165],
        [ 0.0069,  0.2074, -0.0761],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.1359, -0.1067, -0.0661],
        [ 0.1468,  0.1965,  0.2169],
        [-0.0846, -0.0554, -0.1870],
        [ 0.1524, -0.1036,  0.2053],
        [ 0.0057, -0.0570, -0.0006],
        [-0.0875, -0.0737, -0.1166],
        [ 0.0070,  0.2075, -0.0760],
        [ 0.1864,  0.0272,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.1359, -0.1070, -0.0658],
        [ 0.1469,  0.1962,  0.2168],
        [-0.0844, -0.0554, -0.1868],
        [ 0.1525, -0.1035,  0.2052],
        [ 0.0057, -0.0570, -0.0007],
        [-0.0876, -0.0737, -0.1165],
        [ 0.0068,  0.2073, -0.0763],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.1359, -0.1070, -0.0658],
        [ 0.1469,  0.1962,  0.2168],
        [-0.0844, -0.0554, -0.1868],
        [ 0.1525, -0.1035,  0.2052],
        [ 0.0057, -0.0570, -0.0007],
        [-0.0876, -0.0737, -0.1165],
        [ 0.0068,  0.2073, -0.0763],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.1359, -0.1071, -0.0657],
        [ 0.1469,  0.1961,  0.2167],
        [-0.0843, -0.0554, -0.1868],
        [ 0.1524, -0.1035,  0.2052],
        [ 0.0056, -0.0571, -0.0007],
        [-0.0875, -0.0738, -0.1165],
        [ 0.0068,  0.2073, -0.0764],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.1359, -0.1071, -0.0657],
        [ 0.1469,  0.1961,  0.2167],
        [-0.0843, -0.0554, -0.1868],
        [ 0.1524, -0.1035,  0.2052],
        [ 0.0056, -0.0571, -0.0007],
        [-0.0875, -0.0738, -0.1165],
        [ 0.0068,  0.2073, -0.0764],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.1359, -0.1069, -0.0658],
        [ 0.1469,  0.1963,  0.2168],
        [-0.0845, -0.0554, -0.1868],
        [ 0.1525, -0.1036,  0.2052],
        [ 0.0057, -0.0570, -0.0007],
        [-0.0876, -0.0737, -0.1165],
        [ 0.0068,  0.2073, -0.0762],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.1359, -0.1069, -0.0658],
        [ 0.1469,  0.1963,  0.2168],
        [-0.0845, -0.0554, -0.1868],
        [ 0.1525, -0.1036,  0.2052],
        [ 0.0057, -0.0570, -0.0007],
        [-0.0876, -0.0737, -0.1165],
        [ 0.0068,  0.2073, -0.0762],
        [ 0.1863,  0.0271,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.1358, -0.1071, -0.0658],
        [ 0.1470,  0.1962,  0.2168],
        [-0.0843, -0.0555, -0.1868],
        [ 0.1524, -0.1035,  0.2052],
        [ 0.0056, -0.0571, -0.0007],
        [-0.0874, -0.0738, -0.1166],
        [ 0.0068,  0.2073, -0.0764],
        [ 0.1863,  0.0272,  0.0715]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.1359, -0.1070, -0.0656],
        [ 0.1469,  0.1961,  0.2168],
        [-0.0844, -0.0554, -0.1868],
        [ 0.1524, -0.1035,  0.2052],
        [ 0.0056, -0.0570, -0.0008],
        [-0.0875, -0.0738, -0.1165],
        [ 0.0068,  0.2073, -0.0764],
        [ 0.1862,  0.0270,  0.0714]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.1359, -0.1070, -0.0656],
        [ 0.1469,  0.1961,  0.2168],
        [-0.0844, -0.0554, -0.1868],
        [ 0.1524, -0.1035,  0.2052],
        [ 0.0056, -0.0570, -0.0008],
        [-0.0875, -0.0738, -0.1165],
        [ 0.0068,  0.2073, -0.0764],
        [ 0.1862,  0.0270,  0.0714]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0642, -0.0413, -0.2673, -0.3318,  0.0232,  0.1359, -0.3221,  0.0164],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0643, -0.0413, -0.2673, -0.3319,  0.0233,  0.1359, -0.3221,  0.0165],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0643, -0.0412, -0.2673, -0.3319,  0.0233,  0.1359, -0.3221,  0.0166],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0642, -0.0413, -0.2673, -0.3317,  0.0232,  0.1359, -0.3222,  0.0163],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0642, -0.0413, -0.2673, -0.3318,  0.0232,  0.1359, -0.3222,  0.0164],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0642, -0.0413, -0.2673, -0.3318,  0.0232,  0.1359, -0.3222,  0.0164],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0643, -0.0413, -0.2673, -0.3319,  0.0233,  0.1359, -0.3221,  0.0165],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0641, -0.0413, -0.2674, -0.3317,  0.0231,  0.1359, -0.3223,  0.0162],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0641, -0.0413, -0.2674, -0.3317,  0.0231,  0.1359, -0.3223,  0.0162],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0640, -0.0414, -0.2674, -0.3316,  0.0230,  0.1359, -0.3223,  0.0161],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0640, -0.0414, -0.2674, -0.3316,  0.0230,  0.1359, -0.3223,  0.0161],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0641, -0.0413, -0.2673, -0.3317,  0.0231,  0.1359, -0.3222,  0.0163],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0641, -0.0413, -0.2673, -0.3317,  0.0231,  0.1359, -0.3222,  0.0163],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0641, -0.0413, -0.2673, -0.3317,  0.0231,  0.1359, -0.3222,  0.0163],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0641, -0.0413, -0.2674, -0.3317,  0.0231,  0.1359, -0.3223,  0.0162],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0641, -0.0413, -0.2674, -0.3317,  0.0231,  0.1359, -0.3223,  0.0162],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.0270,  0.0132,  0.0028],
        [ 0.0585,  0.0707,  0.1165],
        [-0.0234,  0.0191, -0.0984],
        [-0.0437, -0.0310,  0.1300],
        [ 0.1622, -0.0298,  0.0903],
        [ 0.0126,  0.1341,  0.1807],
        [-0.1068, -0.0761, -0.0091],
        [ 0.1344,  0.0924,  0.1793]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0712, -0.0491,  0.2404, -0.1307, -0.0408, -0.1728, -0.1474,  0.0544],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0704, -0.0509,  0.2367, -0.1338, -0.0407, -0.1699, -0.1439,  0.0568],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0708, -0.0492,  0.2413, -0.1292, -0.0423, -0.1724, -0.1491,  0.0542],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0737, -0.0471,  0.2347, -0.1361, -0.0379, -0.1683, -0.1411,  0.0557],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0729, -0.0481,  0.2355, -0.1352, -0.0385, -0.1690, -0.1425,  0.0560],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0729, -0.0480,  0.2356, -0.1350, -0.0386, -0.1689, -0.1426,  0.0558],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0725, -0.0481,  0.2364, -0.1336, -0.0400, -0.1684, -0.1442,  0.0557],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0706, -0.0498,  0.2329, -0.1365, -0.0384, -0.1675, -0.1397,  0.0586],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0706, -0.0497,  0.2330, -0.1365, -0.0385, -0.1675, -0.1397,  0.0586],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0717, -0.0484,  0.2306, -0.1389, -0.0373, -0.1663, -0.1369,  0.0591],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0716, -0.0485,  0.2308, -0.1387, -0.0373, -0.1663, -0.1370,  0.0591],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0708, -0.0484,  0.2374, -0.1317, -0.0398, -0.1698, -0.1451,  0.0562],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0711, -0.0482,  0.2366, -0.1326, -0.0396, -0.1692, -0.1441,  0.0562],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0728, -0.0470,  0.2317, -0.1364, -0.0377, -0.1636, -0.1395,  0.0582],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0727, -0.0469,  0.2320, -0.1374, -0.0382, -0.1666, -0.1389,  0.0578],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0730, -0.0467,  0.2314, -0.1381, -0.0381, -0.1660, -0.1381,  0.0577],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-9.4633e-02,  9.4844e-02,  3.2986e-01],
        [ 1.7639e-02,  1.2347e-02, -1.6925e-01],
        [-1.9537e-01, -1.3720e-01, -1.9262e-01],
        [ 4.1647e-02, -1.7386e-04,  2.0894e-01],
        [ 5.6875e-02,  4.2083e-02,  5.9633e-02],
        [-8.5667e-02,  7.5313e-02,  1.3472e-01],
        [-2.3201e-02,  1.3329e-01,  4.6800e-02],
        [-2.6558e-01,  1.8634e-01, -1.4932e-02]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0948,  0.0975,  0.3327],
        [ 0.0177,  0.0090, -0.1708],
        [-0.1983, -0.1376, -0.1948],
        [ 0.0421, -0.0041,  0.2084],
        [ 0.0590,  0.0391,  0.0561],
        [-0.0856,  0.0738,  0.1355],
        [-0.0216,  0.1326,  0.0494],
        [-0.2662,  0.1868, -0.0132]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0947,  0.0950,  0.3309],
        [ 0.0160,  0.0118, -0.1689],
        [-0.1969, -0.1371, -0.1932],
        [ 0.0431, -0.0017,  0.2090],
        [ 0.0579,  0.0415,  0.0596],
        [-0.0851,  0.0741,  0.1360],
        [-0.0226,  0.1336,  0.0496],
        [-0.2661,  0.1864, -0.0145]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0961,  0.0969,  0.3258],
        [ 0.0212,  0.0108, -0.1708],
        [-0.1971, -0.1380, -0.1924],
        [ 0.0399, -0.0054,  0.2062],
        [ 0.0526,  0.0429,  0.0531],
        [-0.0894,  0.0776,  0.1321],
        [-0.0249,  0.1310,  0.0429],
        [-0.2653,  0.1867, -0.0105]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0954,  0.0964,  0.3275],
        [ 0.0199,  0.0111, -0.1712],
        [-0.1968, -0.1384, -0.1929],
        [ 0.0405, -0.0046,  0.2067],
        [ 0.0538,  0.0423,  0.0545],
        [-0.0888,  0.0775,  0.1325],
        [-0.0242,  0.1323,  0.0442],
        [-0.2661,  0.1871, -0.0113]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0954,  0.0962,  0.3274],
        [ 0.0198,  0.0112, -0.1710],
        [-0.1968, -0.1386, -0.1927],
        [ 0.0405, -0.0046,  0.2068],
        [ 0.0538,  0.0423,  0.0547],
        [-0.0888,  0.0771,  0.1326],
        [-0.0244,  0.1324,  0.0445],
        [-0.2660,  0.1870, -0.0115]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0955,  0.0966,  0.3285],
        [ 0.0183,  0.0106, -0.1707],
        [-0.1983, -0.1383, -0.1934],
        [ 0.0418, -0.0061,  0.2068],
        [ 0.0548,  0.0419,  0.0545],
        [-0.0882,  0.0760,  0.1338],
        [-0.0237,  0.1325,  0.0470],
        [-0.2665,  0.1870, -0.0109]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0973,  0.1013,  0.3312],
        [ 0.0201,  0.0079, -0.1728],
        [-0.2001, -0.1334, -0.1946],
        [ 0.0406, -0.0056,  0.2075],
        [ 0.0591,  0.0394,  0.0542],
        [-0.0851,  0.0719,  0.1353],
        [-0.0219,  0.1279,  0.0459],
        [-0.2657,  0.1848, -0.0097]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0973,  0.1013,  0.3311],
        [ 0.0202,  0.0079, -0.1727],
        [-0.2000, -0.1334, -0.1945],
        [ 0.0406, -0.0056,  0.2075],
        [ 0.0591,  0.0396,  0.0541],
        [-0.0851,  0.0719,  0.1353],
        [-0.0220,  0.1278,  0.0458],
        [-0.2656,  0.1847, -0.0098]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0971,  0.1021,  0.3294],
        [ 0.0212,  0.0070, -0.1741],
        [-0.1996, -0.1346, -0.1949],
        [ 0.0398, -0.0077,  0.2060],
        [ 0.0568,  0.0408,  0.0507],
        [-0.0868,  0.0748,  0.1337],
        [-0.0221,  0.1272,  0.0433],
        [-0.2659,  0.1848, -0.0072]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.0971,  0.1021,  0.3294],
        [ 0.0211,  0.0070, -0.1742],
        [-0.1996, -0.1345, -0.1950],
        [ 0.0398, -0.0077,  0.2059],
        [ 0.0569,  0.0409,  0.0507],
        [-0.0867,  0.0749,  0.1338],
        [-0.0221,  0.1273,  0.0433],
        [-0.2660,  0.1847, -0.0071]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0972,  0.0989,  0.3296],
        [ 0.0184,  0.0108, -0.1709],
        [-0.1987, -0.1331, -0.1931],
        [ 0.0414, -0.0031,  0.2083],
        [ 0.0580,  0.0418,  0.0580],
        [-0.0848,  0.0720,  0.1358],
        [-0.0230,  0.1290,  0.0461],
        [-0.2655,  0.1844, -0.0111]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0973,  0.0989,  0.3294],
        [ 0.0191,  0.0106, -0.1707],
        [-0.1987, -0.1335, -0.1931],
        [ 0.0410, -0.0034,  0.2083],
        [ 0.0577,  0.0414,  0.0577],
        [-0.0852,  0.0719,  0.1356],
        [-0.0232,  0.1289,  0.0460],
        [-0.2652,  0.1845, -0.0114]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.0973,  0.1010,  0.3266],
        [ 0.0196,  0.0082, -0.1723],
        [-0.2001, -0.1362, -0.1942],
        [ 0.0413, -0.0106,  0.2052],
        [ 0.0538,  0.0421,  0.0506],
        [-0.0884,  0.0753,  0.1338],
        [-0.0236,  0.1280,  0.0455],
        [-0.2662,  0.1852, -0.0065]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.0978,  0.1008,  0.3273],
        [ 0.0210,  0.0094, -0.1733],
        [-0.1998, -0.1338, -0.1934],
        [ 0.0400, -0.0070,  0.2060],
        [ 0.0553,  0.0422,  0.0528],
        [-0.0875,  0.0744,  0.1334],
        [-0.0237,  0.1278,  0.0429],
        [-0.2660,  0.1850, -0.0074]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.0979,  0.1006,  0.3272],
        [ 0.0216,  0.0093, -0.1729],
        [-0.1998, -0.1344, -0.1933],
        [ 0.0397, -0.0072,  0.2061],
        [ 0.0549,  0.0418,  0.0526],
        [-0.0879,  0.0742,  0.1333],
        [-0.0241,  0.1278,  0.0428],
        [-0.2657,  0.1851, -0.0079]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Batch 7 in Ensemble: 289_vi
Number of conformers in this batch before padding: 16
Number of conformers in this batch after padding: 16
Unique Atomic Numbers: [6, 1, 8, 15, 17, 7]
Average number of neighbors: 22.51

Processing batch of 16 conformers from Ensemble 1

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1442])
  Number of nodes: 64
  Number of edges: 1442

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1438])
  Number of nodes: 64
  Number of edges: 1438

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1442])
  Number of nodes: 64
  Number of edges: 1442

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1448])
  Number of nodes: 64
  Number of edges: 1448

Sanity check for conformer 4 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1454])
  Number of nodes: 64
  Number of edges: 1454

Sanity check for conformer 5 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1436])
  Number of nodes: 64
  Number of edges: 1436

Sanity check for conformer 6 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1432])
  Number of nodes: 64
  Number of edges: 1432

Sanity check for conformer 7 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1432])
  Number of nodes: 64
  Number of edges: 1432

Sanity check for conformer 8 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1430])
  Number of nodes: 64
  Number of edges: 1430

Sanity check for conformer 9 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1440])
  Number of nodes: 64
  Number of edges: 1440

Sanity check for conformer 10 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1442])
  Number of nodes: 64
  Number of edges: 1442

Sanity check for conformer 11 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1440])
  Number of nodes: 64
  Number of edges: 1440

Sanity check for conformer 12 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1440])
  Number of nodes: 64
  Number of edges: 1440

Sanity check for conformer 13 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1440])
  Number of nodes: 64
  Number of edges: 1440

Sanity check for conformer 14 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1444])
  Number of nodes: 64
  Number of edges: 1444

Sanity check for conformer 15 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1446])
  Number of nodes: 64
  Number of edges: 1446
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1442])
Edge attributes shape: torch.Size([1442, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1442, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1442, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1442, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1438])
Edge attributes shape: torch.Size([1438, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1438, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1438, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1438, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1442])
Edge attributes shape: torch.Size([1442, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1442, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1442, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1442, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1448])
Edge attributes shape: torch.Size([1448, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1448, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1448, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1448, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1454])
Edge attributes shape: torch.Size([1454, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1454, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1454, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1454, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 4 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1436])
Edge attributes shape: torch.Size([1436, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1436, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1436, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1436, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 5 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1432])
Edge attributes shape: torch.Size([1432, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1432, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1432, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1432, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 6 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1432])
Edge attributes shape: torch.Size([1432, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1432, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1432, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1432, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 7 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1430])
Edge attributes shape: torch.Size([1430, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1430, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1430, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1430, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 8 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1440])
Edge attributes shape: torch.Size([1440, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1440, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1440, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1440, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 9 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1442])
Edge attributes shape: torch.Size([1442, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1442, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1442, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1442, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 10 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1440])
Edge attributes shape: torch.Size([1440, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1440, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1440, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1440, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 11 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1440])
Edge attributes shape: torch.Size([1440, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1440, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1440, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1440, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 12 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1440])
Edge attributes shape: torch.Size([1440, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1440, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1440, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1440, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 13 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1444])
Edge attributes shape: torch.Size([1444, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1444, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1444, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1444, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 14 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1446])
Edge attributes shape: torch.Size([1446, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1446, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1446, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1446, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 15 embeddings shape: torch.Size([64, 32])
process_conformer_ensemble input shape: torch.Size([16, 64, 32])
Num conformers: 16, Num atoms: 64, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0015, std: 0.0287
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0005, std: 0.0003, min: 0.0002, max: 0.0009
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0650, std: 0.1847
    Vector mean: 0.0252, std: 0.1186
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0229, std: 0.2326
    Vector mean: -0.0068, std: 0.1552
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0001
  improved_deep_sets:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: 0.0469, std: 0.1963
    Vector mean: 0.0071, std: 0.0861
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0001, std: 0.0000, min: 0.0000, max: 0.0001
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([16, 8])
    Vector shape: torch.Size([16, 8, 3])
    Scalar mean: -0.0099, std: 0.1135
    Vector mean: -0.0343, std: 0.1230
    Conformer difference statistics (over 10 random pairs):
      Scalar - mean: 0.0016, std: 0.0006, min: 0.0003, max: 0.0023
      Vector - mean: 0.0020, std: 0.0007, min: 0.0003, max: 0.0028

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0147,  0.0145,  0.0188, -0.0006, -0.0305, -0.0185, -0.0528,  0.0407],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0147,  0.0145,  0.0187, -0.0006, -0.0306, -0.0185, -0.0528,  0.0407],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.0155,  0.0143,  0.0182,  0.0007, -0.0299, -0.0170, -0.0532,  0.0419],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0144,  0.0143,  0.0187, -0.0003, -0.0298, -0.0180, -0.0519,  0.0413],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0144,  0.0143,  0.0187, -0.0003, -0.0298, -0.0179, -0.0519,  0.0413],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.0161,  0.0149,  0.0180,  0.0004, -0.0304, -0.0175, -0.0539,  0.0415],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.0161,  0.0149,  0.0179,  0.0005, -0.0303, -0.0174, -0.0539,  0.0415],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0164,  0.0153,  0.0178,  0.0003, -0.0302, -0.0174, -0.0538,  0.0415],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0164,  0.0152,  0.0178,  0.0004, -0.0302, -0.0173, -0.0537,  0.0415],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0148,  0.0147,  0.0186, -0.0007, -0.0307, -0.0188, -0.0533,  0.0407],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0148,  0.0146,  0.0186, -0.0007, -0.0307, -0.0189, -0.0533,  0.0407],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0150,  0.0150,  0.0184, -0.0008, -0.0305, -0.0187, -0.0531,  0.0406],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0150,  0.0150,  0.0184, -0.0008, -0.0305, -0.0187, -0.0531,  0.0406],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0159,  0.0150,  0.0177,  0.0005, -0.0294, -0.0169, -0.0528,  0.0421],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0159,  0.0150,  0.0177,  0.0006, -0.0294, -0.0168, -0.0528,  0.0421],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0146,  0.0148,  0.0184, -0.0006, -0.0298, -0.0183, -0.0522,  0.0413],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3350,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3350,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3350,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3350,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.2692,  0.1703, -0.1975,  0.0758, -0.1441,  0.3351,  0.1175, -0.1066],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.1278, -0.0065, -0.0141],
        [ 0.0282,  0.2173,  0.0517],
        [ 0.0171,  0.0707,  0.0014],
        [-0.0286,  0.1965, -0.1345],
        [-0.2022,  0.0012,  0.0522],
        [-0.0502,  0.0459,  0.1414],
        [ 0.1541, -0.0160,  0.0890],
        [ 0.2312, -0.1765, -0.1928]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.2472,  0.2652, -0.3110,  0.0964,  0.1803,  0.0555,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.2472,  0.2652, -0.3110,  0.0964,  0.1803,  0.0555,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.2472,  0.2652, -0.3111,  0.0966,  0.1803,  0.0553,  0.3461, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.2472,  0.2652, -0.3111,  0.0964,  0.1803,  0.0554,  0.3461, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.2472,  0.2652, -0.3111,  0.0964,  0.1803,  0.0554,  0.3461, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.2472,  0.2652, -0.3111,  0.0965,  0.1802,  0.0554,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.2472,  0.2652, -0.3111,  0.0965,  0.1802,  0.0554,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.2472,  0.2652, -0.3111,  0.0964,  0.1802,  0.0554,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.2472,  0.2652, -0.3111,  0.0964,  0.1802,  0.0554,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.2471,  0.2652, -0.3110,  0.0963,  0.1803,  0.0555,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.2471,  0.2652, -0.3110,  0.0964,  0.1802,  0.0555,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.2472,  0.2652, -0.3110,  0.0963,  0.1803,  0.0555,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.2472,  0.2652, -0.3110,  0.0963,  0.1803,  0.0555,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.2472,  0.2652, -0.3111,  0.0965,  0.1803,  0.0553,  0.3461, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.2472,  0.2652, -0.3111,  0.0965,  0.1803,  0.0553,  0.3461, -0.2022],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.2472,  0.2652, -0.3111,  0.0964,  0.1803,  0.0554,  0.3460, -0.2022],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.1692,  0.1715,  0.1624],
        [ 0.1658, -0.0969, -0.2131],
        [-0.0879,  0.0243, -0.0740],
        [-0.2351,  0.1683, -0.1789],
        [-0.0879, -0.1674,  0.1924],
        [ 0.2012,  0.2146,  0.0926],
        [-0.0927, -0.0111, -0.1686],
        [ 0.2170, -0.1718, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.1692,  0.1716,  0.1624],
        [ 0.1658, -0.0969, -0.2131],
        [-0.0879,  0.0243, -0.0740],
        [-0.2351,  0.1683, -0.1789],
        [-0.0879, -0.1674,  0.1924],
        [ 0.2012,  0.2146,  0.0926],
        [-0.0927, -0.0111, -0.1686],
        [ 0.2170, -0.1718, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1657, -0.0969, -0.2130],
        [-0.0878,  0.0243, -0.0740],
        [-0.2352,  0.1685, -0.1789],
        [-0.0878, -0.1674,  0.1924],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0928, -0.0111, -0.1686],
        [ 0.2170, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1658, -0.0969, -0.2131],
        [-0.0879,  0.0243, -0.0740],
        [-0.2351,  0.1683, -0.1789],
        [-0.0878, -0.1674,  0.1924],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0927, -0.0111, -0.1686],
        [ 0.2170, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1658, -0.0969, -0.2131],
        [-0.0879,  0.0243, -0.0740],
        [-0.2351,  0.1683, -0.1789],
        [-0.0878, -0.1674,  0.1924],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0927, -0.0111, -0.1686],
        [ 0.2170, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1657, -0.0969, -0.2130],
        [-0.0878,  0.0243, -0.0740],
        [-0.2351,  0.1685, -0.1789],
        [-0.0878, -0.1674,  0.1925],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0928, -0.0111, -0.1687],
        [ 0.2169, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1657, -0.0969, -0.2130],
        [-0.0878,  0.0243, -0.0740],
        [-0.2351,  0.1685, -0.1789],
        [-0.0878, -0.1674,  0.1925],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0928, -0.0111, -0.1687],
        [ 0.2169, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1657, -0.0969, -0.2131],
        [-0.0878,  0.0242, -0.0740],
        [-0.2351,  0.1685, -0.1788],
        [-0.0878, -0.1674,  0.1925],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0928, -0.0111, -0.1687],
        [ 0.2169, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1657, -0.0969, -0.2131],
        [-0.0878,  0.0242, -0.0740],
        [-0.2351,  0.1685, -0.1788],
        [-0.0878, -0.1674,  0.1925],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0928, -0.0111, -0.1687],
        [ 0.2169, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.1692,  0.1716,  0.1624],
        [ 0.1658, -0.0968, -0.2131],
        [-0.0879,  0.0243, -0.0740],
        [-0.2351,  0.1683, -0.1789],
        [-0.0879, -0.1674,  0.1925],
        [ 0.2012,  0.2146,  0.0926],
        [-0.0927, -0.0111, -0.1686],
        [ 0.2169, -0.1718, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-0.1692,  0.1716,  0.1624],
        [ 0.1658, -0.0968, -0.2131],
        [-0.0879,  0.0243, -0.0740],
        [-0.2351,  0.1683, -0.1789],
        [-0.0879, -0.1674,  0.1925],
        [ 0.2012,  0.2146,  0.0926],
        [-0.0927, -0.0111, -0.1686],
        [ 0.2169, -0.1718, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.1692,  0.1716,  0.1624],
        [ 0.1658, -0.0969, -0.2131],
        [-0.0878,  0.0243, -0.0740],
        [-0.2351,  0.1684, -0.1789],
        [-0.0879, -0.1674,  0.1925],
        [ 0.2012,  0.2146,  0.0926],
        [-0.0927, -0.0111, -0.1687],
        [ 0.2169, -0.1718, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.1692,  0.1716,  0.1624],
        [ 0.1658, -0.0969, -0.2131],
        [-0.0878,  0.0243, -0.0740],
        [-0.2351,  0.1684, -0.1789],
        [-0.0879, -0.1674,  0.1925],
        [ 0.2012,  0.2146,  0.0926],
        [-0.0927, -0.0111, -0.1687],
        [ 0.2169, -0.1718, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1656, -0.0969, -0.2130],
        [-0.0878,  0.0243, -0.0740],
        [-0.2352,  0.1685, -0.1788],
        [-0.0878, -0.1674,  0.1924],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0928, -0.0112, -0.1687],
        [ 0.2170, -0.1720, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1656, -0.0969, -0.2130],
        [-0.0878,  0.0243, -0.0740],
        [-0.2352,  0.1685, -0.1788],
        [-0.0878, -0.1674,  0.1924],
        [ 0.2011,  0.2146,  0.0927],
        [-0.0928, -0.0112, -0.1687],
        [ 0.2170, -0.1720, -0.0178]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.1692,  0.1715,  0.1623],
        [ 0.1658, -0.0969, -0.2131],
        [-0.0879,  0.0243, -0.0740],
        [-0.2351,  0.1684, -0.1789],
        [-0.0878, -0.1674,  0.1924],
        [ 0.2011,  0.2146,  0.0926],
        [-0.0927, -0.0111, -0.1686],
        [ 0.2170, -0.1719, -0.0178]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0916,  0.2734, -0.1182, -0.2237,  0.1699,  0.1297, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0916,  0.2734, -0.1182, -0.2237,  0.1699,  0.1297, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0915,  0.2733, -0.1183, -0.2237,  0.1699,  0.1299, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0916,  0.2734, -0.1183, -0.2237,  0.1699,  0.1297, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([-0.0916,  0.2734, -0.1183, -0.2237,  0.1699,  0.1297, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-0.0915,  0.2733, -0.1183, -0.2237,  0.1699,  0.1299, -0.1091,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([-0.0915,  0.2733, -0.1183, -0.2237,  0.1699,  0.1299, -0.1091,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([-0.0915,  0.2733, -0.1183, -0.2237,  0.1699,  0.1299, -0.1091,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([-0.0915,  0.2733, -0.1183, -0.2237,  0.1699,  0.1299, -0.1091,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([-0.0916,  0.2734, -0.1182, -0.2237,  0.1699,  0.1297, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([-0.0916,  0.2734, -0.1182, -0.2237,  0.1699,  0.1297, -0.1091,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([-0.0916,  0.2734, -0.1182, -0.2237,  0.1699,  0.1297, -0.1091,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([-0.0916,  0.2734, -0.1182, -0.2237,  0.1699,  0.1297, -0.1091,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([-0.0915,  0.2733, -0.1183, -0.2237,  0.1699,  0.1300, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([-0.0915,  0.2733, -0.1183, -0.2237,  0.1699,  0.1300, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([-0.0916,  0.2734, -0.1183, -0.2237,  0.1699,  0.1297, -0.1090,  0.3446],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[ 0.2203, -0.0332, -0.0277],
        [-0.0710, -0.0019,  0.1756],
        [ 0.0709,  0.0246, -0.0923],
        [ 0.0298, -0.0093, -0.1137],
        [ 0.0367, -0.0631, -0.0748],
        [-0.0309,  0.0675,  0.1151],
        [ 0.0547,  0.0245,  0.0134],
        [-0.1556, -0.0515,  0.0629]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([16, 8])
    Vector embeddings shape: torch.Size([16, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.0005, -0.0360,  0.0878,  0.1608,  0.0939, -0.0735, -0.0986, -0.2107],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.0006, -0.0362,  0.0879,  0.1606,  0.0937, -0.0734, -0.0988, -0.2110],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0017, -0.0343,  0.0843,  0.1625,  0.0917, -0.0719, -0.0993, -0.2127],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.0007, -0.0372,  0.0867,  0.1607,  0.0930, -0.0719, -0.0979, -0.2120],
       grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([ 0.0005, -0.0372,  0.0867,  0.1608,  0.0933, -0.0716, -0.0979, -0.2119],
       grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([-2.0526e-05, -3.4188e-02,  8.4695e-02,  1.6189e-01,  9.0814e-02,
        -7.3789e-02, -9.8910e-02, -2.1213e-01], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([ 1.0885e-04, -3.4048e-02,  8.4390e-02,  1.6187e-01,  9.0184e-02,
        -7.4167e-02, -9.9294e-02, -2.1257e-01], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([ 0.0013, -0.0358,  0.0845,  0.1614,  0.0901, -0.0732, -0.0981, -0.2130],
       grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([ 0.0012, -0.0357,  0.0842,  0.1614,  0.0896, -0.0734, -0.0985, -0.2134],
       grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([ 0.0007, -0.0348,  0.0883,  0.1610,  0.0944, -0.0752, -0.0986, -0.2095],
       grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([ 0.0007, -0.0350,  0.0878,  0.1607,  0.0934, -0.0747, -0.0988, -0.2102],
       grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([ 0.0021, -0.0364,  0.0875,  0.1604,  0.0927, -0.0744, -0.0978, -0.2109],
       grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([ 0.0020, -0.0367,  0.0876,  0.1602,  0.0928, -0.0740, -0.0979, -0.2111],
       grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([ 0.0015, -0.0371,  0.0837,  0.1613,  0.0897, -0.0714, -0.0972, -0.2140],
       grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([ 0.0015, -0.0370,  0.0835,  0.1612,  0.0892, -0.0716, -0.0976, -0.2143],
       grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([ 0.0024, -0.0378,  0.0867,  0.1601,  0.0923, -0.0725, -0.0969, -0.2118],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0165,  0.0418, -0.0684],
        [-0.2702,  0.1858, -0.0004],
        [-0.1493, -0.1029,  0.0388],
        [ 0.0687, -0.1038,  0.0150],
        [ 0.0030,  0.1407,  0.0580],
        [ 0.0224, -0.1043,  0.0210],
        [-0.1639, -0.3074, -0.2165],
        [ 0.1545, -0.0412, -0.0262]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0165,  0.0417, -0.0684],
        [-0.2700,  0.1857, -0.0005],
        [-0.1491, -0.1032,  0.0389],
        [ 0.0684, -0.1035,  0.0148],
        [ 0.0028,  0.1406,  0.0580],
        [ 0.0223, -0.1042,  0.0209],
        [-0.1637, -0.3073, -0.2163],
        [ 0.1547, -0.0415, -0.0259]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0171,  0.0451, -0.0658],
        [-0.2702,  0.1817, -0.0029],
        [-0.1525, -0.0979,  0.0378],
        [ 0.0662, -0.1047,  0.0198],
        [ 0.0056,  0.1362,  0.0591],
        [ 0.0192, -0.1026,  0.0218],
        [-0.1636, -0.3086, -0.2187],
        [ 0.1534, -0.0375, -0.0256]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0164,  0.0437, -0.0686],
        [-0.2688,  0.1841, -0.0012],
        [-0.1483, -0.1016,  0.0379],
        [ 0.0656, -0.1055,  0.0154],
        [ 0.0024,  0.1397,  0.0560],
        [ 0.0223, -0.1026,  0.0211],
        [-0.1622, -0.3064, -0.2164],
        [ 0.1529, -0.0422, -0.0277]], grad_fn=<SelectBackward0>)
      Conformer 4:
tensor([[-0.0165,  0.0440, -0.0687],
        [-0.2688,  0.1841, -0.0008],
        [-0.1484, -0.1015,  0.0377],
        [ 0.0657, -0.1065,  0.0157],
        [ 0.0026,  0.1395,  0.0558],
        [ 0.0225, -0.1025,  0.0212],
        [-0.1621, -0.3064, -0.2167],
        [ 0.1528, -0.0419, -0.0283]], grad_fn=<SelectBackward0>)
      Conformer 5:
tensor([[-0.0161,  0.0432, -0.0655],
        [-0.2703,  0.1832, -0.0033],
        [-0.1521, -0.0988,  0.0390],
        [ 0.0673, -0.1011,  0.0180],
        [ 0.0050,  0.1390,  0.0590],
        [ 0.0198, -0.1042,  0.0210],
        [-0.1641, -0.3084, -0.2183],
        [ 0.1523, -0.0392, -0.0241]], grad_fn=<SelectBackward0>)
      Conformer 6:
tensor([[-0.0156,  0.0430, -0.0651],
        [-0.2703,  0.1831, -0.0036],
        [-0.1524, -0.0991,  0.0393],
        [ 0.0674, -0.1000,  0.0182],
        [ 0.0049,  0.1393,  0.0591],
        [ 0.0198, -0.1043,  0.0210],
        [-0.1645, -0.3085, -0.2187],
        [ 0.1523, -0.0398, -0.0233]], grad_fn=<SelectBackward0>)
      Conformer 7:
tensor([[-0.0155,  0.0431, -0.0662],
        [-0.2678,  0.1833, -0.0041],
        [-0.1506, -0.0988,  0.0395],
        [ 0.0647, -0.1010,  0.0167],
        [ 0.0030,  0.1402,  0.0562],
        [ 0.0205, -0.1030,  0.0203],
        [-0.1620, -0.3068, -0.2183],
        [ 0.1500, -0.0402, -0.0255]], grad_fn=<SelectBackward0>)
      Conformer 8:
tensor([[-0.0152,  0.0430, -0.0661],
        [-0.2677,  0.1831, -0.0045],
        [-0.1507, -0.0989,  0.0400],
        [ 0.0648, -0.1004,  0.0167],
        [ 0.0031,  0.1403,  0.0563],
        [ 0.0206, -0.1028,  0.0207],
        [-0.1625, -0.3068, -0.2188],
        [ 0.1501, -0.0405, -0.0249]], grad_fn=<SelectBackward0>)
      Conformer 9:
tensor([[-0.0163,  0.0405, -0.0685],
        [-0.2718,  0.1869, -0.0006],
        [-0.1498, -0.1027,  0.0392],
        [ 0.0712, -0.1024,  0.0144],
        [ 0.0039,  0.1423,  0.0583],
        [ 0.0228, -0.1057,  0.0215],
        [-0.1661, -0.3078, -0.2169],
        [ 0.1540, -0.0407, -0.0256]], grad_fn=<SelectBackward0>)
      Conformer 10:
tensor([[-1.6943e-02,  4.1115e-02, -6.7567e-02],
        [-2.7131e-01,  1.8659e-01, -1.8927e-04],
        [-1.4992e-01, -1.0299e-01,  3.9241e-02],
        [ 7.0261e-02, -1.0196e-01,  1.5269e-02],
        [ 3.6074e-03,  1.4116e-01,  5.9710e-02],
        [ 2.2175e-02, -1.0549e-01,  2.1204e-02],
        [-1.6522e-01, -3.0829e-01, -2.1624e-01],
        [ 1.5518e-01, -4.0966e-02, -2.4546e-02]], grad_fn=<SelectBackward0>)
      Conformer 11:
tensor([[-0.0159,  0.0406, -0.0683],
        [-0.2693,  0.1864, -0.0014],
        [-0.1484, -0.1028,  0.0396],
        [ 0.0680, -0.1015,  0.0134],
        [ 0.0022,  0.1427,  0.0565],
        [ 0.0226, -0.1047,  0.0207],
        [-0.1636, -0.3068, -0.2164],
        [ 0.1523, -0.0420, -0.0258]], grad_fn=<SelectBackward0>)
      Conformer 12:
tensor([[-0.0161,  0.0409, -0.0685],
        [-0.2689,  0.1863, -0.0012],
        [-0.1482, -0.1030,  0.0396],
        [ 0.0676, -0.1018,  0.0134],
        [ 0.0020,  0.1424,  0.0565],
        [ 0.0226, -0.1044,  0.0205],
        [-0.1632, -0.3066, -0.2161],
        [ 0.1526, -0.0421, -0.0259]], grad_fn=<SelectBackward0>)
      Conformer 13:
tensor([[-0.0159,  0.0454, -0.0667],
        [-0.2664,  0.1820, -0.0045],
        [-0.1495, -0.0975,  0.0388],
        [ 0.0618, -0.1037,  0.0175],
        [ 0.0020,  0.1391,  0.0543],
        [ 0.0211, -0.1010,  0.0205],
        [-0.1603, -0.3054, -0.2181],
        [ 0.1486, -0.0409, -0.0278]], grad_fn=<SelectBackward0>)
      Conformer 14:
tensor([[-0.0155,  0.0452, -0.0666],
        [-0.2662,  0.1819, -0.0048],
        [-0.1495, -0.0978,  0.0393],
        [ 0.0619, -0.1030,  0.0173],
        [ 0.0019,  0.1394,  0.0544],
        [ 0.0212, -0.1008,  0.0208],
        [-0.1607, -0.3054, -0.2185],
        [ 0.1487, -0.0413, -0.0271]], grad_fn=<SelectBackward0>)
      Conformer 15:
tensor([[-0.0159,  0.0425, -0.0691],
        [-0.2679,  0.1849, -0.0018],
        [-0.1471, -0.1018,  0.0387],
        [ 0.0651, -0.1036,  0.0134],
        [ 0.0014,  0.1418,  0.0546],
        [ 0.0229, -0.1029,  0.0206],
        [-0.1618, -0.3056, -0.2158],
        [ 0.1510, -0.0431, -0.0276]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Batch 8 in Ensemble: 289_vi
Number of conformers in this batch before padding: 4
Number of conformers in this batch after padding: 4
Unique Atomic Numbers: [6, 1, 8, 15, 17, 7]
Average number of neighbors: 22.70

Processing batch of 4 conformers from Ensemble 1

Sanity check for conformer 0 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1448])
  Number of nodes: 64
  Number of edges: 1448

Sanity check for conformer 1 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1452])
  Number of nodes: 64
  Number of edges: 1452

Sanity check for conformer 2 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1452])
  Number of nodes: 64
  Number of edges: 1452

Sanity check for conformer 3 in batch:
Conformer sanity check:
  Positions shape: torch.Size([64, 3])
  Atomic numbers shape: torch.Size([64])
  Edge index shape: torch.Size([2, 1460])
  Number of nodes: 64
  Number of edges: 1460
Initialized CustomNonLinearReadout with input irreps: 32x0e
EQUICAT Forward Pass Summary:
Number of interaction layers: 2
Input processing: node embedding, radial embedding, spherical harmonics
For each interaction layer:
  - Linear up-projection
  - Tensor product convolution
  - Message passing and aggregation
  - Linear projection
  - Equivariant product basis
Output: Node features (shape determined by model configuration)

NonLinear Readout Summary:
Input: 32x0e
3 linear layers with non-linear activations
Output: 8x0e+8x1o
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1448])
Edge attributes shape: torch.Size([1448, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1448, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1448, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1448, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 0 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1452])
Edge attributes shape: torch.Size([1452, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1452, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1452, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1452, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 1 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1452])
Edge attributes shape: torch.Size([1452, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1452, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1452, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1452, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 2 embeddings shape: torch.Size([64, 32])
----------------------------
Processing a new conformer
----------------------------
Positions shape: torch.Size([64, 3])
Edge index shape: torch.Size([2, 1460])
Edge attributes shape: torch.Size([1460, 4])
Node attributes shape: torch.Size([64, 6])
Edge features shape: torch.Size([1460, 8])
Initial Node features shape: torch.Size([64, 32])
Node features after linear up-projection in layer 1 shape: torch.Size([64, 32])
tp_weights shape: torch.Size([1460, 64])
Message shape: torch.Size([64, 128])
Node features after layer 1 shape: torch.Size([64, 128])
Node features after linear up-projection in layer 2 shape: torch.Size([64, 128])
tp_weights shape: torch.Size([1460, 128])
Message shape: torch.Size([64, 256])
Node features after layer 2 shape: torch.Size([64, 32])
EQUICAT output shape: torch.Size([64, 32])
EQUICAT output device: cpu
Input shape to CustomNonLinearReadout: torch.Size([64, 32])
Output shape from CustomNonLinearReadout: torch.Size([64, 32])
Final output shape after NonLinearReadout: torch.Size([64, 32])
Final output device: cpu
Conformer 3 embeddings shape: torch.Size([64, 32])
process_conformer_ensemble input shape: torch.Size([4, 64, 32])
Num conformers: 4, Num atoms: 64, Total dim: 32
Scalar dim: 8, Vector dim: 8

Sanity check for batch embeddings:
Embeddings sanity check:
  mean_pooling:
    Scalar shape: torch.Size([4, 8])
    Vector shape: torch.Size([4, 8, 3])
    Scalar mean: 0.0088, std: 0.0509
    Vector mean: 0.0000, std: 0.0000
    Conformer difference statistics (over 6 random pairs):
      Scalar - mean: 0.0060, std: 0.0052, min: 0.0008, max: 0.0115
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  deep_sets:
    Scalar shape: torch.Size([4, 8])
    Vector shape: torch.Size([4, 8, 3])
    Scalar mean: 0.0040, std: 0.2174
    Vector mean: 0.0020, std: 0.1023
    Conformer difference statistics (over 6 random pairs):
      Scalar - mean: 0.0002, std: 0.0002, min: 0.0000, max: 0.0004
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  self_attention:
    Scalar shape: torch.Size([4, 8])
    Vector shape: torch.Size([4, 8, 3])
    Scalar mean: -0.0597, std: 0.1757
    Vector mean: -0.0005, std: 0.1300
    Conformer difference statistics (over 6 random pairs):
      Scalar - mean: 0.0003, std: 0.0002, min: 0.0000, max: 0.0005
      Vector - mean: 0.0002, std: 0.0001, min: 0.0000, max: 0.0003
  improved_deep_sets:
    Scalar shape: torch.Size([4, 8])
    Vector shape: torch.Size([4, 8, 3])
    Scalar mean: -0.0771, std: 0.2399
    Vector mean: 0.0343, std: 0.1244
    Conformer difference statistics (over 6 random pairs):
      Scalar - mean: 0.0003, std: 0.0002, min: 0.0001, max: 0.0006
      Vector - mean: 0.0000, std: 0.0000, min: 0.0000, max: 0.0000
  improved_self_attention:
    Scalar shape: torch.Size([4, 8])
    Vector shape: torch.Size([4, 8, 3])
    Scalar mean: -0.0928, std: 0.1231
    Vector mean: -0.0291, std: 0.1182
    Conformer difference statistics (over 6 random pairs):
      Scalar - mean: 0.0026, std: 0.0012, min: 0.0006, max: 0.0046
      Vector - mean: 0.0018, std: 0.0007, min: 0.0006, max: 0.0027

Batch Detailed Embeddings:
  mean_pooling:
    Scalar embeddings shape: torch.Size([4, 8])
    Vector embeddings shape: torch.Size([4, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0500,  0.0188,  0.0270, -0.0246,  0.1040,  0.0315,  0.0010, -0.0357],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0599,  0.0276,  0.0156, -0.0023,  0.1184,  0.0290, -0.0133, -0.0440],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0605,  0.0277,  0.0166, -0.0043,  0.1191,  0.0295, -0.0123, -0.0447],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0617,  0.0262,  0.0160, -0.0064,  0.1192,  0.0296, -0.0118, -0.0451],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  deep_sets:
    Scalar embeddings shape: torch.Size([4, 8])
    Vector embeddings shape: torch.Size([4, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([ 0.1952,  0.2130,  0.2888, -0.0645, -0.2168,  0.0347, -0.3815, -0.0372],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([ 0.1953,  0.2130,  0.2899, -0.0648, -0.2155,  0.0341, -0.3815, -0.0376],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([ 0.1952,  0.2130,  0.2898, -0.0647, -0.2157,  0.0341, -0.3815, -0.0377],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([ 0.1952,  0.2131,  0.2897, -0.0647, -0.2157,  0.0342, -0.3815, -0.0377],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.1000, -0.0224,  0.0140],
        [-0.0684,  0.1714, -0.0542],
        [-0.0491,  0.1463, -0.0252],
        [-0.1583, -0.1582, -0.0179],
        [ 0.1025, -0.0835,  0.0208],
        [-0.0042, -0.0832,  0.1221],
        [ 0.1732, -0.0682, -0.0694],
        [ 0.1107,  0.1034, -0.1545]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.1000, -0.0224,  0.0140],
        [-0.0684,  0.1714, -0.0542],
        [-0.0491,  0.1463, -0.0252],
        [-0.1583, -0.1582, -0.0179],
        [ 0.1025, -0.0835,  0.0208],
        [-0.0042, -0.0832,  0.1221],
        [ 0.1732, -0.0682, -0.0694],
        [ 0.1107,  0.1034, -0.1545]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.1000, -0.0224,  0.0140],
        [-0.0684,  0.1714, -0.0542],
        [-0.0491,  0.1463, -0.0252],
        [-0.1583, -0.1582, -0.0179],
        [ 0.1025, -0.0835,  0.0208],
        [-0.0042, -0.0832,  0.1221],
        [ 0.1732, -0.0682, -0.0694],
        [ 0.1107,  0.1034, -0.1545]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.1000, -0.0224,  0.0140],
        [-0.0684,  0.1714, -0.0542],
        [-0.0491,  0.1463, -0.0252],
        [-0.1583, -0.1582, -0.0179],
        [ 0.1025, -0.0835,  0.0208],
        [-0.0042, -0.0832,  0.1221],
        [ 0.1732, -0.0682, -0.0694],
        [ 0.1107,  0.1034, -0.1545]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  self_attention:
    Scalar embeddings shape: torch.Size([4, 8])
    Vector embeddings shape: torch.Size([4, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.0492, -0.2883, -0.2247,  0.2011, -0.0922, -0.1587, -0.0909,  0.2241],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.0492, -0.2883, -0.2238,  0.2011, -0.0911, -0.1588, -0.0903,  0.2231],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.0492, -0.2883, -0.2239,  0.2011, -0.0912, -0.1589, -0.0904,  0.2231],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.0492, -0.2883, -0.2239,  0.2011, -0.0912, -0.1589, -0.0905,  0.2231],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.0096, -0.0533, -0.0961],
        [ 0.1832,  0.0954,  0.0297],
        [-0.1061,  0.2106,  0.1695],
        [ 0.0784, -0.1590, -0.1759],
        [ 0.0332,  0.0387, -0.1746],
        [ 0.1121, -0.0053,  0.1650],
        [-0.0355,  0.1451,  0.0348],
        [-0.0462, -0.1937, -0.2504]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.0096, -0.0535, -0.0964],
        [ 0.1831,  0.0959,  0.0297],
        [-0.1063,  0.2103,  0.1691],
        [ 0.0785, -0.1590, -0.1752],
        [ 0.0330,  0.0381, -0.1747],
        [ 0.1119, -0.0055,  0.1654],
        [-0.0357,  0.1449,  0.0352],
        [-0.0466, -0.1937, -0.2513]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.0096, -0.0535, -0.0964],
        [ 0.1832,  0.0958,  0.0298],
        [-0.1063,  0.2103,  0.1691],
        [ 0.0785, -0.1590, -0.1753],
        [ 0.0329,  0.0382, -0.1747],
        [ 0.1118, -0.0055,  0.1654],
        [-0.0357,  0.1449,  0.0352],
        [-0.0465, -0.1937, -0.2512]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.0096, -0.0535, -0.0964],
        [ 0.1832,  0.0959,  0.0298],
        [-0.1062,  0.2101,  0.1692],
        [ 0.0784, -0.1589, -0.1754],
        [ 0.0329,  0.0383, -0.1748],
        [ 0.1117, -0.0056,  0.1653],
        [-0.0356,  0.1449,  0.0351],
        [-0.0464, -0.1938, -0.2512]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_deep_sets:
    Scalar embeddings shape: torch.Size([4, 8])
    Vector embeddings shape: torch.Size([4, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.2336, -0.3296, -0.0252,  0.1838, -0.1262,  0.1150,  0.2495, -0.4531],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.2324, -0.3296, -0.0237,  0.1838, -0.1251,  0.1154,  0.2491, -0.4530],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-0.2325, -0.3296, -0.0239,  0.1838, -0.1252,  0.1154,  0.2491, -0.4530],
       grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.2328, -0.3297, -0.0244,  0.1839, -0.1253,  0.1153,  0.2491, -0.4529],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[ 0.0227,  0.0498,  0.1004],
        [-0.1203,  0.2611,  0.3123],
        [-0.1067, -0.0260, -0.2023],
        [ 0.0118,  0.2176, -0.0513],
        [-0.0279,  0.1467,  0.0466],
        [ 0.0328, -0.0098, -0.0887],
        [-0.0211,  0.1035, -0.0071],
        [-0.0338,  0.2308, -0.0172]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[ 0.0227,  0.0498,  0.1004],
        [-0.1203,  0.2611,  0.3123],
        [-0.1067, -0.0260, -0.2023],
        [ 0.0118,  0.2176, -0.0513],
        [-0.0279,  0.1467,  0.0466],
        [ 0.0328, -0.0098, -0.0887],
        [-0.0211,  0.1035, -0.0071],
        [-0.0338,  0.2308, -0.0172]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[ 0.0227,  0.0498,  0.1004],
        [-0.1203,  0.2611,  0.3123],
        [-0.1067, -0.0260, -0.2023],
        [ 0.0118,  0.2176, -0.0513],
        [-0.0279,  0.1467,  0.0466],
        [ 0.0328, -0.0098, -0.0887],
        [-0.0211,  0.1035, -0.0071],
        [-0.0338,  0.2308, -0.0172]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[ 0.0227,  0.0498,  0.1004],
        [-0.1203,  0.2611,  0.3123],
        [-0.1067, -0.0260, -0.2023],
        [ 0.0118,  0.2176, -0.0513],
        [-0.0279,  0.1467,  0.0466],
        [ 0.0328, -0.0098, -0.0887],
        [-0.0211,  0.1035, -0.0071],
        [-0.0338,  0.2308, -0.0172]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
  improved_self_attention:
    Scalar embeddings shape: torch.Size([4, 8])
    Vector embeddings shape: torch.Size([4, 8, 3])
    Scalar embeddings (all conformers, all features):
      Conformer 0:
tensor([-0.1831,  0.0316, -0.0422, -0.0957, -0.0057, -0.2861, -0.2386,  0.0658],
       grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([-0.1851,  0.0365, -0.0519, -0.0872,  0.0012, -0.2799, -0.2379,  0.0673],
       grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([-1.8453e-01,  3.6650e-02, -5.1186e-02, -8.8112e-02,  2.4742e-04,
        -2.8019e-01, -2.3733e-01,  6.6573e-02], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([-0.1839,  0.0343, -0.0466, -0.0911, -0.0009, -0.2822, -0.2381,  0.0672],
       grad_fn=<SelectBackward0>)
    Vector embeddings (all conformers, all features):
      Conformer 0:
tensor([[-0.1106, -0.0179,  0.0637],
        [ 0.1080, -0.0256, -0.2378],
        [-0.1442, -0.0031,  0.0929],
        [ 0.0377,  0.1259,  0.0738],
        [-0.2366,  0.0117, -0.0303],
        [-0.1041,  0.0449, -0.2846],
        [-0.1628,  0.1424, -0.0816],
        [-0.0218, -0.0353,  0.0995]], grad_fn=<SelectBackward0>)
      Conformer 1:
tensor([[-0.1064, -0.0165,  0.0564],
        [ 0.1115, -0.0246, -0.2350],
        [-0.1497, -0.0055,  0.0927],
        [ 0.0400,  0.1256,  0.0771],
        [-0.2368,  0.0149, -0.0237],
        [-0.0986,  0.0376, -0.2813],
        [-0.1662,  0.1396, -0.0861],
        [-0.0230, -0.0351,  0.0984]], grad_fn=<SelectBackward0>)
      Conformer 2:
tensor([[-0.1076, -0.0167,  0.0574],
        [ 0.1111, -0.0257, -0.2359],
        [-0.1490, -0.0051,  0.0927],
        [ 0.0390,  0.1264,  0.0763],
        [-0.2374,  0.0148, -0.0242],
        [-0.0991,  0.0381, -0.2822],
        [-0.1661,  0.1398, -0.0861],
        [-0.0221, -0.0355,  0.0978]], grad_fn=<SelectBackward0>)
      Conformer 3:
tensor([[-0.1070, -0.0179,  0.0563],
        [ 0.1103, -0.0272, -0.2371],
        [-0.1500, -0.0003,  0.0928],
        [ 0.0405,  0.1262,  0.0750],
        [-0.2374,  0.0125, -0.0290],
        [-0.0999,  0.0407, -0.2823],
        [-0.1652,  0.1423, -0.0852],
        [-0.0222, -0.0362,  0.0977]], grad_fn=<SelectBackward0>)
-----------------------------------------------------------------
==================================================

Finished processing Conformer Ensemble: 289_vi
==================================================

Total number of batches processed: 8
Total number of conformers processed: 113

Processing complete Ensemble 1
process_conformer_ensemble input shape: torch.Size([52, 64, 32])
Num conformers: 52, Num atoms: 64, Total dim: 32
Scalar dim: 8, Vector dim: 8

Ensemble Average Embeddings:
  mean_pooling:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [0.008529987186193466, 0.018225662410259247, 0.03328591212630272, -0.024489792063832283, 0.04721691831946373, 0.021046128123998642, -0.006679323967546225, 0.03161285072565079]
    Vector: [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
  deep_sets:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [0.018440065905451775, 0.3013751804828644, 0.1973598748445511, -0.1387905478477478, 0.04288019612431526, -0.07947932928800583, -0.020873181521892548, -0.1896401345729828]
    Vector: [[-0.18858836591243744, 0.1591959297657013, -0.02356007508933544], [-0.10583437234163284, -0.02012673392891884, -0.039236538112163544], [0.16304074227809906, -0.046628352254629135, 0.04672003537416458], [-0.17748793959617615, -0.2640456557273865, 0.15597841143608093], [-0.06097811833024025, -0.04247928038239479, 0.1536809504032135], [0.012701273895800114, -0.09245490282773972, -0.02295858785510063], [0.17039929330348969, -0.13072970509529114, 0.06661367416381836], [-0.12450612336397171, 0.12190409749746323, 0.035596851259469986]]
  self_attention:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [-0.31236445903778076, 0.01355736330151558, -0.16272327303886414, -0.3169645667076111, 0.09317506104707718, 0.27105405926704407, 0.24280063807964325, -0.13232110440731049]
    Vector: [[0.04947826638817787, -0.13938187062740326, 0.06861323863267899], [0.05934536084532738, 0.0289467703551054, -0.10166466236114502], [0.20284421741962433, -0.09254678338766098, 0.04120028391480446], [0.030910398811101913, -0.07865465432405472, -0.1393587589263916], [-0.02694084495306015, 0.040516339242458344, 0.02994595095515251], [0.2049652636051178, -0.012873321771621704, -0.14354558289051056], [0.1416807323694229, 0.03162423148751259, -0.1051148995757103], [0.10463042557239532, 0.05067899450659752, 0.026978086680173874]]
  improved_deep_sets:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [-0.17228569090366364, -0.14667557179927826, 0.09223243594169617, -0.01870722696185112, -0.07856735587120056, 0.07868706434965134, -0.1046963781118393, 0.22458282113075256]
    Vector: [[-0.10637820512056351, 0.17883077263832092, 0.30594727396965027], [0.11101031303405762, -0.035067226737737656, -0.028869161382317543], [-0.03994346410036087, -0.10103961080312729, 0.2865693271160126], [0.28412649035453796, 0.15030109882354736, -0.20301367342472076], [0.1129482164978981, -0.03646676987409592, -0.004529546946287155], [-0.2081422656774521, 0.11230798810720444, -0.07884897291660309], [-0.17226754128932953, -0.13020789623260498, 0.23376290500164032], [0.02263173647224903, -0.0838470458984375, -0.20270822942256927]]
  improved_self_attention:
    Scalar shape: torch.Size([1, 8])
    Vector shape: torch.Size([1, 8, 3])
    Scalar: [0.20976606011390686, 0.16832783818244934, -0.01745973899960518, -0.008661611936986446, -0.05821196734905243, 0.043868619948625565, -0.2621201276779175, -0.15190884470939636]
    Vector: [[0.019147144630551338, 0.02956811711192131, 0.2130737155675888], [0.05149082466959953, -0.032246485352516174, -0.17306438088417053], [0.18455861508846283, 0.1202302798628807, -0.18193070590496063], [0.040088336914777756, -0.11505023390054703, -0.006527924910187721], [0.037448231130838394, -0.07244943082332611, -0.06369395554065704], [0.056193239986896515, 0.0740785151720047, -0.12675684690475464], [-0.018739156424999237, -0.06763526797294617, -0.07115377485752106], [-0.0174349807202816, 0.06694061309099197, -0.11066509783267975]]
Visualization for mean_pooling saved as 'mean_pooling_visualization.png'
Visualization for deep_sets saved as 'deep_sets_visualization.png'
Visualization for self_attention saved as 'self_attention_visualization.png'
Visualization for improved_deep_sets saved as 'improved_deep_sets_visualization.png'
Visualization for improved_self_attention saved as 'improved_self_attention_visualization.png'
Finished processing all conformers in all ensembles.
